{"version":3,"sources":["/home/travis/build/holoviz/panel/panel/dist/lib/index.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/index.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/ace.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/layout.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/audio.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/deckgl.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/tooltips.js","/home/travis/build/holoviz/panel/panel/node_modules/@luma.gl/constants/src/index.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/html.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/json.js","/home/travis/build/holoviz/panel/panel/node_modules/json-formatter-js/dist/json-formatter.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/katex.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/mathjax.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/player.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/plotly.js","/home/travis/build/holoviz/panel/panel/node_modules/debounce/index.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/util.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/progress.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/state.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/vega.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/video.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/videostream.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/vtk/index.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/vtk/vtk.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/vtk/vtk_layout.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/vtk/vtk_utils.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/vtk/vtkvolume.js","/home/travis/build/holoviz/panel/panel/dist/lib/models/vtk/vtkaxes.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/index.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/common.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/mat2.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/mat2d.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/mat3.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/mat4.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/quat.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/vec3.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/vec4.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/quat2.js","/home/travis/build/holoviz/panel/panel/node_modules/gl-matrix/cjs/vec2.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACptlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrjcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACphUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACthlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChtacA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrsrplrvoufile":"generated.js","sourceRoot":"","sourcesContent":["/* index.js */ function _(require, module, exports) {\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var Panel = __importStar(require(\"4d02676c49\") /* ./models */);\n    exports.Panel = Panel;\n    var base_1 = require(\"@bokehjs/base\");\n    base_1.register_models(Panel);\n}\n","/* models/index.js */ function _(require, module, exports) {\n    function __export(m) {\n        for (var p in m)\n            if (!exports.hasOwnProperty(p))\n                exports[p] = m[p];\n    }\n    var ace_1 = require(\"ff4b91e885\") /* ./ace */;\n    exports.AcePlot = ace_1.AcePlot;\n    var audio_1 = require(\"12e90a1b7e\") /* ./audio */;\n    exports.Audio = audio_1.Audio;\n    var deckgl_1 = require(\"cf3b018c7a\") /* ./deckgl */;\n    exports.DeckGLPlot = deckgl_1.DeckGLPlot;\n    var html_1 = require(\"70a2bb70ef\") /* ./html */;\n    exports.HTML = html_1.HTML;\n    var json_1 = require(\"dac8d750fa\") /* ./json */;\n    exports.JSON = json_1.JSON;\n    var katex_1 = require(\"c81021c8fd\") /* ./katex */;\n    exports.KaTeX = katex_1.KaTeX;\n    var mathjax_1 = require(\"a93ded647d\") /* ./mathjax */;\n    exports.MathJax = mathjax_1.MathJax;\n    var player_1 = require(\"98100899bc\") /* ./player */;\n    exports.Player = player_1.Player;\n    var plotly_1 = require(\"7d6e800353\") /* ./plotly */;\n    exports.PlotlyPlot = plotly_1.PlotlyPlot;\n    var progress_1 = require(\"d9b3a262de\") /* ./progress */;\n    exports.Progress = progress_1.Progress;\n    var state_1 = require(\"4b4afba86a\") /* ./state */;\n    exports.State = state_1.State;\n    var vega_1 = require(\"14b669e6fc\") /* ./vega */;\n    exports.VegaPlot = vega_1.VegaPlot;\n    var video_1 = require(\"71a2bbec38\") /* ./video */;\n    exports.Video = video_1.Video;\n    var videostream_1 = require(\"76bc93d621\") /* ./videostream */;\n    exports.VideoStream = videostream_1.VideoStream;\n    __export(require(\"63070bc9ce\") /* ./vtk */);\n}\n","/* models/ace.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var dom_1 = require(\"@bokehjs/core/dom\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    function ID() {\n        // Math.random should be unique because of its seeding algorithm.\n        // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n        // after the decimal.\n        return '_' + Math.random().toString(36).substr(2, 9);\n    }\n    var AcePlotView = /** @class */ (function (_super) {\n        __extends(AcePlotView, _super);\n        function AcePlotView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AcePlotView.prototype.initialize = function () {\n            _super.prototype.initialize.call(this);\n            this._ace = window.ace;\n            this._container = dom_1.div({\n                id: ID(),\n                style: {\n                    width: \"100%\",\n                    height: \"100%\"\n                }\n            });\n        };\n        AcePlotView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.code.change, function () { return _this._update_code_from_model(); });\n            this.connect(this.model.properties.theme.change, function () { return _this._update_theme(); });\n            this.connect(this.model.properties.language.change, function () { return _this._update_language(); });\n            this.connect(this.model.properties.annotations.change, function () { return _this._add_annotations(); });\n            this.connect(this.model.properties.readonly.change, function () {\n                _this._editor.setReadOnly(_this.model.readonly);\n            });\n        };\n        AcePlotView.prototype.render = function () {\n            var _this = this;\n            _super.prototype.render.call(this);\n            if (!(this._container === this.el.childNodes[0]))\n                this.el.appendChild(this._container);\n            this._container.textContent = this.model.code;\n            this._editor = this._ace.edit(this._container.id);\n            this._editor.setTheme(\"ace/theme/\" + (\"\" + this.model.theme));\n            this._editor.session.setMode(\"ace/mode/\" + (\"\" + this.model.language));\n            this._editor.setReadOnly(this.model.readonly);\n            this._langTools = this._ace.require('ace/ext/language_tools');\n            this._editor.setOptions({\n                enableBasicAutocompletion: true,\n                enableSnippets: true,\n                fontFamily: \"monospace\",\n            });\n            this._editor.on('change', function () { return _this._update_code_from_editor(); });\n        };\n        AcePlotView.prototype._update_code_from_model = function () {\n            if (this._editor && this._editor.getValue() != this.model.code)\n                this._editor.setValue(this.model.code);\n        };\n        AcePlotView.prototype._update_code_from_editor = function () {\n            if (this._editor.getValue() != this.model.code) {\n                this.model.code = this._editor.getValue();\n            }\n        };\n        AcePlotView.prototype._update_theme = function () {\n            this._editor.setTheme(\"ace/theme/\" + (\"\" + this.model.theme));\n        };\n        AcePlotView.prototype._update_language = function () {\n            this._editor.session.setMode(\"ace/mode/\" + (\"\" + this.model.language));\n        };\n        AcePlotView.prototype._add_annotations = function () {\n            this._editor.session.setAnnotations(this.model.annotations);\n        };\n        AcePlotView.prototype.after_layout = function () {\n            _super.prototype.after_layout.call(this);\n            this._editor.resize();\n        };\n        AcePlotView.__name__ = \"AcePlotView\";\n        return AcePlotView;\n    }(layout_1.PanelHTMLBoxView));\n    exports.AcePlotView = AcePlotView;\n    var AcePlot = /** @class */ (function (_super) {\n        __extends(AcePlot, _super);\n        function AcePlot(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        AcePlot.init_AcePlot = function () {\n            this.prototype.default_view = AcePlotView;\n            this.define({\n                code: [p.String],\n                language: [p.String, 'python'],\n                theme: [p.String, 'chrome'],\n                annotations: [p.Array, []],\n                readonly: [p.Boolean, false]\n            });\n            this.override({\n                height: 300,\n                width: 300\n            });\n        };\n        AcePlot.__name__ = \"AcePlot\";\n        AcePlot.__module__ = \"panel.models.ace\";\n        return AcePlot;\n    }(html_box_1.HTMLBox));\n    exports.AcePlot = AcePlot;\n    AcePlot.init_AcePlot();\n}\n","/* models/layout.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var layoutable_1 = require(\"@bokehjs/core/layout/layoutable\");\n    var types_1 = require(\"@bokehjs/core/layout/types\");\n    var dom_1 = require(\"@bokehjs/core/dom\");\n    var markup_1 = require(\"@bokehjs/models/widgets/markup\");\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    function set_size(el, model) {\n        var width_policy = model.width != null ? \"fixed\" : \"fit\";\n        var height_policy = model.height != null ? \"fixed\" : \"fit\";\n        var sizing_mode = model.sizing_mode;\n        if (sizing_mode != null) {\n            if (sizing_mode == \"fixed\")\n                width_policy = height_policy = \"fixed\";\n            else if (sizing_mode == \"stretch_both\")\n                width_policy = height_policy = \"max\";\n            else if (sizing_mode == \"stretch_width\")\n                width_policy = \"max\";\n            else if (sizing_mode == \"stretch_height\")\n                height_policy = \"max\";\n            else {\n                switch (sizing_mode) {\n                    case \"scale_width\":\n                        width_policy = \"max\";\n                        height_policy = \"min\";\n                        break;\n                    case \"scale_height\":\n                        width_policy = \"min\";\n                        height_policy = \"max\";\n                        break;\n                    case \"scale_both\":\n                        width_policy = \"max\";\n                        height_policy = \"max\";\n                        break;\n                    default:\n                        throw new Error(\"unreachable\");\n                }\n            }\n        }\n        if (width_policy == \"fixed\" && model.width)\n            el.style.width = model.width + \"px\";\n        else if (width_policy == \"max\")\n            el.style.width = \"100%\";\n        if (height_policy == \"fixed\" && model.height)\n            el.style.height = model.height + \"px\";\n        else if (height_policy == \"max\")\n            el.style.height = \"100%\";\n    }\n    exports.set_size = set_size;\n    var CachedVariadicBox = /** @class */ (function (_super) {\n        __extends(CachedVariadicBox, _super);\n        function CachedVariadicBox(el, sizing_mode, changed) {\n            var _this = _super.call(this) || this;\n            _this.el = el;\n            _this.sizing_mode = sizing_mode;\n            _this.changed = changed;\n            _this._cache = {};\n            _this._cache_count = {};\n            return _this;\n        }\n        CachedVariadicBox.prototype._measure = function (viewport) {\n            var _this = this;\n            var key = [viewport.width, viewport.height, this.sizing_mode];\n            var key_str = key.toString();\n            // If sizing mode is responsive and has changed since last render\n            // we have to wait until second rerender to use cached value\n            var min_count = (!this.changed || (this.sizing_mode == 'fixed') || (this.sizing_mode == null)) ? 0 : 1;\n            if ((key_str in this._cache) && (this._cache_count[key_str] >= min_count)) {\n                this._cache_count[key_str] = this._cache_count[key_str] + 1;\n                return this._cache[key_str];\n            }\n            var bounded = new types_1.Sizeable(viewport).bounded_to(this.sizing.size);\n            var size = dom_1.sized(this.el, bounded, function () {\n                var content = new types_1.Sizeable(dom_1.content_size(_this.el));\n                var _a = dom_1.extents(_this.el), border = _a.border, padding = _a.padding;\n                return content.grow_by(border).grow_by(padding).map(Math.ceil);\n            });\n            this._cache[key_str] = size;\n            this._cache_count[key_str] = 0;\n            return size;\n        };\n        CachedVariadicBox.__name__ = \"CachedVariadicBox\";\n        return CachedVariadicBox;\n    }(layoutable_1.Layoutable));\n    exports.CachedVariadicBox = CachedVariadicBox;\n    var PanelMarkupView = /** @class */ (function (_super) {\n        __extends(PanelMarkupView, _super);\n        function PanelMarkupView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PanelMarkupView.prototype._update_layout = function () {\n            var changed = ((this._prev_sizing_mode !== undefined) &&\n                (this._prev_sizing_mode !== this.model.sizing_mode));\n            this._prev_sizing_mode = this.model.sizing_mode;\n            this.layout = new CachedVariadicBox(this.el, this.model.sizing_mode, changed);\n            this.layout.set_sizing(this.box_sizing());\n        };\n        PanelMarkupView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            set_size(this.markup_el, this.model);\n        };\n        PanelMarkupView.__name__ = \"PanelMarkupView\";\n        return PanelMarkupView;\n    }(markup_1.MarkupView));\n    exports.PanelMarkupView = PanelMarkupView;\n    var PanelHTMLBoxView = /** @class */ (function (_super) {\n        __extends(PanelHTMLBoxView, _super);\n        function PanelHTMLBoxView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PanelHTMLBoxView.prototype._update_layout = function () {\n            var changed = ((this._prev_sizing_mode !== undefined) &&\n                (this._prev_sizing_mode !== this.model.sizing_mode));\n            this._prev_sizing_mode = this.model.sizing_mode;\n            this.layout = new CachedVariadicBox(this.el, this.model.sizing_mode, changed);\n            this.layout.set_sizing(this.box_sizing());\n        };\n        PanelHTMLBoxView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            set_size(this.el, this.model);\n        };\n        PanelHTMLBoxView.__name__ = \"PanelHTMLBoxView\";\n        return PanelHTMLBoxView;\n    }(html_box_1.HTMLBoxView));\n    exports.PanelHTMLBoxView = PanelHTMLBoxView;\n}\n","/* models/audio.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var AudioView = /** @class */ (function (_super) {\n        __extends(AudioView, _super);\n        function AudioView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AudioView.prototype.initialize = function () {\n            _super.prototype.initialize.call(this);\n            this._blocked = false;\n            this._setting = false;\n            this._time = Date.now();\n        };\n        AudioView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.loop.change, function () { return _this.set_loop(); });\n            this.connect(this.model.properties.paused.change, function () { return _this.set_paused(); });\n            this.connect(this.model.properties.time.change, function () { return _this.set_time(); });\n            this.connect(this.model.properties.value.change, function () { return _this.set_value(); });\n            this.connect(this.model.properties.volume.change, function () { return _this.set_volume(); });\n        };\n        AudioView.prototype.render = function () {\n            var _this = this;\n            _super.prototype.render.call(this);\n            this.audioEl = document.createElement('audio');\n            this.audioEl.controls = true;\n            this.audioEl.src = this.model.value;\n            this.audioEl.currentTime = this.model.time;\n            this.audioEl.loop = this.model.loop;\n            if (this.model.volume != null)\n                this.audioEl.volume = this.model.volume / 100;\n            else\n                this.model.volume = this.audioEl.volume * 100;\n            this.audioEl.onpause = function () { return _this.model.paused = true; };\n            this.audioEl.onplay = function () { return _this.model.paused = false; };\n            this.audioEl.ontimeupdate = function () { return _this.update_time(_this); };\n            this.audioEl.onvolumechange = function () { return _this.update_volume(_this); };\n            this.el.appendChild(this.audioEl);\n            if (!this.model.paused)\n                this.audioEl.play();\n        };\n        AudioView.prototype.update_time = function (view) {\n            if (view._setting) {\n                view._setting = false;\n                return;\n            }\n            if ((Date.now() - view._time) < view.model.throttle)\n                return;\n            view._blocked = true;\n            view.model.time = view.audioEl.currentTime;\n            view._time = Date.now();\n        };\n        AudioView.prototype.update_volume = function (view) {\n            if (view._setting) {\n                view._setting = false;\n                return;\n            }\n            view._blocked = true;\n            view.model.volume = view.audioEl.volume * 100;\n        };\n        AudioView.prototype.set_loop = function () {\n            this.audioEl.loop = this.model.loop;\n        };\n        AudioView.prototype.set_paused = function () {\n            if (!this.audioEl.paused && this.model.paused)\n                this.audioEl.pause();\n            if (this.audioEl.paused && !this.model.paused)\n                this.audioEl.play();\n        };\n        AudioView.prototype.set_volume = function () {\n            if (this._blocked) {\n                this._blocked = false;\n                return;\n            }\n            this._setting = true;\n            if (this.model.volume != null) {\n                this.audioEl.volume = this.model.volume / 100;\n            }\n        };\n        AudioView.prototype.set_time = function () {\n            if (this._blocked) {\n                this._blocked = false;\n                return;\n            }\n            this._setting = true;\n            this.audioEl.currentTime = this.model.time;\n        };\n        AudioView.prototype.set_value = function () {\n            this.audioEl.src = this.model.value;\n        };\n        AudioView.__name__ = \"AudioView\";\n        return AudioView;\n    }(layout_1.PanelHTMLBoxView));\n    exports.AudioView = AudioView;\n    var Audio = /** @class */ (function (_super) {\n        __extends(Audio, _super);\n        function Audio(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        Audio.init_Audio = function () {\n            this.prototype.default_view = AudioView;\n            this.define({\n                loop: [p.Boolean, false],\n                paused: [p.Boolean, true],\n                time: [p.Number, 0],\n                throttle: [p.Number, 250],\n                value: [p.Any, ''],\n                volume: [p.Number, null],\n            });\n        };\n        Audio.__name__ = \"Audio\";\n        Audio.__module__ = \"panel.models.widgets\";\n        return Audio;\n    }(html_box_1.HTMLBox));\n    exports.Audio = Audio;\n    Audio.init_Audio();\n}\n","/* models/deckgl.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign = (this && this.__assign) || function () {\n        __assign = Object.assign || function (t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var __importDefault = (this && this.__importDefault) || function (mod) {\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\n    };\n    var dom_1 = require(\"@bokehjs/core/dom\");\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var tooltips_1 = require(\"27d3545a25\") /* ./tooltips */;\n    var constants_1 = __importDefault(require(\"093eb75864\") /* @luma.gl/constants */);\n    var deck = window.deck;\n    var mapboxgl = window.mapboxgl;\n    var loaders = window.loaders;\n    function extractClasses() {\n        // Get classes for registration from standalone deck.gl\n        var classesDict = {};\n        var classes = Object.keys(deck).filter(function (x) { return x.charAt(0) === x.charAt(0).toUpperCase(); });\n        for (var _i = 0, classes_1 = classes; _i < classes_1.length; _i++) {\n            var cls = classes_1[_i];\n            classesDict[cls] = deck[cls];\n        }\n        return classesDict;\n    }\n    var DeckGLPlotView = /** @class */ (function (_super) {\n        __extends(DeckGLPlotView, _super);\n        function DeckGLPlotView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        DeckGLPlotView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            var _a = this.model.properties, data = _a.data, mapbox_api_key = _a.mapbox_api_key, tooltip = _a.tooltip, layers = _a.layers, initialViewState = _a.initialViewState, data_sources = _a.data_sources;\n            this.on_change([mapbox_api_key, tooltip], function () { return _this.render(); });\n            this.on_change([data, initialViewState], function () { return _this.updateDeck(); });\n            this.on_change([layers], function () { return _this._update_layers(); });\n            this.on_change([data_sources], function () { return _this._connect_sources(true); });\n            this._layer_map = {};\n            this._connected = [];\n            this._connect_sources();\n        };\n        DeckGLPlotView.prototype._update_layers = function () {\n            this._layer_map = {};\n            this._update_data(true);\n        };\n        DeckGLPlotView.prototype._connect_sources = function (render) {\n            var _this = this;\n            if (render === void 0) {\n                render = false;\n            }\n            for (var _i = 0, _a = this.model.data_sources; _i < _a.length; _i++) {\n                var cds = _a[_i];\n                if (this._connected.indexOf(cds) < 0) {\n                    this.connect(cds.properties.data.change, function () { return _this._update_data(true); });\n                    this._connected.push(cds);\n                }\n            }\n            this._update_data(render);\n        };\n        DeckGLPlotView.prototype.initialize = function () {\n            _super.prototype.initialize.call(this);\n            if (deck.JSONConverter) {\n                var CSVLoader = loaders.CSVLoader, Tile3DLoader = loaders.Tile3DLoader;\n                loaders.registerLoaders([Tile3DLoader, CSVLoader]);\n                var jsonConverterConfiguration = {\n                    classes: extractClasses(),\n                    // Will be resolved as `<enum-name>.<enum-value>`\n                    enumerations: {\n                        COORDINATE_SYSTEM: deck.COORDINATE_SYSTEM,\n                        GL: constants_1.default\n                    },\n                    // Constants that should be resolved with the provided values by JSON converter\n                    constants: {\n                        Tile3DLoader: Tile3DLoader\n                    }\n                };\n                this.jsonConverter = new deck.JSONConverter({\n                    configuration: jsonConverterConfiguration\n                });\n            }\n        };\n        DeckGLPlotView.prototype._update_data = function (render) {\n            if (render === void 0) {\n                render = true;\n            }\n            var n = 0;\n            for (var _i = 0, _a = this.model.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                var cds = void 0;\n                n += 1;\n                if ((n - 1) in this._layer_map) {\n                    cds = this.model.data_sources[this._layer_map[n - 1]];\n                }\n                else if (typeof layer.data != \"number\")\n                    continue;\n                else {\n                    this._layer_map[n - 1] = layer.data;\n                    cds = this.model.data_sources[layer.data];\n                }\n                var data = [];\n                var columns = cds.columns();\n                for (var i = 0; i < cds.data[columns[0]].length; i++) {\n                    var item = {};\n                    for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n                        var column = columns_1[_b];\n                        var shape = cds._shapes[column];\n                        if ((shape !== undefined) && (shape.length > 1) && (typeof shape[0] == \"number\"))\n                            item[column] = cds.data[column].slice(i * shape[1], i * shape[1] + shape[1]);\n                        else\n                            item[column] = cds.data[column][i];\n                    }\n                    data.push(item);\n                }\n                layer.data = data;\n            }\n            if (render)\n                this.updateDeck();\n        };\n        DeckGLPlotView.prototype._on_click_event = function (event) {\n            var clickState = {\n                coordinate: event.coordinate,\n                lngLat: event.lngLat,\n                index: event.index\n            };\n            this.model.clickState = clickState;\n        };\n        DeckGLPlotView.prototype._on_hover_event = function (event) {\n            var hoverState = {\n                coordinate: event.coordinate,\n                lngLat: event.lngLat,\n                index: event.index\n            };\n            this.model.hoverState = hoverState;\n        };\n        DeckGLPlotView.prototype._on_viewState_event = function (event) {\n            this.model.viewState = event.viewState;\n        };\n        DeckGLPlotView.prototype.getData = function () {\n            var _this = this;\n            var data = __assign(__assign({}, this.model.data), { layers: this.model.layers, initialViewState: this.model.initialViewState, onViewStateChange: function (event) { return _this._on_viewState_event(event); }, onClick: function (event) { return _this._on_click_event(event); }, onHover: function (event) { return _this._on_hover_event(event); } });\n            return data;\n        };\n        DeckGLPlotView.prototype.updateDeck = function () {\n            if (!this.deckGL) {\n                this.render();\n                return;\n            }\n            var data = this.getData();\n            if (deck.updateDeck) {\n                deck.updateDeck(data, this.deckGL);\n            }\n            else {\n                var results = this.jsonConverter.convert(data);\n                this.deckGL.setProps(results);\n            }\n        };\n        DeckGLPlotView.prototype.createDeck = function (_a) {\n            var mapboxApiKey = _a.mapboxApiKey, container = _a.container, jsonInput = _a.jsonInput, tooltip = _a.tooltip;\n            var deckgl;\n            try {\n                var props = this.jsonConverter.convert(jsonInput);\n                var getTooltip = tooltips_1.makeTooltip(tooltip);\n                deckgl = new deck.DeckGL(__assign(__assign({}, props), { map: mapboxgl, mapboxApiAccessToken: mapboxApiKey, container: container,\n                    getTooltip: getTooltip }));\n            }\n            catch (err) {\n                console.error(err);\n            }\n            return deckgl;\n        };\n        DeckGLPlotView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            var container = dom_1.div({ class: \"deckgl\" });\n            layout_1.set_size(container, this.model);\n            var MAPBOX_API_KEY = this.model.mapbox_api_key;\n            var tooltip = this.model.tooltip;\n            var data = this.getData();\n            if (deck.createDeck) {\n                this.deckGL = deck.createDeck({\n                    mapboxApiKey: MAPBOX_API_KEY,\n                    container: container,\n                    jsonInput: data,\n                    tooltip: tooltip\n                });\n            }\n            else {\n                this.deckGL = this.createDeck({\n                    mapboxApiKey: MAPBOX_API_KEY,\n                    container: container,\n                    jsonInput: data,\n                    tooltip: tooltip\n                });\n            }\n            this.el.appendChild(container);\n        };\n        DeckGLPlotView.__name__ = \"DeckGLPlotView\";\n        return DeckGLPlotView;\n    }(layout_1.PanelHTMLBoxView));\n    exports.DeckGLPlotView = DeckGLPlotView;\n    var DeckGLPlot = /** @class */ (function (_super) {\n        __extends(DeckGLPlot, _super);\n        function DeckGLPlot(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        DeckGLPlot.init_DeckGLPlot = function () {\n            this.prototype.default_view = DeckGLPlotView;\n            this.define({\n                data: [p.Any],\n                data_sources: [p.Array, []],\n                clickState: [p.Any],\n                hoverState: [p.Any],\n                initialViewState: [p.Any],\n                layers: [p.Array, []],\n                mapbox_api_key: [p.String],\n                tooltip: [p.Any],\n                viewState: [p.Any],\n            });\n            this.override({\n                height: 400,\n                width: 600\n            });\n        };\n        DeckGLPlot.__name__ = \"DeckGLPlot\";\n        DeckGLPlot.__module__ = \"panel.models.deckgl\";\n        return DeckGLPlot;\n    }(html_box_1.HTMLBox));\n    exports.DeckGLPlot = DeckGLPlot;\n    DeckGLPlot.init_DeckGLPlot();\n}\n","/* models/tooltips.js */ function _(require, module, exports) {\n    /* global document */\n    var lastPickedObject;\n    var lastTooltip;\n    var DEFAULT_STYLE = {\n        fontFamily: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\n        display: 'flex',\n        flex: 'wrap',\n        maxWidth: '500px',\n        flexDirection: 'column',\n        zIndex: 2\n    };\n    function getDiv() {\n        return document.createElement('div');\n    }\n    function getTooltipDefault(pickedInfo) {\n        if (!pickedInfo.picked) {\n            return null;\n        }\n        if (pickedInfo.object === lastPickedObject) {\n            return lastTooltip;\n        }\n        var tooltip = {\n            html: tabularize(pickedInfo.object),\n            style: DEFAULT_STYLE\n        };\n        lastTooltip = tooltip;\n        lastPickedObject = pickedInfo.object;\n        return tooltip;\n    }\n    exports.getTooltipDefault = getTooltipDefault;\n    var EXCLUDES = new Set(['position', 'index']);\n    function tabularize(json) {\n        // Turns a JSON object of picked info into HTML for a tooltip\n        var dataTable = getDiv();\n        // Creates rows of two columns for the tooltip\n        for (var key in json) {\n            if (EXCLUDES.has(key)) {\n                continue; // eslint-disable-line\n            }\n            var header = getDiv();\n            header.className = 'header';\n            header.textContent = key;\n            var valueElement = getDiv();\n            valueElement.className = 'value';\n            valueElement.textContent = toText(json[key]);\n            var row = getDiv();\n            setStyles(row, header, valueElement);\n            row.appendChild(header);\n            row.appendChild(valueElement);\n            dataTable.appendChild(row);\n        }\n        return dataTable.innerHTML;\n    }\n    exports.tabularize = tabularize;\n    function setStyles(row, header, value) {\n        // Set default tooltip style\n        Object.assign(header.style, {\n            fontWeight: 700,\n            marginRight: '10px',\n            flex: '1 1 0%'\n        });\n        Object.assign(value.style, {\n            flex: 'none',\n            maxWidth: '250px',\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis'\n        });\n        Object.assign(row.style, {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'stretch'\n        });\n    }\n    function toText(jsonValue) {\n        // Set contents of table value, trimming for certain types of data\n        var text;\n        if (Array.isArray(jsonValue) && jsonValue.length > 4) {\n            text = \"Array<\" + jsonValue.length + \">\";\n        }\n        else if (typeof jsonValue === 'string') {\n            text = jsonValue;\n        }\n        else if (typeof jsonValue === 'number') {\n            text = String(jsonValue);\n        }\n        else {\n            try {\n                text = JSON.stringify(jsonValue);\n            }\n            catch (err) {\n                text = '<Non-Serializable Object>';\n            }\n        }\n        var MAX_LENGTH = 50;\n        if (text.length > MAX_LENGTH) {\n            text = text.slice(0, MAX_LENGTH);\n        }\n        return text;\n    }\n    exports.toText = toText;\n    function substituteIn(template, json) {\n        var output = template;\n        for (var key in json) {\n            output = output.replace(\"{\" + key + \"}\", json[key]);\n        }\n        return output;\n    }\n    exports.substituteIn = substituteIn;\n    function makeTooltip(tooltip) {\n        /*\n         * If explictly no tooltip passed by user, return null\n         * If a JSON object passed, return a tooltip based on that object\n         *   We expect the user has passed a string template that will take pickedInfo keywords\n         * If a boolean passed, return the default tooltip\n         */\n        if (!tooltip) {\n            return null;\n        }\n        if (tooltip.html || tooltip.text) {\n            return function (pickedInfo) {\n                if (!pickedInfo.picked) {\n                    return null;\n                }\n                var formattedTooltip = {\n                    style: tooltip.style || DEFAULT_STYLE\n                };\n                if (tooltip.html) {\n                    formattedTooltip.html = substituteIn(tooltip.html, pickedInfo.object);\n                }\n                else {\n                    formattedTooltip.text = substituteIn(tooltip.text, pickedInfo.object);\n                }\n                return formattedTooltip;\n            };\n        }\n        return getTooltipDefault;\n    }\n    exports.makeTooltip = makeTooltip;\n}\n","/* @luma.gl/constants/src/index.js */ function _(require, module, exports) {\n    // GL constants, copied from Mozilla documentation\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\n    // Standard WebGL 1 constants\n    // These constants are defined on the WebGLRenderingContext interface.\n    /* eslint-disable key-spacing, max-len, no-inline-comments, camelcase */\n    // eslint-disable-next-line\n    module.exports = {\n        // Clearing buffers\n        // Constants passed to clear() to clear buffer masks.\n        DEPTH_BUFFER_BIT: 0x00000100,\n        STENCIL_BUFFER_BIT: 0x00000400,\n        COLOR_BUFFER_BIT: 0x00004000,\n        // Rendering primitives\n        // Constants passed to drawElements() or drawArrays() to specify what kind of primitive to render.\n        POINTS: 0x0000,\n        LINES: 0x0001,\n        LINE_LOOP: 0x0002,\n        LINE_STRIP: 0x0003,\n        TRIANGLES: 0x0004,\n        TRIANGLE_STRIP: 0x0005,\n        TRIANGLE_FAN: 0x0006,\n        // Blending modes\n        // Constants passed to blendFunc() or blendFuncSeparate() to specify the blending mode (for both, RBG and alpha, or separately).\n        ZERO: 0,\n        ONE: 1,\n        SRC_COLOR: 0x0300,\n        ONE_MINUS_SRC_COLOR: 0x0301,\n        SRC_ALPHA: 0x0302,\n        ONE_MINUS_SRC_ALPHA: 0x0303,\n        DST_ALPHA: 0x0304,\n        ONE_MINUS_DST_ALPHA: 0x0305,\n        DST_COLOR: 0x0306,\n        ONE_MINUS_DST_COLOR: 0x0307,\n        SRC_ALPHA_SATURATE: 0x0308,\n        CONSTANT_COLOR: 0x8001,\n        ONE_MINUS_CONSTANT_COLOR: 0x8002,\n        CONSTANT_ALPHA: 0x8003,\n        ONE_MINUS_CONSTANT_ALPHA: 0x8004,\n        // Blending equations\n        // Constants passed to blendEquation() or blendEquationSeparate() to control\n        // how the blending is calculated (for both, RBG and alpha, or separately).\n        FUNC_ADD: 0x8006,\n        FUNC_SUBTRACT: 0x800a,\n        FUNC_REVERSE_SUBTRACT: 0x800b,\n        // Getting GL parameter information\n        // Constants passed to getParameter() to specify what information to return.\n        BLEND_EQUATION: 0x8009,\n        BLEND_EQUATION_RGB: 0x8009,\n        BLEND_EQUATION_ALPHA: 0x883d,\n        BLEND_DST_RGB: 0x80c8,\n        BLEND_SRC_RGB: 0x80c9,\n        BLEND_DST_ALPHA: 0x80ca,\n        BLEND_SRC_ALPHA: 0x80cb,\n        BLEND_COLOR: 0x8005,\n        ARRAY_BUFFER_BINDING: 0x8894,\n        ELEMENT_ARRAY_BUFFER_BINDING: 0x8895,\n        LINE_WIDTH: 0x0b21,\n        ALIASED_POINT_SIZE_RANGE: 0x846d,\n        ALIASED_LINE_WIDTH_RANGE: 0x846e,\n        CULL_FACE_MODE: 0x0b45,\n        FRONT_FACE: 0x0b46,\n        DEPTH_RANGE: 0x0b70,\n        DEPTH_WRITEMASK: 0x0b72,\n        DEPTH_CLEAR_VALUE: 0x0b73,\n        DEPTH_FUNC: 0x0b74,\n        STENCIL_CLEAR_VALUE: 0x0b91,\n        STENCIL_FUNC: 0x0b92,\n        STENCIL_FAIL: 0x0b94,\n        STENCIL_PASS_DEPTH_FAIL: 0x0b95,\n        STENCIL_PASS_DEPTH_PASS: 0x0b96,\n        STENCIL_REF: 0x0b97,\n        STENCIL_VALUE_MASK: 0x0b93,\n        STENCIL_WRITEMASK: 0x0b98,\n        STENCIL_BACK_FUNC: 0x8800,\n        STENCIL_BACK_FAIL: 0x8801,\n        STENCIL_BACK_PASS_DEPTH_FAIL: 0x8802,\n        STENCIL_BACK_PASS_DEPTH_PASS: 0x8803,\n        STENCIL_BACK_REF: 0x8ca3,\n        STENCIL_BACK_VALUE_MASK: 0x8ca4,\n        STENCIL_BACK_WRITEMASK: 0x8ca5,\n        VIEWPORT: 0x0ba2,\n        SCISSOR_BOX: 0x0c10,\n        COLOR_CLEAR_VALUE: 0x0c22,\n        COLOR_WRITEMASK: 0x0c23,\n        UNPACK_ALIGNMENT: 0x0cf5,\n        PACK_ALIGNMENT: 0x0d05,\n        MAX_TEXTURE_SIZE: 0x0d33,\n        MAX_VIEWPORT_DIMS: 0x0d3a,\n        SUBPIXEL_BITS: 0x0d50,\n        RED_BITS: 0x0d52,\n        GREEN_BITS: 0x0d53,\n        BLUE_BITS: 0x0d54,\n        ALPHA_BITS: 0x0d55,\n        DEPTH_BITS: 0x0d56,\n        STENCIL_BITS: 0x0d57,\n        POLYGON_OFFSET_UNITS: 0x2a00,\n        POLYGON_OFFSET_FACTOR: 0x8038,\n        TEXTURE_BINDING_2D: 0x8069,\n        SAMPLE_BUFFERS: 0x80a8,\n        SAMPLES: 0x80a9,\n        SAMPLE_COVERAGE_VALUE: 0x80aa,\n        SAMPLE_COVERAGE_INVERT: 0x80ab,\n        COMPRESSED_TEXTURE_FORMATS: 0x86a3,\n        VENDOR: 0x1f00,\n        RENDERER: 0x1f01,\n        VERSION: 0x1f02,\n        IMPLEMENTATION_COLOR_READ_TYPE: 0x8b9a,\n        IMPLEMENTATION_COLOR_READ_FORMAT: 0x8b9b,\n        BROWSER_DEFAULT_WEBGL: 0x9244,\n        // Buffers\n        // Constants passed to bufferData(), bufferSubData(), bindBuffer(), or\n        // getBufferParameter().\n        STATIC_DRAW: 0x88e4,\n        STREAM_DRAW: 0x88e0,\n        DYNAMIC_DRAW: 0x88e8,\n        ARRAY_BUFFER: 0x8892,\n        ELEMENT_ARRAY_BUFFER: 0x8893,\n        BUFFER_SIZE: 0x8764,\n        BUFFER_USAGE: 0x8765,\n        // Vertex attributes\n        // Constants passed to getVertexAttrib().\n        CURRENT_VERTEX_ATTRIB: 0x8626,\n        VERTEX_ATTRIB_ARRAY_ENABLED: 0x8622,\n        VERTEX_ATTRIB_ARRAY_SIZE: 0x8623,\n        VERTEX_ATTRIB_ARRAY_STRIDE: 0x8624,\n        VERTEX_ATTRIB_ARRAY_TYPE: 0x8625,\n        VERTEX_ATTRIB_ARRAY_NORMALIZED: 0x886a,\n        VERTEX_ATTRIB_ARRAY_POINTER: 0x8645,\n        VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 0x889f,\n        // Culling\n        // Constants passed to cullFace().\n        CULL_FACE: 0x0b44,\n        FRONT: 0x0404,\n        BACK: 0x0405,\n        FRONT_AND_BACK: 0x0408,\n        // Enabling and disabling\n        // Constants passed to enable() or disable().\n        BLEND: 0x0be2,\n        DEPTH_TEST: 0x0b71,\n        DITHER: 0x0bd0,\n        POLYGON_OFFSET_FILL: 0x8037,\n        SAMPLE_ALPHA_TO_COVERAGE: 0x809e,\n        SAMPLE_COVERAGE: 0x80a0,\n        SCISSOR_TEST: 0x0c11,\n        STENCIL_TEST: 0x0b90,\n        // Errors\n        // Constants returned from getError().\n        NO_ERROR: 0,\n        INVALID_ENUM: 0x0500,\n        INVALID_VALUE: 0x0501,\n        INVALID_OPERATION: 0x0502,\n        OUT_OF_MEMORY: 0x0505,\n        CONTEXT_LOST_WEBGL: 0x9242,\n        // Front face directions\n        // Constants passed to frontFace().\n        CW: 0x0900,\n        CCW: 0x0901,\n        // Hints\n        // Constants passed to hint()\n        DONT_CARE: 0x1100,\n        FASTEST: 0x1101,\n        NICEST: 0x1102,\n        GENERATE_MIPMAP_HINT: 0x8192,\n        // Data types\n        BYTE: 0x1400,\n        UNSIGNED_BYTE: 0x1401,\n        SHORT: 0x1402,\n        UNSIGNED_SHORT: 0x1403,\n        INT: 0x1404,\n        UNSIGNED_INT: 0x1405,\n        FLOAT: 0x1406,\n        DOUBLE: 0x140a,\n        // Pixel formats\n        DEPTH_COMPONENT: 0x1902,\n        ALPHA: 0x1906,\n        RGB: 0x1907,\n        RGBA: 0x1908,\n        LUMINANCE: 0x1909,\n        LUMINANCE_ALPHA: 0x190a,\n        // Pixel types\n        // UNSIGNED_BYTE: 0x1401,\n        UNSIGNED_SHORT_4_4_4_4: 0x8033,\n        UNSIGNED_SHORT_5_5_5_1: 0x8034,\n        UNSIGNED_SHORT_5_6_5: 0x8363,\n        // Shaders\n        // Constants passed to createShader() or getShaderParameter()\n        FRAGMENT_SHADER: 0x8b30,\n        VERTEX_SHADER: 0x8b31,\n        COMPILE_STATUS: 0x8b81,\n        DELETE_STATUS: 0x8b80,\n        LINK_STATUS: 0x8b82,\n        VALIDATE_STATUS: 0x8b83,\n        ATTACHED_SHADERS: 0x8b85,\n        ACTIVE_ATTRIBUTES: 0x8b89,\n        ACTIVE_UNIFORMS: 0x8b86,\n        MAX_VERTEX_ATTRIBS: 0x8869,\n        MAX_VERTEX_UNIFORM_VECTORS: 0x8dfb,\n        MAX_VARYING_VECTORS: 0x8dfc,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0x8b4d,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0x8b4c,\n        MAX_TEXTURE_IMAGE_UNITS: 0x8872,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0x8dfd,\n        SHADER_TYPE: 0x8b4f,\n        SHADING_LANGUAGE_VERSION: 0x8b8c,\n        CURRENT_PROGRAM: 0x8b8d,\n        // Depth or stencil tests\n        // Constants passed to depthFunc() or stencilFunc().\n        NEVER: 0x0200,\n        ALWAYS: 0x0207,\n        LESS: 0x0201,\n        EQUAL: 0x0202,\n        LEQUAL: 0x0203,\n        GREATER: 0x0204,\n        GEQUAL: 0x0206,\n        NOTEQUAL: 0x0205,\n        // Stencil actions\n        // Constants passed to stencilOp().\n        KEEP: 0x1e00,\n        REPLACE: 0x1e01,\n        INCR: 0x1e02,\n        DECR: 0x1e03,\n        INVERT: 0x150a,\n        INCR_WRAP: 0x8507,\n        DECR_WRAP: 0x8508,\n        // Textures\n        // Constants passed to texParameteri(),\n        // texParameterf(), bindTexture(), texImage2D(), and others.\n        NEAREST: 0x2600,\n        LINEAR: 0x2601,\n        NEAREST_MIPMAP_NEAREST: 0x2700,\n        LINEAR_MIPMAP_NEAREST: 0x2701,\n        NEAREST_MIPMAP_LINEAR: 0x2702,\n        LINEAR_MIPMAP_LINEAR: 0x2703,\n        TEXTURE_MAG_FILTER: 0x2800,\n        TEXTURE_MIN_FILTER: 0x2801,\n        TEXTURE_WRAP_S: 0x2802,\n        TEXTURE_WRAP_T: 0x2803,\n        TEXTURE_2D: 0x0de1,\n        TEXTURE: 0x1702,\n        TEXTURE_CUBE_MAP: 0x8513,\n        TEXTURE_BINDING_CUBE_MAP: 0x8514,\n        TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515,\n        TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516,\n        TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517,\n        TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518,\n        TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519,\n        TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851a,\n        MAX_CUBE_MAP_TEXTURE_SIZE: 0x851c,\n        // TEXTURE0 - 31 0x84C0 - 0x84DF A texture unit.\n        TEXTURE0: 0x84c0,\n        ACTIVE_TEXTURE: 0x84e0,\n        REPEAT: 0x2901,\n        CLAMP_TO_EDGE: 0x812f,\n        MIRRORED_REPEAT: 0x8370,\n        // Emulation\n        TEXTURE_WIDTH: 0x1000,\n        TEXTURE_HEIGHT: 0x1001,\n        // Uniform types\n        FLOAT_VEC2: 0x8b50,\n        FLOAT_VEC3: 0x8b51,\n        FLOAT_VEC4: 0x8b52,\n        INT_VEC2: 0x8b53,\n        INT_VEC3: 0x8b54,\n        INT_VEC4: 0x8b55,\n        BOOL: 0x8b56,\n        BOOL_VEC2: 0x8b57,\n        BOOL_VEC3: 0x8b58,\n        BOOL_VEC4: 0x8b59,\n        FLOAT_MAT2: 0x8b5a,\n        FLOAT_MAT3: 0x8b5b,\n        FLOAT_MAT4: 0x8b5c,\n        SAMPLER_2D: 0x8b5e,\n        SAMPLER_CUBE: 0x8b60,\n        // Shader precision-specified types\n        LOW_FLOAT: 0x8df0,\n        MEDIUM_FLOAT: 0x8df1,\n        HIGH_FLOAT: 0x8df2,\n        LOW_INT: 0x8df3,\n        MEDIUM_INT: 0x8df4,\n        HIGH_INT: 0x8df5,\n        // Framebuffers and renderbuffers\n        FRAMEBUFFER: 0x8d40,\n        RENDERBUFFER: 0x8d41,\n        RGBA4: 0x8056,\n        RGB5_A1: 0x8057,\n        RGB565: 0x8d62,\n        DEPTH_COMPONENT16: 0x81a5,\n        STENCIL_INDEX: 0x1901,\n        STENCIL_INDEX8: 0x8d48,\n        DEPTH_STENCIL: 0x84f9,\n        RENDERBUFFER_WIDTH: 0x8d42,\n        RENDERBUFFER_HEIGHT: 0x8d43,\n        RENDERBUFFER_INTERNAL_FORMAT: 0x8d44,\n        RENDERBUFFER_RED_SIZE: 0x8d50,\n        RENDERBUFFER_GREEN_SIZE: 0x8d51,\n        RENDERBUFFER_BLUE_SIZE: 0x8d52,\n        RENDERBUFFER_ALPHA_SIZE: 0x8d53,\n        RENDERBUFFER_DEPTH_SIZE: 0x8d54,\n        RENDERBUFFER_STENCIL_SIZE: 0x8d55,\n        FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 0x8cd0,\n        FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 0x8cd1,\n        FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 0x8cd2,\n        FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 0x8cd3,\n        COLOR_ATTACHMENT0: 0x8ce0,\n        DEPTH_ATTACHMENT: 0x8d00,\n        STENCIL_ATTACHMENT: 0x8d20,\n        DEPTH_STENCIL_ATTACHMENT: 0x821a,\n        NONE: 0,\n        FRAMEBUFFER_COMPLETE: 0x8cd5,\n        FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 0x8cd6,\n        FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 0x8cd7,\n        FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 0x8cd9,\n        FRAMEBUFFER_UNSUPPORTED: 0x8cdd,\n        FRAMEBUFFER_BINDING: 0x8ca6,\n        RENDERBUFFER_BINDING: 0x8ca7,\n        READ_FRAMEBUFFER: 0x8ca8,\n        DRAW_FRAMEBUFFER: 0x8ca9,\n        MAX_RENDERBUFFER_SIZE: 0x84e8,\n        INVALID_FRAMEBUFFER_OPERATION: 0x0506,\n        // Pixel storage modes\n        // Constants passed to pixelStorei().\n        UNPACK_FLIP_Y_WEBGL: 0x9240,\n        UNPACK_PREMULTIPLY_ALPHA_WEBGL: 0x9241,\n        UNPACK_COLORSPACE_CONVERSION_WEBGL: 0x9243,\n        // /////////////////////////////////////////////////////\n        // Additional constants defined WebGL 2\n        // These constants are defined on the WebGL2RenderingContext interface.\n        // All WebGL 1 constants are also available in a WebGL 2 context.\n        // /////////////////////////////////////////////////////\n        // Getting GL parameter information\n        // Constants passed to getParameter()\n        // to specify what information to return.\n        READ_BUFFER: 0x0c02,\n        UNPACK_ROW_LENGTH: 0x0cf2,\n        UNPACK_SKIP_ROWS: 0x0cf3,\n        UNPACK_SKIP_PIXELS: 0x0cf4,\n        PACK_ROW_LENGTH: 0x0d02,\n        PACK_SKIP_ROWS: 0x0d03,\n        PACK_SKIP_PIXELS: 0x0d04,\n        TEXTURE_BINDING_3D: 0x806a,\n        UNPACK_SKIP_IMAGES: 0x806d,\n        UNPACK_IMAGE_HEIGHT: 0x806e,\n        MAX_3D_TEXTURE_SIZE: 0x8073,\n        MAX_ELEMENTS_VERTICES: 0x80e8,\n        MAX_ELEMENTS_INDICES: 0x80e9,\n        MAX_TEXTURE_LOD_BIAS: 0x84fd,\n        MAX_FRAGMENT_UNIFORM_COMPONENTS: 0x8b49,\n        MAX_VERTEX_UNIFORM_COMPONENTS: 0x8b4a,\n        MAX_ARRAY_TEXTURE_LAYERS: 0x88ff,\n        MIN_PROGRAM_TEXEL_OFFSET: 0x8904,\n        MAX_PROGRAM_TEXEL_OFFSET: 0x8905,\n        MAX_VARYING_COMPONENTS: 0x8b4b,\n        FRAGMENT_SHADER_DERIVATIVE_HINT: 0x8b8b,\n        RASTERIZER_DISCARD: 0x8c89,\n        VERTEX_ARRAY_BINDING: 0x85b5,\n        MAX_VERTEX_OUTPUT_COMPONENTS: 0x9122,\n        MAX_FRAGMENT_INPUT_COMPONENTS: 0x9125,\n        MAX_SERVER_WAIT_TIMEOUT: 0x9111,\n        MAX_ELEMENT_INDEX: 0x8d6b,\n        // Textures\n        // Constants passed to texParameteri(),\n        // texParameterf(), bindTexture(), texImage2D(), and others.\n        RED: 0x1903,\n        RGB8: 0x8051,\n        RGBA8: 0x8058,\n        RGB10_A2: 0x8059,\n        TEXTURE_3D: 0x806f,\n        TEXTURE_WRAP_R: 0x8072,\n        TEXTURE_MIN_LOD: 0x813a,\n        TEXTURE_MAX_LOD: 0x813b,\n        TEXTURE_BASE_LEVEL: 0x813c,\n        TEXTURE_MAX_LEVEL: 0x813d,\n        TEXTURE_COMPARE_MODE: 0x884c,\n        TEXTURE_COMPARE_FUNC: 0x884d,\n        SRGB: 0x8c40,\n        SRGB8: 0x8c41,\n        SRGB8_ALPHA8: 0x8c43,\n        COMPARE_REF_TO_TEXTURE: 0x884e,\n        RGBA32F: 0x8814,\n        RGB32F: 0x8815,\n        RGBA16F: 0x881a,\n        RGB16F: 0x881b,\n        TEXTURE_2D_ARRAY: 0x8c1a,\n        TEXTURE_BINDING_2D_ARRAY: 0x8c1d,\n        R11F_G11F_B10F: 0x8c3a,\n        RGB9_E5: 0x8c3d,\n        RGBA32UI: 0x8d70,\n        RGB32UI: 0x8d71,\n        RGBA16UI: 0x8d76,\n        RGB16UI: 0x8d77,\n        RGBA8UI: 0x8d7c,\n        RGB8UI: 0x8d7d,\n        RGBA32I: 0x8d82,\n        RGB32I: 0x8d83,\n        RGBA16I: 0x8d88,\n        RGB16I: 0x8d89,\n        RGBA8I: 0x8d8e,\n        RGB8I: 0x8d8f,\n        RED_INTEGER: 0x8d94,\n        RGB_INTEGER: 0x8d98,\n        RGBA_INTEGER: 0x8d99,\n        R8: 0x8229,\n        RG8: 0x822b,\n        R16F: 0x822d,\n        R32F: 0x822e,\n        RG16F: 0x822f,\n        RG32F: 0x8230,\n        R8I: 0x8231,\n        R8UI: 0x8232,\n        R16I: 0x8233,\n        R16UI: 0x8234,\n        R32I: 0x8235,\n        R32UI: 0x8236,\n        RG8I: 0x8237,\n        RG8UI: 0x8238,\n        RG16I: 0x8239,\n        RG16UI: 0x823a,\n        RG32I: 0x823b,\n        RG32UI: 0x823c,\n        R8_SNORM: 0x8f94,\n        RG8_SNORM: 0x8f95,\n        RGB8_SNORM: 0x8f96,\n        RGBA8_SNORM: 0x8f97,\n        RGB10_A2UI: 0x906f,\n        /* covered by extension\n        COMPRESSED_R11_EAC : 0x9270,\n        COMPRESSED_SIGNED_R11_EAC: 0x9271,\n        COMPRESSED_RG11_EAC: 0x9272,\n        COMPRESSED_SIGNED_RG11_EAC : 0x9273,\n        COMPRESSED_RGB8_ETC2 : 0x9274,\n        COMPRESSED_SRGB8_ETC2: 0x9275,\n        COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 : 0x9276,\n        COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC : 0x9277,\n        COMPRESSED_RGBA8_ETC2_EAC: 0x9278,\n        COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : 0x9279,\n        */\n        TEXTURE_IMMUTABLE_FORMAT: 0x912f,\n        TEXTURE_IMMUTABLE_LEVELS: 0x82df,\n        // Pixel types\n        UNSIGNED_INT_2_10_10_10_REV: 0x8368,\n        UNSIGNED_INT_10F_11F_11F_REV: 0x8c3b,\n        UNSIGNED_INT_5_9_9_9_REV: 0x8c3e,\n        FLOAT_32_UNSIGNED_INT_24_8_REV: 0x8dad,\n        UNSIGNED_INT_24_8: 0x84fa,\n        HALF_FLOAT: 0x140b,\n        RG: 0x8227,\n        RG_INTEGER: 0x8228,\n        INT_2_10_10_10_REV: 0x8d9f,\n        // Queries\n        CURRENT_QUERY: 0x8865,\n        QUERY_RESULT: 0x8866,\n        QUERY_RESULT_AVAILABLE: 0x8867,\n        ANY_SAMPLES_PASSED: 0x8c2f,\n        ANY_SAMPLES_PASSED_CONSERVATIVE: 0x8d6a,\n        // Draw buffers\n        MAX_DRAW_BUFFERS: 0x8824,\n        DRAW_BUFFER0: 0x8825,\n        DRAW_BUFFER1: 0x8826,\n        DRAW_BUFFER2: 0x8827,\n        DRAW_BUFFER3: 0x8828,\n        DRAW_BUFFER4: 0x8829,\n        DRAW_BUFFER5: 0x882a,\n        DRAW_BUFFER6: 0x882b,\n        DRAW_BUFFER7: 0x882c,\n        DRAW_BUFFER8: 0x882d,\n        DRAW_BUFFER9: 0x882e,\n        DRAW_BUFFER10: 0x882f,\n        DRAW_BUFFER11: 0x8830,\n        DRAW_BUFFER12: 0x8831,\n        DRAW_BUFFER13: 0x8832,\n        DRAW_BUFFER14: 0x8833,\n        DRAW_BUFFER15: 0x8834,\n        MAX_COLOR_ATTACHMENTS: 0x8cdf,\n        COLOR_ATTACHMENT1: 0x8ce1,\n        COLOR_ATTACHMENT2: 0x8ce2,\n        COLOR_ATTACHMENT3: 0x8ce3,\n        COLOR_ATTACHMENT4: 0x8ce4,\n        COLOR_ATTACHMENT5: 0x8ce5,\n        COLOR_ATTACHMENT6: 0x8ce6,\n        COLOR_ATTACHMENT7: 0x8ce7,\n        COLOR_ATTACHMENT8: 0x8ce8,\n        COLOR_ATTACHMENT9: 0x8ce9,\n        COLOR_ATTACHMENT10: 0x8cea,\n        COLOR_ATTACHMENT11: 0x8ceb,\n        COLOR_ATTACHMENT12: 0x8cec,\n        COLOR_ATTACHMENT13: 0x8ced,\n        COLOR_ATTACHMENT14: 0x8cee,\n        COLOR_ATTACHMENT15: 0x8cef,\n        // Samplers\n        SAMPLER_3D: 0x8b5f,\n        SAMPLER_2D_SHADOW: 0x8b62,\n        SAMPLER_2D_ARRAY: 0x8dc1,\n        SAMPLER_2D_ARRAY_SHADOW: 0x8dc4,\n        SAMPLER_CUBE_SHADOW: 0x8dc5,\n        INT_SAMPLER_2D: 0x8dca,\n        INT_SAMPLER_3D: 0x8dcb,\n        INT_SAMPLER_CUBE: 0x8dcc,\n        INT_SAMPLER_2D_ARRAY: 0x8dcf,\n        UNSIGNED_INT_SAMPLER_2D: 0x8dd2,\n        UNSIGNED_INT_SAMPLER_3D: 0x8dd3,\n        UNSIGNED_INT_SAMPLER_CUBE: 0x8dd4,\n        UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8dd7,\n        MAX_SAMPLES: 0x8d57,\n        SAMPLER_BINDING: 0x8919,\n        // Buffers\n        PIXEL_PACK_BUFFER: 0x88eb,\n        PIXEL_UNPACK_BUFFER: 0x88ec,\n        PIXEL_PACK_BUFFER_BINDING: 0x88ed,\n        PIXEL_UNPACK_BUFFER_BINDING: 0x88ef,\n        COPY_READ_BUFFER: 0x8f36,\n        COPY_WRITE_BUFFER: 0x8f37,\n        COPY_READ_BUFFER_BINDING: 0x8f36,\n        COPY_WRITE_BUFFER_BINDING: 0x8f37,\n        // Data types\n        FLOAT_MAT2x3: 0x8b65,\n        FLOAT_MAT2x4: 0x8b66,\n        FLOAT_MAT3x2: 0x8b67,\n        FLOAT_MAT3x4: 0x8b68,\n        FLOAT_MAT4x2: 0x8b69,\n        FLOAT_MAT4x3: 0x8b6a,\n        UNSIGNED_INT_VEC2: 0x8dc6,\n        UNSIGNED_INT_VEC3: 0x8dc7,\n        UNSIGNED_INT_VEC4: 0x8dc8,\n        UNSIGNED_NORMALIZED: 0x8c17,\n        SIGNED_NORMALIZED: 0x8f9c,\n        // Vertex attributes\n        VERTEX_ATTRIB_ARRAY_INTEGER: 0x88fd,\n        VERTEX_ATTRIB_ARRAY_DIVISOR: 0x88fe,\n        // Transform feedback\n        TRANSFORM_FEEDBACK_BUFFER_MODE: 0x8c7f,\n        MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: 0x8c80,\n        TRANSFORM_FEEDBACK_VARYINGS: 0x8c83,\n        TRANSFORM_FEEDBACK_BUFFER_START: 0x8c84,\n        TRANSFORM_FEEDBACK_BUFFER_SIZE: 0x8c85,\n        TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: 0x8c88,\n        MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: 0x8c8a,\n        MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: 0x8c8b,\n        INTERLEAVED_ATTRIBS: 0x8c8c,\n        SEPARATE_ATTRIBS: 0x8c8d,\n        TRANSFORM_FEEDBACK_BUFFER: 0x8c8e,\n        TRANSFORM_FEEDBACK_BUFFER_BINDING: 0x8c8f,\n        TRANSFORM_FEEDBACK: 0x8e22,\n        TRANSFORM_FEEDBACK_PAUSED: 0x8e23,\n        TRANSFORM_FEEDBACK_ACTIVE: 0x8e24,\n        TRANSFORM_FEEDBACK_BINDING: 0x8e25,\n        // Framebuffers and renderbuffers\n        FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: 0x8210,\n        FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: 0x8211,\n        FRAMEBUFFER_ATTACHMENT_RED_SIZE: 0x8212,\n        FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: 0x8213,\n        FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: 0x8214,\n        FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: 0x8215,\n        FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: 0x8216,\n        FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: 0x8217,\n        FRAMEBUFFER_DEFAULT: 0x8218,\n        // DEPTH_STENCIL_ATTACHMENT : 0x821A,\n        // DEPTH_STENCIL: 0x84F9,\n        DEPTH24_STENCIL8: 0x88f0,\n        DRAW_FRAMEBUFFER_BINDING: 0x8ca6,\n        READ_FRAMEBUFFER_BINDING: 0x8caa,\n        RENDERBUFFER_SAMPLES: 0x8cab,\n        FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: 0x8cd4,\n        FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: 0x8d56,\n        // Uniforms\n        UNIFORM_BUFFER: 0x8a11,\n        UNIFORM_BUFFER_BINDING: 0x8a28,\n        UNIFORM_BUFFER_START: 0x8a29,\n        UNIFORM_BUFFER_SIZE: 0x8a2a,\n        MAX_VERTEX_UNIFORM_BLOCKS: 0x8a2b,\n        MAX_FRAGMENT_UNIFORM_BLOCKS: 0x8a2d,\n        MAX_COMBINED_UNIFORM_BLOCKS: 0x8a2e,\n        MAX_UNIFORM_BUFFER_BINDINGS: 0x8a2f,\n        MAX_UNIFORM_BLOCK_SIZE: 0x8a30,\n        MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: 0x8a31,\n        MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: 0x8a33,\n        UNIFORM_BUFFER_OFFSET_ALIGNMENT: 0x8a34,\n        ACTIVE_UNIFORM_BLOCKS: 0x8a36,\n        UNIFORM_TYPE: 0x8a37,\n        UNIFORM_SIZE: 0x8a38,\n        UNIFORM_BLOCK_INDEX: 0x8a3a,\n        UNIFORM_OFFSET: 0x8a3b,\n        UNIFORM_ARRAY_STRIDE: 0x8a3c,\n        UNIFORM_MATRIX_STRIDE: 0x8a3d,\n        UNIFORM_IS_ROW_MAJOR: 0x8a3e,\n        UNIFORM_BLOCK_BINDING: 0x8a3f,\n        UNIFORM_BLOCK_DATA_SIZE: 0x8a40,\n        UNIFORM_BLOCK_ACTIVE_UNIFORMS: 0x8a42,\n        UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: 0x8a43,\n        UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: 0x8a44,\n        UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: 0x8a46,\n        // Sync objects\n        OBJECT_TYPE: 0x9112,\n        SYNC_CONDITION: 0x9113,\n        SYNC_STATUS: 0x9114,\n        SYNC_FLAGS: 0x9115,\n        SYNC_FENCE: 0x9116,\n        SYNC_GPU_COMMANDS_COMPLETE: 0x9117,\n        UNSIGNALED: 0x9118,\n        SIGNALED: 0x9119,\n        ALREADY_SIGNALED: 0x911a,\n        TIMEOUT_EXPIRED: 0x911b,\n        CONDITION_SATISFIED: 0x911c,\n        WAIT_FAILED: 0x911d,\n        SYNC_FLUSH_COMMANDS_BIT: 0x00000001,\n        // Miscellaneous constants\n        COLOR: 0x1800,\n        DEPTH: 0x1801,\n        STENCIL: 0x1802,\n        MIN: 0x8007,\n        MAX: 0x8008,\n        DEPTH_COMPONENT24: 0x81a6,\n        STREAM_READ: 0x88e1,\n        STREAM_COPY: 0x88e2,\n        STATIC_READ: 0x88e5,\n        STATIC_COPY: 0x88e6,\n        DYNAMIC_READ: 0x88e9,\n        DYNAMIC_COPY: 0x88ea,\n        DEPTH_COMPONENT32F: 0x8cac,\n        DEPTH32F_STENCIL8: 0x8cad,\n        INVALID_INDEX: 0xffffffff,\n        TIMEOUT_IGNORED: -1,\n        MAX_CLIENT_WAIT_TIMEOUT_WEBGL: 0x9247,\n        // Constants defined in WebGL extensions\n        // ANGLE_instanced_arrays\n        VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88fe,\n        // WEBGL_debug_renderer_info\n        UNMASKED_VENDOR_WEBGL: 0x9245,\n        UNMASKED_RENDERER_WEBGL: 0x9246,\n        // EXT_texture_filter_anisotropic\n        MAX_TEXTURE_MAX_ANISOTROPY_EXT: 0x84ff,\n        TEXTURE_MAX_ANISOTROPY_EXT: 0x84fe,\n        // WEBGL_compressed_texture_s3tc\n        COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83f0,\n        COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83f1,\n        COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83f2,\n        COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83f3,\n        // WEBGL_compressed_texture_es3\n        COMPRESSED_R11_EAC: 0x9270,\n        COMPRESSED_SIGNED_R11_EAC: 0x9271,\n        COMPRESSED_RG11_EAC: 0x9272,\n        COMPRESSED_SIGNED_RG11_EAC: 0x9273,\n        COMPRESSED_RGB8_ETC2: 0x9274,\n        COMPRESSED_RGBA8_ETC2_EAC: 0x9275,\n        COMPRESSED_SRGB8_ETC2: 0x9276,\n        COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: 0x9277,\n        COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9278,\n        COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: 0x9279,\n        // WEBGL_compressed_texture_pvrtc\n        COMPRESSED_RGB_PVRTC_4BPPV1_IMG: 0x8c00,\n        COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: 0x8c02,\n        COMPRESSED_RGB_PVRTC_2BPPV1_IMG: 0x8c01,\n        COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: 0x8c03,\n        // WEBGL_compressed_texture_etc1\n        COMPRESSED_RGB_ETC1_WEBGL: 0x8d64,\n        // WEBGL_compressed_texture_atc\n        COMPRESSED_RGB_ATC_WEBGL: 0x8c92,\n        COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL: 0x8c92,\n        COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL: 0x87ee,\n        // WEBGL_depth_texture\n        UNSIGNED_INT_24_8_WEBGL: 0x84fa,\n        // OES_texture_half_float\n        HALF_FLOAT_OES: 0x8d61,\n        // WEBGL_color_buffer_float\n        RGBA32F_EXT: 0x8814,\n        RGB32F_EXT: 0x8815,\n        FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211,\n        UNSIGNED_NORMALIZED_EXT: 0x8c17,\n        // EXT_blend_minmax\n        MIN_EXT: 0x8007,\n        MAX_EXT: 0x8008,\n        // EXT_sRGB\n        SRGB_EXT: 0x8c40,\n        SRGB_ALPHA_EXT: 0x8c42,\n        SRGB8_ALPHA8_EXT: 0x8c43,\n        FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: 0x8210,\n        // OES_standard_derivatives\n        FRAGMENT_SHADER_DERIVATIVE_HINT_OES: 0x8b8b,\n        // WEBGL_draw_buffers\n        COLOR_ATTACHMENT0_WEBGL: 0x8ce0,\n        COLOR_ATTACHMENT1_WEBGL: 0x8ce1,\n        COLOR_ATTACHMENT2_WEBGL: 0x8ce2,\n        COLOR_ATTACHMENT3_WEBGL: 0x8ce3,\n        COLOR_ATTACHMENT4_WEBGL: 0x8ce4,\n        COLOR_ATTACHMENT5_WEBGL: 0x8ce5,\n        COLOR_ATTACHMENT6_WEBGL: 0x8ce6,\n        COLOR_ATTACHMENT7_WEBGL: 0x8ce7,\n        COLOR_ATTACHMENT8_WEBGL: 0x8ce8,\n        COLOR_ATTACHMENT9_WEBGL: 0x8ce9,\n        COLOR_ATTACHMENT10_WEBGL: 0x8cea,\n        COLOR_ATTACHMENT11_WEBGL: 0x8ceb,\n        COLOR_ATTACHMENT12_WEBGL: 0x8cec,\n        COLOR_ATTACHMENT13_WEBGL: 0x8ced,\n        COLOR_ATTACHMENT14_WEBGL: 0x8cee,\n        COLOR_ATTACHMENT15_WEBGL: 0x8cef,\n        DRAW_BUFFER0_WEBGL: 0x8825,\n        DRAW_BUFFER1_WEBGL: 0x8826,\n        DRAW_BUFFER2_WEBGL: 0x8827,\n        DRAW_BUFFER3_WEBGL: 0x8828,\n        DRAW_BUFFER4_WEBGL: 0x8829,\n        DRAW_BUFFER5_WEBGL: 0x882a,\n        DRAW_BUFFER6_WEBGL: 0x882b,\n        DRAW_BUFFER7_WEBGL: 0x882c,\n        DRAW_BUFFER8_WEBGL: 0x882d,\n        DRAW_BUFFER9_WEBGL: 0x882e,\n        DRAW_BUFFER10_WEBGL: 0x882f,\n        DRAW_BUFFER11_WEBGL: 0x8830,\n        DRAW_BUFFER12_WEBGL: 0x8831,\n        DRAW_BUFFER13_WEBGL: 0x8832,\n        DRAW_BUFFER14_WEBGL: 0x8833,\n        DRAW_BUFFER15_WEBGL: 0x8834,\n        MAX_COLOR_ATTACHMENTS_WEBGL: 0x8cdf,\n        MAX_DRAW_BUFFERS_WEBGL: 0x8824,\n        // OES_vertex_array_object\n        VERTEX_ARRAY_BINDING_OES: 0x85b5,\n        // EXT_disjoint_timer_query\n        QUERY_COUNTER_BITS_EXT: 0x8864,\n        CURRENT_QUERY_EXT: 0x8865,\n        QUERY_RESULT_EXT: 0x8866,\n        QUERY_RESULT_AVAILABLE_EXT: 0x8867,\n        TIME_ELAPSED_EXT: 0x88bf,\n        TIMESTAMP_EXT: 0x8e28,\n        GPU_DISJOINT_EXT: 0x8fbb // A Boolean indicating whether or not the GPU performed any disjoint operation.\n    };\n}\n","/* models/html.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var markup_1 = require(\"@bokehjs/models/widgets/markup\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    function htmlDecode(input) {\n        var doc = new DOMParser().parseFromString(input, \"text/html\");\n        return doc.documentElement.textContent;\n    }\n    var HTMLView = /** @class */ (function (_super) {\n        __extends(HTMLView, _super);\n        function HTMLView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        HTMLView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            var decoded = htmlDecode(this.model.text);\n            var html = decoded || this.model.text;\n            if (!html) {\n                this.markup_el.innerHTML = '';\n                return;\n            }\n            this.markup_el.innerHTML = html;\n            Array.from(this.markup_el.querySelectorAll(\"script\")).forEach(function (oldScript) {\n                var newScript = document.createElement(\"script\");\n                Array.from(oldScript.attributes)\n                    .forEach(function (attr) { return newScript.setAttribute(attr.name, attr.value); });\n                newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n                if (oldScript.parentNode)\n                    oldScript.parentNode.replaceChild(newScript, oldScript);\n            });\n        };\n        HTMLView.__name__ = \"HTMLView\";\n        return HTMLView;\n    }(layout_1.PanelMarkupView));\n    exports.HTMLView = HTMLView;\n    var HTML = /** @class */ (function (_super) {\n        __extends(HTML, _super);\n        function HTML(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        HTML.init_HTML = function () {\n            this.prototype.default_view = HTMLView;\n        };\n        HTML.__name__ = \"HTML\";\n        HTML.__module__ = \"panel.models.markup\";\n        return HTML;\n    }(markup_1.Markup));\n    exports.HTML = HTML;\n    HTML.init_HTML();\n}\n","/* models/json.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var __importDefault = (this && this.__importDefault) || function (mod) {\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var markup_1 = require(\"@bokehjs/models/widgets/markup\");\n    var json_formatter_js_1 = __importDefault(require(\"5901339020\") /* json-formatter-js */);\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var JSONView = /** @class */ (function (_super) {\n        __extends(JSONView, _super);\n        function JSONView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        JSONView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            var text = this.model.text.replace(/(\\r\\n|\\n|\\r)/gm, \"\").replace(\"'\", '\"');\n            var json;\n            try {\n                json = window.JSON.parse(text);\n            }\n            catch (err) {\n                this.markup_el.innerHTML = \"<b>Invalid JSON:</b> \" + err.toString();\n                return;\n            }\n            var config = { hoverPreviewEnabled: this.model.hover_preview, theme: this.model.theme };\n            var formatter = new json_formatter_js_1.default(json, this.model.depth, config);\n            var rendered = formatter.render();\n            var style = \"border-radius: 5px; padding: 10px;\";\n            if (this.model.theme == \"dark\")\n                rendered.style.cssText = \"background-color: rgb(30, 30, 30);\" + style;\n            else\n                rendered.style.cssText = style;\n            this.markup_el.append(rendered);\n        };\n        JSONView.__name__ = \"JSONView\";\n        return JSONView;\n    }(layout_1.PanelMarkupView));\n    exports.JSONView = JSONView;\n    var Theme = [\"dark\", \"light\"];\n    var JSON = /** @class */ (function (_super) {\n        __extends(JSON, _super);\n        function JSON(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        JSON.init_JSON = function () {\n            this.prototype.default_view = JSONView;\n            this.define({\n                depth: [p.Number, 1],\n                hover_preview: [p.Boolean, false],\n                theme: [p.Enum(Theme), \"dark\"],\n            });\n        };\n        JSON.__name__ = \"JSON\";\n        JSON.__module__ = \"panel.models.markup\";\n        return JSON;\n    }(markup_1.Markup));\n    exports.JSON = JSON;\n    JSON.init_JSON();\n}\n","/* json-formatter-js/dist/json-formatter.js */ function _(require, module, exports) {\n    module.exports = function (modules) {\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId])\n                return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                i: moduleId,\n                l: !1,\n                exports: {}\n            };\n            return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__),\n                module.l = !0, module.exports;\n        }\n        var installedModules = {};\n        return __webpack_require__.m = modules, __webpack_require__.c = installedModules,\n            __webpack_require__.i = function (value) {\n                return value;\n            }, __webpack_require__.d = function (exports, name, getter) {\n            __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, {\n                configurable: !1,\n                enumerable: !0,\n                get: getter\n            });\n        }, __webpack_require__.n = function (module) {\n            var getter = module && module.__esModule ? function () {\n                return module.default;\n            } : function () {\n                return module;\n            };\n            return __webpack_require__.d(getter, \"a\", getter), getter;\n        }, __webpack_require__.o = function (object, property) {\n            return Object.prototype.hasOwnProperty.call(object, property);\n        }, __webpack_require__.p = \"dist\", __webpack_require__(__webpack_require__.s = 6);\n    }([function (module, __webpack_exports__, __webpack_require__) {\n            \"use strict\";\n            Object.defineProperty(__webpack_exports__, \"__esModule\", {\n                value: !0\n            });\n            var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(5), __WEBPACK_IMPORTED_MODULE_1__style_less__ = __webpack_require__(4), DATE_STRING_REGEX = (__webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__style_less__),\n                /(^\\d{1,4}[\\.|\\\\\\/|-]\\d{1,2}[\\.|\\\\\\/|-]\\d{1,4})(\\s*(?:0?[1-9]:[0-5]|1(?=[012])\\d:[0-5])\\d\\s*[ap]m)?$/), PARTIAL_DATE_REGEX = /\\d{2}:\\d{2}:\\d{2} GMT-\\d{4}/, JSON_DATE_REGEX = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/, requestAnimationFrame = window.requestAnimationFrame || function (cb) {\n                return cb(), 0;\n            }, _defaultConfig = {\n                hoverPreviewEnabled: !1,\n                hoverPreviewArrayCount: 100,\n                hoverPreviewFieldCount: 5,\n                animateOpen: !0,\n                animateClose: !0,\n                theme: null,\n                useToJSON: !0,\n                sortPropertiesBy: null\n            }, JSONFormatter = function () {\n                function JSONFormatter(json, open, config, key) {\n                    void 0 === open && (open = 1), void 0 === config && (config = _defaultConfig), this.json = json,\n                        this.open = open, this.config = config, this.key = key, this._isOpen = null, void 0 === this.config.hoverPreviewEnabled && (this.config.hoverPreviewEnabled = _defaultConfig.hoverPreviewEnabled),\n                        void 0 === this.config.hoverPreviewArrayCount && (this.config.hoverPreviewArrayCount = _defaultConfig.hoverPreviewArrayCount),\n                        void 0 === this.config.hoverPreviewFieldCount && (this.config.hoverPreviewFieldCount = _defaultConfig.hoverPreviewFieldCount),\n                        void 0 === this.config.useToJSON && (this.config.useToJSON = _defaultConfig.useToJSON);\n                }\n                return Object.defineProperty(JSONFormatter.prototype, \"isOpen\", {\n                    get: function () {\n                        return null !== this._isOpen ? this._isOpen : this.open > 0;\n                    },\n                    set: function (value) {\n                        this._isOpen = value;\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"isDate\", {\n                    get: function () {\n                        return this.json instanceof Date || \"string\" === this.type && (DATE_STRING_REGEX.test(this.json) || JSON_DATE_REGEX.test(this.json) || PARTIAL_DATE_REGEX.test(this.json));\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"isUrl\", {\n                    get: function () {\n                        return \"string\" === this.type && 0 === this.json.indexOf(\"http\");\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"isArray\", {\n                    get: function () {\n                        return Array.isArray(this.json);\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"isObject\", {\n                    get: function () {\n                        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.a)(this.json);\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"isEmptyObject\", {\n                    get: function () {\n                        return !this.keys.length && !this.isArray;\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"isEmpty\", {\n                    get: function () {\n                        return this.isEmptyObject || this.keys && !this.keys.length && this.isArray;\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"useToJSON\", {\n                    get: function () {\n                        return this.config.useToJSON && \"stringifiable\" === this.type;\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"hasKey\", {\n                    get: function () {\n                        return void 0 !== this.key;\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"constructorName\", {\n                    get: function () {\n                        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.b)(this.json);\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"type\", {\n                    get: function () {\n                        return null === this.json ? \"null\" : this.config.useToJSON && this.json && this.json.toJSON ? \"stringifiable\" : typeof this.json;\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), Object.defineProperty(JSONFormatter.prototype, \"keys\", {\n                    get: function () {\n                        if (this.isObject) {\n                            var keys = Object.keys(this.json).map(function (key) {\n                                return key || '\"\"';\n                            });\n                            return !this.isArray && this.config.sortPropertiesBy ? keys.sort(this.config.sortPropertiesBy) : keys;\n                        }\n                        return [];\n                    },\n                    enumerable: !0,\n                    configurable: !0\n                }), JSONFormatter.prototype.toggleOpen = function () {\n                    this.isOpen = !this.isOpen, this.element && (this.isOpen ? this.appendChildren(this.config.animateOpen) : this.removeChildren(this.config.animateClose),\n                        this.element.classList.toggle(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"open\")));\n                }, JSONFormatter.prototype.openAtDepth = function (depth) {\n                    void 0 === depth && (depth = 1), depth < 0 || (this.open = depth, this.isOpen = 0 !== depth,\n                        this.element && (this.removeChildren(!1), 0 === depth ? this.element.classList.remove(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"open\")) : (this.appendChildren(this.config.animateOpen),\n                            this.element.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"open\")))));\n                }, JSONFormatter.prototype.getInlinepreview = function () {\n                    var _this = this;\n                    if (this.isArray)\n                        return this.json.length > this.config.hoverPreviewArrayCount ? \"Array[\" + this.json.length + \"]\" : \"[\" + this.json.map(__WEBPACK_IMPORTED_MODULE_0__helpers__.d).join(\", \") + \"]\";\n                    var keys = this.keys, narrowKeys = keys.slice(0, this.config.hoverPreviewFieldCount), kvs = narrowKeys.map(function (key) {\n                        return key + \":\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.d)(_this.type, _this.json[key]);\n                    }), ellipsis = keys.length >= this.config.hoverPreviewFieldCount ? \"…\" : \"\";\n                    return \"{\" + kvs.join(\", \") + ellipsis + \"}\";\n                }, JSONFormatter.prototype.render = function () {\n                    this.element = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"div\", \"row\");\n                    var togglerLink = this.isObject ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"a\", \"toggler-link\") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\");\n                    if (this.isObject && !this.useToJSON && togglerLink.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\", \"toggler\")),\n                        this.hasKey && togglerLink.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\", \"key\", this.key + \":\")),\n                        this.isObject && !this.useToJSON) {\n                        var value = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\", \"value\"), objectWrapperSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\"), constructorName = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\", \"constructor-name\", this.constructorName);\n                        if (objectWrapperSpan.appendChild(constructorName), this.isArray) {\n                            var arrayWrapperSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\");\n                            arrayWrapperSpan.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\", \"bracket\", \"[\")),\n                                arrayWrapperSpan.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\", \"number\", this.json.length)),\n                                arrayWrapperSpan.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\", \"bracket\", \"]\")),\n                                objectWrapperSpan.appendChild(arrayWrapperSpan);\n                        }\n                        value.appendChild(objectWrapperSpan), togglerLink.appendChild(value);\n                    }\n                    else {\n                        var value = this.isUrl ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"a\") : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\");\n                        value.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(this.type)),\n                            this.isDate && value.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"date\")),\n                            this.isUrl && (value.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"url\")),\n                                value.setAttribute(\"href\", this.json));\n                        var valuePreview = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.f)(this.type, this.json, this.useToJSON ? this.json.toJSON() : this.json);\n                        value.appendChild(document.createTextNode(valuePreview)), togglerLink.appendChild(value);\n                    }\n                    if (this.isObject && this.config.hoverPreviewEnabled) {\n                        var preview = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"span\", \"preview-text\");\n                        preview.appendChild(document.createTextNode(this.getInlinepreview())), togglerLink.appendChild(preview);\n                    }\n                    var children = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.e)(\"div\", \"children\");\n                    return this.isObject && children.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"object\")),\n                        this.isArray && children.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"array\")),\n                        this.isEmpty && children.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"empty\")),\n                        this.config && this.config.theme && this.element.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(this.config.theme)),\n                        this.isOpen && this.element.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"open\")),\n                        this.element.appendChild(togglerLink), this.element.appendChild(children), this.isObject && this.isOpen && this.appendChildren(),\n                        this.isObject && !this.useToJSON && togglerLink.addEventListener(\"click\", this.toggleOpen.bind(this)),\n                        this.element;\n                }, JSONFormatter.prototype.appendChildren = function (animated) {\n                    var _this = this;\n                    void 0 === animated && (animated = !1);\n                    var children = this.element.querySelector(\"div.\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"children\"));\n                    if (children && !this.isEmpty)\n                        if (animated) {\n                            var index_1 = 0, addAChild_1 = function () {\n                                var key = _this.keys[index_1], formatter = new JSONFormatter(_this.json[key], _this.open - 1, _this.config, key);\n                                children.appendChild(formatter.render()), (index_1 += 1) < _this.keys.length && (index_1 > 10 ? addAChild_1() : requestAnimationFrame(addAChild_1));\n                            };\n                            requestAnimationFrame(addAChild_1);\n                        }\n                        else\n                            this.keys.forEach(function (key) {\n                                var formatter = new JSONFormatter(_this.json[key], _this.open - 1, _this.config, key);\n                                children.appendChild(formatter.render());\n                            });\n                }, JSONFormatter.prototype.removeChildren = function (animated) {\n                    void 0 === animated && (animated = !1);\n                    var childrenElement = this.element.querySelector(\"div.\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__.c)(\"children\"));\n                    if (animated) {\n                        var childrenRemoved_1 = 0, removeAChild_1 = function () {\n                            childrenElement && childrenElement.children.length && (childrenElement.removeChild(childrenElement.children[0]),\n                                childrenRemoved_1 += 1, childrenRemoved_1 > 10 ? removeAChild_1() : requestAnimationFrame(removeAChild_1));\n                        };\n                        requestAnimationFrame(removeAChild_1);\n                    }\n                    else\n                        childrenElement && (childrenElement.innerHTML = \"\");\n                }, JSONFormatter;\n            }();\n            __webpack_exports__.default = JSONFormatter;\n        }, function (module, exports, __webpack_require__) {\n            exports = module.exports = __webpack_require__(2)(), exports.push([module.i, '.json-formatter-row {\\n  font-family: monospace;\\n}\\n.json-formatter-row,\\n.json-formatter-row a,\\n.json-formatter-row a:hover {\\n  color: black;\\n  text-decoration: none;\\n}\\n.json-formatter-row .json-formatter-row {\\n  margin-left: 1rem;\\n}\\n.json-formatter-row .json-formatter-children.json-formatter-empty {\\n  opacity: 0.5;\\n  margin-left: 1rem;\\n}\\n.json-formatter-row .json-formatter-children.json-formatter-empty:after {\\n  display: none;\\n}\\n.json-formatter-row .json-formatter-children.json-formatter-empty.json-formatter-object:after {\\n  content: \"No properties\";\\n}\\n.json-formatter-row .json-formatter-children.json-formatter-empty.json-formatter-array:after {\\n  content: \"[]\";\\n}\\n.json-formatter-row .json-formatter-string,\\n.json-formatter-row .json-formatter-stringifiable {\\n  color: green;\\n  white-space: pre;\\n  word-wrap: break-word;\\n}\\n.json-formatter-row .json-formatter-number {\\n  color: blue;\\n}\\n.json-formatter-row .json-formatter-boolean {\\n  color: red;\\n}\\n.json-formatter-row .json-formatter-null {\\n  color: #855A00;\\n}\\n.json-formatter-row .json-formatter-undefined {\\n  color: #ca0b69;\\n}\\n.json-formatter-row .json-formatter-function {\\n  color: #FF20ED;\\n}\\n.json-formatter-row .json-formatter-date {\\n  background-color: rgba(0, 0, 0, 0.05);\\n}\\n.json-formatter-row .json-formatter-url {\\n  text-decoration: underline;\\n  color: blue;\\n  cursor: pointer;\\n}\\n.json-formatter-row .json-formatter-bracket {\\n  color: blue;\\n}\\n.json-formatter-row .json-formatter-key {\\n  color: #00008B;\\n  padding-right: 0.2rem;\\n}\\n.json-formatter-row .json-formatter-toggler-link {\\n  cursor: pointer;\\n}\\n.json-formatter-row .json-formatter-toggler {\\n  line-height: 1.2rem;\\n  font-size: 0.7rem;\\n  vertical-align: middle;\\n  opacity: 0.6;\\n  cursor: pointer;\\n  padding-right: 0.2rem;\\n}\\n.json-formatter-row .json-formatter-toggler:after {\\n  display: inline-block;\\n  transition: transform 100ms ease-in;\\n  content: \"\\\\25BA\";\\n}\\n.json-formatter-row > a > .json-formatter-preview-text {\\n  opacity: 0;\\n  transition: opacity 0.15s ease-in;\\n  font-style: italic;\\n}\\n.json-formatter-row:hover > a > .json-formatter-preview-text {\\n  opacity: 0.6;\\n}\\n.json-formatter-row.json-formatter-open > .json-formatter-toggler-link .json-formatter-toggler:after {\\n  transform: rotate(90deg);\\n}\\n.json-formatter-row.json-formatter-open > .json-formatter-children:after {\\n  display: inline-block;\\n}\\n.json-formatter-row.json-formatter-open > a > .json-formatter-preview-text {\\n  display: none;\\n}\\n.json-formatter-row.json-formatter-open.json-formatter-empty:after {\\n  display: block;\\n}\\n.json-formatter-dark.json-formatter-row {\\n  font-family: monospace;\\n}\\n.json-formatter-dark.json-formatter-row,\\n.json-formatter-dark.json-formatter-row a,\\n.json-formatter-dark.json-formatter-row a:hover {\\n  color: white;\\n  text-decoration: none;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-row {\\n  margin-left: 1rem;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-children.json-formatter-empty {\\n  opacity: 0.5;\\n  margin-left: 1rem;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-children.json-formatter-empty:after {\\n  display: none;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-children.json-formatter-empty.json-formatter-object:after {\\n  content: \"No properties\";\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-children.json-formatter-empty.json-formatter-array:after {\\n  content: \"[]\";\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-string,\\n.json-formatter-dark.json-formatter-row .json-formatter-stringifiable {\\n  color: #31F031;\\n  white-space: pre;\\n  word-wrap: break-word;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-number {\\n  color: #66C2FF;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-boolean {\\n  color: #EC4242;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-null {\\n  color: #EEC97D;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-undefined {\\n  color: #ef8fbe;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-function {\\n  color: #FD48CB;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-date {\\n  background-color: rgba(255, 255, 255, 0.05);\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-url {\\n  text-decoration: underline;\\n  color: #027BFF;\\n  cursor: pointer;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-bracket {\\n  color: #9494FF;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-key {\\n  color: #23A0DB;\\n  padding-right: 0.2rem;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-toggler-link {\\n  cursor: pointer;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-toggler {\\n  line-height: 1.2rem;\\n  font-size: 0.7rem;\\n  vertical-align: middle;\\n  opacity: 0.6;\\n  cursor: pointer;\\n  padding-right: 0.2rem;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-toggler:after {\\n  display: inline-block;\\n  transition: transform 100ms ease-in;\\n  content: \"\\\\25BA\";\\n}\\n.json-formatter-dark.json-formatter-row > a > .json-formatter-preview-text {\\n  opacity: 0;\\n  transition: opacity 0.15s ease-in;\\n  font-style: italic;\\n}\\n.json-formatter-dark.json-formatter-row:hover > a > .json-formatter-preview-text {\\n  opacity: 0.6;\\n}\\n.json-formatter-dark.json-formatter-row.json-formatter-open > .json-formatter-toggler-link .json-formatter-toggler:after {\\n  transform: rotate(90deg);\\n}\\n.json-formatter-dark.json-formatter-row.json-formatter-open > .json-formatter-children:after {\\n  display: inline-block;\\n}\\n.json-formatter-dark.json-formatter-row.json-formatter-open > a > .json-formatter-preview-text {\\n  display: none;\\n}\\n.json-formatter-dark.json-formatter-row.json-formatter-open.json-formatter-empty:after {\\n  display: block;\\n}\\n', \"\"]);\n        }, function (module, exports) {\n            module.exports = function () {\n                var list = [];\n                return list.toString = function () {\n                    for (var result = [], i = 0; i < this.length; i++) {\n                        var item = this[i];\n                        item[2] ? result.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\") : result.push(item[1]);\n                    }\n                    return result.join(\"\");\n                }, list.i = function (modules, mediaQuery) {\n                    \"string\" == typeof modules && (modules = [[null, modules, \"\"]]);\n                    for (var alreadyImportedModules = {}, i = 0; i < this.length; i++) {\n                        var id = this[i][0];\n                        \"number\" == typeof id && (alreadyImportedModules[id] = !0);\n                    }\n                    for (i = 0; i < modules.length; i++) {\n                        var item = modules[i];\n                        \"number\" == typeof item[0] && alreadyImportedModules[item[0]] || (mediaQuery && !item[2] ? item[2] = mediaQuery : mediaQuery && (item[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\"),\n                            list.push(item));\n                    }\n                }, list;\n            };\n        }, function (module, exports) {\n            function addStylesToDom(styles, options) {\n                for (var i = 0; i < styles.length; i++) {\n                    var item = styles[i], domStyle = stylesInDom[item.id];\n                    if (domStyle) {\n                        domStyle.refs++;\n                        for (var j = 0; j < domStyle.parts.length; j++)\n                            domStyle.parts[j](item.parts[j]);\n                        for (; j < item.parts.length; j++)\n                            domStyle.parts.push(addStyle(item.parts[j], options));\n                    }\n                    else {\n                        for (var parts = [], j = 0; j < item.parts.length; j++)\n                            parts.push(addStyle(item.parts[j], options));\n                        stylesInDom[item.id] = {\n                            id: item.id,\n                            refs: 1,\n                            parts: parts\n                        };\n                    }\n                }\n            }\n            function listToStyles(list) {\n                for (var styles = [], newStyles = {}, i = 0; i < list.length; i++) {\n                    var item = list[i], id = item[0], css = item[1], media = item[2], sourceMap = item[3], part = {\n                        css: css,\n                        media: media,\n                        sourceMap: sourceMap\n                    };\n                    newStyles[id] ? newStyles[id].parts.push(part) : styles.push(newStyles[id] = {\n                        id: id,\n                        parts: [part]\n                    });\n                }\n                return styles;\n            }\n            function insertStyleElement(options, styleElement) {\n                var head = getHeadElement(), lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n                if (\"top\" === options.insertAt)\n                    lastStyleElementInsertedAtTop ? lastStyleElementInsertedAtTop.nextSibling ? head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling) : head.appendChild(styleElement) : head.insertBefore(styleElement, head.firstChild),\n                        styleElementsInsertedAtTop.push(styleElement);\n                else {\n                    if (\"bottom\" !== options.insertAt)\n                        throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n                    head.appendChild(styleElement);\n                }\n            }\n            function removeStyleElement(styleElement) {\n                styleElement.parentNode.removeChild(styleElement);\n                var idx = styleElementsInsertedAtTop.indexOf(styleElement);\n                idx >= 0 && styleElementsInsertedAtTop.splice(idx, 1);\n            }\n            function createStyleElement(options) {\n                var styleElement = document.createElement(\"style\");\n                return styleElement.type = \"text/css\", insertStyleElement(options, styleElement),\n                    styleElement;\n            }\n            function createLinkElement(options) {\n                var linkElement = document.createElement(\"link\");\n                return linkElement.rel = \"stylesheet\", insertStyleElement(options, linkElement),\n                    linkElement;\n            }\n            function addStyle(obj, options) {\n                var styleElement, update, remove;\n                if (options.singleton) {\n                    var styleIndex = singletonCounter++;\n                    styleElement = singletonElement || (singletonElement = createStyleElement(options)),\n                        update = applyToSingletonTag.bind(null, styleElement, styleIndex, !1), remove = applyToSingletonTag.bind(null, styleElement, styleIndex, !0);\n                }\n                else\n                    obj.sourceMap && \"function\" == typeof URL && \"function\" == typeof URL.createObjectURL && \"function\" == typeof URL.revokeObjectURL && \"function\" == typeof Blob && \"function\" == typeof btoa ? (styleElement = createLinkElement(options),\n                        update = updateLink.bind(null, styleElement), remove = function () {\n                        removeStyleElement(styleElement), styleElement.href && URL.revokeObjectURL(styleElement.href);\n                    }) : (styleElement = createStyleElement(options), update = applyToTag.bind(null, styleElement),\n                        remove = function () {\n                            removeStyleElement(styleElement);\n                        });\n                return update(obj), function (newObj) {\n                    if (newObj) {\n                        if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n                            return;\n                        update(obj = newObj);\n                    }\n                    else\n                        remove();\n                };\n            }\n            function applyToSingletonTag(styleElement, index, remove, obj) {\n                var css = remove ? \"\" : obj.css;\n                if (styleElement.styleSheet)\n                    styleElement.styleSheet.cssText = replaceText(index, css);\n                else {\n                    var cssNode = document.createTextNode(css), childNodes = styleElement.childNodes;\n                    childNodes[index] && styleElement.removeChild(childNodes[index]), childNodes.length ? styleElement.insertBefore(cssNode, childNodes[index]) : styleElement.appendChild(cssNode);\n                }\n            }\n            function applyToTag(styleElement, obj) {\n                var css = obj.css, media = obj.media;\n                if (media && styleElement.setAttribute(\"media\", media), styleElement.styleSheet)\n                    styleElement.styleSheet.cssText = css;\n                else {\n                    for (; styleElement.firstChild;)\n                        styleElement.removeChild(styleElement.firstChild);\n                    styleElement.appendChild(document.createTextNode(css));\n                }\n            }\n            function updateLink(linkElement, obj) {\n                var css = obj.css, sourceMap = obj.sourceMap;\n                sourceMap && (css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\");\n                var blob = new Blob([css], {\n                    type: \"text/css\"\n                }), oldSrc = linkElement.href;\n                linkElement.href = URL.createObjectURL(blob), oldSrc && URL.revokeObjectURL(oldSrc);\n            }\n            var stylesInDom = {}, memoize = function (fn) {\n                var memo;\n                return function () {\n                    return void 0 === memo && (memo = fn.apply(this, arguments)), memo;\n                };\n            }, isOldIE = memoize(function () {\n                return /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n            }), getHeadElement = memoize(function () {\n                return document.head || document.getElementsByTagName(\"head\")[0];\n            }), singletonElement = null, singletonCounter = 0, styleElementsInsertedAtTop = [];\n            module.exports = function (list, options) {\n                if (\"undefined\" != typeof DEBUG && DEBUG && \"object\" != typeof document)\n                    throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n                options = options || {}, void 0 === options.singleton && (options.singleton = isOldIE()),\n                    void 0 === options.insertAt && (options.insertAt = \"bottom\");\n                var styles = listToStyles(list);\n                return addStylesToDom(styles, options), function (newList) {\n                    for (var mayRemove = [], i = 0; i < styles.length; i++) {\n                        var item = styles[i], domStyle = stylesInDom[item.id];\n                        domStyle.refs--, mayRemove.push(domStyle);\n                    }\n                    if (newList) {\n                        addStylesToDom(listToStyles(newList), options);\n                    }\n                    for (var i = 0; i < mayRemove.length; i++) {\n                        var domStyle = mayRemove[i];\n                        if (0 === domStyle.refs) {\n                            for (var j = 0; j < domStyle.parts.length; j++)\n                                domStyle.parts[j]();\n                            delete stylesInDom[domStyle.id];\n                        }\n                    }\n                };\n            };\n            var replaceText = function () {\n                var textStore = [];\n                return function (index, replacement) {\n                    return textStore[index] = replacement, textStore.filter(Boolean).join(\"\\n\");\n                };\n            }();\n        }, function (module, exports, __webpack_require__) {\n            var content = __webpack_require__(1);\n            \"string\" == typeof content && (content = [[module.i, content, \"\"]]);\n            __webpack_require__(3)(content, {});\n            content.locals && (module.exports = content.locals);\n        }, function (module, __webpack_exports__, __webpack_require__) {\n            \"use strict\";\n            function escapeString(str) {\n                return str.replace('\"', '\"');\n            }\n            function isObject(value) {\n                var type = typeof value;\n                return !!value && \"object\" == type;\n            }\n            function getObjectName(object) {\n                if (void 0 === object)\n                    return \"\";\n                if (null === object)\n                    return \"Object\";\n                if (\"object\" == typeof object && !object.constructor)\n                    return \"Object\";\n                var funcNameRegex = /function ([^(]*)/, results = funcNameRegex.exec(object.constructor.toString());\n                return results && results.length > 1 ? results[1] : \"\";\n            }\n            function getValuePreview(type, object, value) {\n                return \"null\" === type || \"undefined\" === type ? type : (\"string\" !== type && \"stringifiable\" !== type || (value = '\"' + escapeString(value) + '\"'),\n                    \"function\" === type ? object.toString().replace(/[\\r\\n]/g, \"\").replace(/\\{.*\\}/, \"\") + \"{…}\" : value);\n            }\n            function getPreview(type, object) {\n                var value = \"\";\n                return isObject(object) ? (value = getObjectName(object), Array.isArray(object) && (value += \"[\" + object.length + \"]\")) : value = getValuePreview(type, object, object),\n                    value;\n            }\n            function cssClass(className) {\n                return \"json-formatter-\" + className;\n            }\n            function createElement(type, className, content) {\n                var el = document.createElement(type);\n                return className && el.classList.add(cssClass(className)), void 0 !== content && (content instanceof Node ? el.appendChild(content) : el.appendChild(document.createTextNode(String(content)))),\n                    el;\n            }\n            __webpack_exports__.a = isObject, __webpack_exports__.b = getObjectName, __webpack_exports__.f = getValuePreview,\n                __webpack_exports__.d = getPreview, __webpack_exports__.c = cssClass, __webpack_exports__.e = createElement;\n        }, function (module, exports, __webpack_require__) {\n            module.exports = __webpack_require__(0);\n        }]);\n}\n","/* models/katex.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var markup_1 = require(\"@bokehjs/models/widgets/markup\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var KaTeXView = /** @class */ (function (_super) {\n        __extends(KaTeXView, _super);\n        function KaTeXView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        KaTeXView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            this.markup_el.innerHTML = this.model.text;\n            if (!window.renderMathInElement) {\n                return;\n            }\n            window.renderMathInElement(this.el, {\n                delimiters: [\n                    { left: \"$$\", right: \"$$\", display: true },\n                    { left: \"\\\\[\", right: \"\\\\]\", display: true },\n                    { left: \"$\", right: \"$\", display: false },\n                    { left: \"\\\\(\", right: \"\\\\)\", display: false }\n                ]\n            });\n        };\n        KaTeXView.__name__ = \"KaTeXView\";\n        return KaTeXView;\n    }(layout_1.PanelMarkupView));\n    exports.KaTeXView = KaTeXView;\n    var KaTeX = /** @class */ (function (_super) {\n        __extends(KaTeX, _super);\n        function KaTeX(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        KaTeX.init_KaTeX = function () {\n            this.prototype.default_view = KaTeXView;\n        };\n        KaTeX.__name__ = \"KaTeX\";\n        KaTeX.__module__ = \"panel.models.katex\";\n        return KaTeX;\n    }(markup_1.Markup));\n    exports.KaTeX = KaTeX;\n    KaTeX.init_KaTeX();\n}\n","/* models/mathjax.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var markup_1 = require(\"@bokehjs/models/widgets/markup\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var MathJaxView = /** @class */ (function (_super) {\n        __extends(MathJaxView, _super);\n        function MathJaxView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MathJaxView.prototype.initialize = function () {\n            _super.prototype.initialize.call(this);\n            this._hub = window.MathJax.Hub;\n            this._hub.Config({\n                tex2jax: { inlineMath: [['$', '$'], ['\\\\(', '\\\\)']] }\n            });\n        };\n        MathJaxView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            if (!this._hub) {\n                return;\n            }\n            this.markup_el.innerHTML = this.model.text;\n            this._hub.Queue([\"Typeset\", this._hub, this.markup_el]);\n        };\n        MathJaxView.__name__ = \"MathJaxView\";\n        return MathJaxView;\n    }(layout_1.PanelMarkupView));\n    exports.MathJaxView = MathJaxView;\n    var MathJax = /** @class */ (function (_super) {\n        __extends(MathJax, _super);\n        function MathJax(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        MathJax.init_MathJax = function () {\n            this.prototype.default_view = MathJaxView;\n        };\n        MathJax.__name__ = \"MathJax\";\n        MathJax.__module__ = \"panel.models.mathjax\";\n        return MathJax;\n    }(markup_1.Markup));\n    exports.MathJax = MathJax;\n    MathJax.init_MathJax();\n}\n","/* models/player.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var dom_1 = require(\"@bokehjs/core/dom\");\n    var widget_1 = require(\"@bokehjs/models/widgets/widget\");\n    var PlayerView = /** @class */ (function (_super) {\n        __extends(PlayerView, _super);\n        function PlayerView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        PlayerView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.change, function () { return _this.render(); });\n            this.connect(this.model.properties.value.change, function () { return _this.render(); });\n            this.connect(this.model.properties.loop_policy.change, function () { return _this.set_loop_state(_this.model.loop_policy); });\n        };\n        PlayerView.prototype.get_height = function () {\n            return 250;\n        };\n        PlayerView.prototype.render = function () {\n            var _this = this;\n            if (this.sliderEl == null) {\n                _super.prototype.render.call(this);\n            }\n            else {\n                this.sliderEl.style.width = \"{this.model.width}px\";\n                this.sliderEl.min = String(this.model.start);\n                this.sliderEl.max = String(this.model.end);\n                this.sliderEl.value = String(this.model.value);\n                return;\n            }\n            // Slider\n            this.sliderEl = document.createElement('input');\n            this.sliderEl.setAttribute(\"type\", \"range\");\n            this.sliderEl.style.width = this.model.width + 'px';\n            this.sliderEl.value = String(this.model.value);\n            this.sliderEl.min = String(this.model.start);\n            this.sliderEl.max = String(this.model.end);\n            this.sliderEl.onchange = function (ev) { return _this.set_frame(parseInt(ev.target.value)); };\n            // Buttons\n            var button_div = dom_1.div();\n            button_div.style.cssText = \"margin: 0 auto; display: table; padding: 5px\";\n            var button_style = \"text-align: center; min-width: 40px; margin: 2px\";\n            var slower = document.createElement('button');\n            slower.style.cssText = \"text-align: center; min-width: 20px\";\n            slower.appendChild(document.createTextNode('–'));\n            slower.onclick = function () { return _this.slower(); };\n            button_div.appendChild(slower);\n            var first = document.createElement('button');\n            first.style.cssText = button_style;\n            first.appendChild(document.createTextNode('\\u275a\\u25c0\\u25c0'));\n            first.onclick = function () { return _this.first_frame(); };\n            button_div.appendChild(first);\n            var previous = document.createElement('button');\n            previous.style.cssText = button_style;\n            previous.appendChild(document.createTextNode('\\u275a\\u25c0'));\n            previous.onclick = function () { return _this.previous_frame(); };\n            button_div.appendChild(previous);\n            var reverse = document.createElement('button');\n            reverse.style.cssText = button_style;\n            reverse.appendChild(document.createTextNode('\\u25c0'));\n            reverse.onclick = function () { return _this.reverse_animation(); };\n            button_div.appendChild(reverse);\n            var pause = document.createElement('button');\n            pause.style.cssText = button_style;\n            pause.appendChild(document.createTextNode('\\u275a\\u275a'));\n            pause.onclick = function () { return _this.pause_animation(); };\n            button_div.appendChild(pause);\n            var play = document.createElement('button');\n            play.style.cssText = button_style;\n            play.appendChild(document.createTextNode('\\u25b6'));\n            play.onclick = function () { return _this.play_animation(); };\n            button_div.appendChild(play);\n            var next = document.createElement('button');\n            next.style.cssText = button_style;\n            next.appendChild(document.createTextNode('\\u25b6\\u275a'));\n            next.onclick = function () { return _this.next_frame(); };\n            button_div.appendChild(next);\n            var last = document.createElement('button');\n            last.style.cssText = button_style;\n            last.appendChild(document.createTextNode('\\u25b6\\u25b6\\u275a'));\n            last.onclick = function () { return _this.last_frame(); };\n            button_div.appendChild(last);\n            var faster = document.createElement('button');\n            faster.style.cssText = \"text-align: center; min-width: 20px\";\n            faster.appendChild(document.createTextNode('+'));\n            faster.onclick = function () { return _this.faster(); };\n            button_div.appendChild(faster);\n            // Loop control\n            this.loop_state = document.createElement('form');\n            this.loop_state.style.cssText = \"margin: 0 auto; display: table\";\n            var once = document.createElement('input');\n            once.type = \"radio\";\n            once.value = \"once\";\n            once.name = \"state\";\n            var once_label = document.createElement('label');\n            once_label.innerHTML = \"Once\";\n            once_label.style.cssText = \"padding: 0 10px 0 5px; user-select:none;\";\n            var loop = document.createElement('input');\n            loop.setAttribute(\"type\", \"radio\");\n            loop.setAttribute(\"value\", \"loop\");\n            loop.setAttribute(\"name\", \"state\");\n            var loop_label = document.createElement('label');\n            loop_label.innerHTML = \"Loop\";\n            loop_label.style.cssText = \"padding: 0 10px 0 5px; user-select:none;\";\n            var reflect = document.createElement('input');\n            reflect.setAttribute(\"type\", \"radio\");\n            reflect.setAttribute(\"value\", \"reflect\");\n            reflect.setAttribute(\"name\", \"state\");\n            var reflect_label = document.createElement('label');\n            reflect_label.innerHTML = \"Reflect\";\n            reflect_label.style.cssText = \"padding: 0 10px 0 5px; user-select:none;\";\n            if (this.model.loop_policy == \"once\")\n                once.checked = true;\n            else if (this.model.loop_policy == \"loop\")\n                loop.checked = true;\n            else\n                reflect.checked = true;\n            // Compose everything\n            this.loop_state.appendChild(once);\n            this.loop_state.appendChild(once_label);\n            this.loop_state.appendChild(loop);\n            this.loop_state.appendChild(loop_label);\n            this.loop_state.appendChild(reflect);\n            this.loop_state.appendChild(reflect_label);\n            this.el.appendChild(this.sliderEl);\n            this.el.appendChild(button_div);\n            this.el.appendChild(this.loop_state);\n        };\n        PlayerView.prototype.set_frame = function (frame) {\n            if (this.model.value != frame)\n                this.model.value = frame;\n            if (this.sliderEl.value != String(frame))\n                this.sliderEl.value = String(frame);\n        };\n        PlayerView.prototype.get_loop_state = function () {\n            var button_group = this.loop_state.state;\n            for (var i = 0; i < button_group.length; i++) {\n                var button = button_group[i];\n                if (button.checked)\n                    return button.value;\n            }\n            return \"once\";\n        };\n        PlayerView.prototype.set_loop_state = function (state) {\n            var button_group = this.loop_state.state;\n            for (var i = 0; i < button_group.length; i++) {\n                var button = button_group[i];\n                if (button.value == state)\n                    button.checked = true;\n            }\n        };\n        PlayerView.prototype.next_frame = function () {\n            this.set_frame(Math.min(this.model.end, this.model.value + this.model.step));\n        };\n        PlayerView.prototype.previous_frame = function () {\n            this.set_frame(Math.max(this.model.start, this.model.value - this.model.step));\n        };\n        PlayerView.prototype.first_frame = function () {\n            this.set_frame(this.model.start);\n        };\n        PlayerView.prototype.last_frame = function () {\n            this.set_frame(this.model.end);\n        };\n        PlayerView.prototype.slower = function () {\n            this.model.interval = Math.round(this.model.interval / 0.7);\n            if (this.model.direction > 0)\n                this.play_animation();\n            else if (this.model.direction < 0)\n                this.reverse_animation();\n        };\n        PlayerView.prototype.faster = function () {\n            this.model.interval = Math.round(this.model.interval * 0.7);\n            if (this.model.direction > 0)\n                this.play_animation();\n            else if (this.model.direction < 0)\n                this.reverse_animation();\n        };\n        PlayerView.prototype.anim_step_forward = function () {\n            if (this.model.value < this.model.end) {\n                this.next_frame();\n            }\n            else {\n                var loop_state = this.get_loop_state();\n                if (loop_state == \"loop\") {\n                    this.first_frame();\n                }\n                else if (loop_state == \"reflect\") {\n                    this.last_frame();\n                    this.reverse_animation();\n                }\n                else {\n                    this.pause_animation();\n                    this.last_frame();\n                }\n            }\n        };\n        PlayerView.prototype.anim_step_reverse = function () {\n            if (this.model.value > this.model.start) {\n                this.previous_frame();\n            }\n            else {\n                var loop_state = this.get_loop_state();\n                if (loop_state == \"loop\") {\n                    this.last_frame();\n                }\n                else if (loop_state == \"reflect\") {\n                    this.first_frame();\n                    this.play_animation();\n                }\n                else {\n                    this.pause_animation();\n                    this.first_frame();\n                }\n            }\n        };\n        PlayerView.prototype.pause_animation = function () {\n            this.model.direction = 0;\n            if (this.timer) {\n                clearInterval(this.timer);\n                this.timer = null;\n            }\n        };\n        PlayerView.prototype.play_animation = function () {\n            var _this = this;\n            this.pause_animation();\n            this.model.direction = 1;\n            if (!this.timer)\n                this.timer = setInterval(function () { return _this.anim_step_forward(); }, this.model.interval);\n        };\n        PlayerView.prototype.reverse_animation = function () {\n            var _this = this;\n            this.pause_animation();\n            this.model.direction = -1;\n            if (!this.timer)\n                this.timer = setInterval(function () { return _this.anim_step_reverse(); }, this.model.interval);\n        };\n        PlayerView.__name__ = \"PlayerView\";\n        return PlayerView;\n    }(widget_1.WidgetView));\n    exports.PlayerView = PlayerView;\n    var Player = /** @class */ (function (_super) {\n        __extends(Player, _super);\n        function Player(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        Player.init_Player = function () {\n            this.prototype.default_view = PlayerView;\n            this.define({\n                direction: [p.Number, 0],\n                interval: [p.Number, 500],\n                start: [p.Number,],\n                end: [p.Number,],\n                step: [p.Number, 1],\n                loop_policy: [p.Any, \"once\"],\n                value: [p.Any, 0],\n            });\n            this.override({ width: 400 });\n        };\n        Player.__name__ = \"Player\";\n        Player.__module__ = \"panel.models.widgets\";\n        return Player;\n    }(widget_1.Widget));\n    exports.Player = Player;\n    Player.init_Player();\n}\n","/* models/plotly.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var object_1 = require(\"@bokehjs/core/util/object\");\n    var eq_1 = require(\"@bokehjs/core/util/eq\");\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var debounce_1 = require(\"99a25e6992\") /* debounce */;\n    var util_1 = require(\"62ba79515f\") /* ./util */;\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var Plotly = window.Plotly;\n    var filterEventData = function (gd, eventData, event) {\n        // Ported from dash-core-components/src/components/Graph.react.js\n        var filteredEventData = Array.isArray(eventData) ? [] : {};\n        if (event === \"click\" || event === \"hover\" || event === \"selected\") {\n            var points = [];\n            if (eventData === undefined || eventData === null) {\n                return null;\n            }\n            /*\n             * remove `data`, `layout`, `xaxis`, etc\n             * objects from the event data since they're so big\n             * and cause JSON stringify ciricular structure errors.\n             *\n             * also, pull down the `customdata` point from the data array\n             * into the event object\n             */\n            var data = gd.data;\n            for (var i = 0; i < eventData.points.length; i++) {\n                var fullPoint = eventData.points[i];\n                var pointData = {};\n                for (var property in fullPoint) {\n                    var val = fullPoint[property];\n                    if (fullPoint.hasOwnProperty(property) &&\n                        !Array.isArray(val) && !util_1.isPlainObject(val)) {\n                        pointData[property] = val;\n                    }\n                }\n                if (fullPoint !== undefined && fullPoint !== null) {\n                    if (fullPoint.hasOwnProperty(\"curveNumber\") &&\n                        fullPoint.hasOwnProperty(\"pointNumber\") &&\n                        data[fullPoint[\"curveNumber\"]].hasOwnProperty(\"customdata\")) {\n                        pointData[\"customdata\"] =\n                            data[fullPoint[\"curveNumber\"]].customdata[fullPoint[\"pointNumber\"]];\n                    }\n                    // specific to histogram. see https://github.com/plotly/plotly.js/pull/2113/\n                    if (fullPoint.hasOwnProperty('pointNumbers')) {\n                        pointData[\"pointNumbers\"] = fullPoint.pointNumbers;\n                    }\n                }\n                points[i] = pointData;\n            }\n            filteredEventData[\"points\"] = points;\n        }\n        else if (event === 'relayout' || event === 'restyle') {\n            /*\n             * relayout shouldn't include any big objects\n             * it will usually just contain the ranges of the axes like\n             * \"xaxis.range[0]\": 0.7715822247381828,\n             * \"xaxis.range[1]\": 3.0095292008680063`\n             */\n            for (var property in eventData) {\n                if (eventData.hasOwnProperty(property)) {\n                    filteredEventData[property] = eventData[property];\n                }\n            }\n        }\n        if (eventData.hasOwnProperty('range')) {\n            filteredEventData[\"range\"] = eventData[\"range\"];\n        }\n        if (eventData.hasOwnProperty('lassoPoints')) {\n            filteredEventData[\"lassoPoints\"] = eventData[\"lassoPoints\"];\n        }\n        return filteredEventData;\n    };\n    var PlotlyPlotView = /** @class */ (function (_super) {\n        __extends(PlotlyPlotView, _super);\n        function PlotlyPlotView() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._settingViewport = false;\n            _this._plotInitialized = false;\n            _this._reacting = false;\n            _this._relayouting = false;\n            _this._end_relayouting = debounce_1.debounce(function () {\n                _this._relayouting = false;\n            }, 2000, false);\n            return _this;\n        }\n        PlotlyPlotView.prototype.connect_signals = function () {\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.viewport_update_policy.change, this._updateSetViewportFunction);\n            this.connect(this.model.properties.viewport_update_throttle.change, this._updateSetViewportFunction);\n            this.connect(this.model.properties._render_count.change, this.render);\n            this.connect(this.model.properties.viewport.change, this._updateViewportFromProperty);\n        };\n        PlotlyPlotView.prototype.render = function () {\n            var _this = this;\n            _super.prototype.render.call(this);\n            if (!window.Plotly) {\n                return;\n            }\n            var data = [];\n            for (var i = 0; i < this.model.data.length; i++) {\n                data.push(this._get_trace(i, false));\n            }\n            var newLayout = util_1.deepCopy(this.model.layout);\n            if (this._relayouting) {\n                var layout = this.el.layout;\n                // For each xaxis* and yaxis* property of layout, if the value has a 'range'\n                // property then use this in newLayout\n                Object.keys(layout).reduce(function (value, key) {\n                    if (key.slice(1, 5) === \"axis\" && 'range' in value) {\n                        newLayout[key].range = value.range;\n                    }\n                }, {});\n            }\n            this._reacting = true;\n            Plotly.react(this.el, data, newLayout, this.model.config).then(function () {\n                _this._updateSetViewportFunction();\n                _this._updateViewportProperty();\n                if (!_this._plotInitialized) {\n                    // Install callbacks\n                    //  - plotly_relayout\n                    (_this.el).on('plotly_relayout', function (eventData) {\n                        if (eventData['_update_from_property'] !== true) {\n                            _this.model.relayout_data = filterEventData(_this.el, eventData, 'relayout');\n                            _this._updateViewportProperty();\n                            _this._end_relayouting();\n                        }\n                    });\n                    //  - plotly_relayouting\n                    (_this.el).on('plotly_relayouting', function () {\n                        if (_this.model.viewport_update_policy !== 'mouseup') {\n                            _this._relayouting = true;\n                            _this._updateViewportProperty();\n                        }\n                    });\n                    //  - plotly_restyle\n                    (_this.el).on('plotly_restyle', function (eventData) {\n                        _this.model.restyle_data = filterEventData(_this.el, eventData, 'restyle');\n                        _this._updateViewportProperty();\n                    });\n                    //  - plotly_click\n                    (_this.el).on('plotly_click', function (eventData) {\n                        _this.model.click_data = filterEventData(_this.el, eventData, 'click');\n                    });\n                    //  - plotly_hover\n                    (_this.el).on('plotly_hover', function (eventData) {\n                        _this.model.hover_data = filterEventData(_this.el, eventData, 'hover');\n                    });\n                    //  - plotly_selected\n                    (_this.el).on('plotly_selected', function (eventData) {\n                        _this.model.selected_data = filterEventData(_this.el, eventData, 'selected');\n                    });\n                    //  - plotly_clickannotation\n                    (_this.el).on('plotly_clickannotation', function (eventData) {\n                        delete eventData[\"event\"];\n                        delete eventData[\"fullAnnotation\"];\n                        _this.model.clickannotation_data = eventData;\n                    });\n                    //  - plotly_deselect\n                    (_this.el).on('plotly_deselect', function () {\n                        _this.model.selected_data = null;\n                    });\n                    //  - plotly_unhover\n                    (_this.el).on('plotly_unhover', function () {\n                        _this.model.hover_data = null;\n                    });\n                }\n                _this._plotInitialized = true;\n                _this._reacting = false;\n            });\n        };\n        PlotlyPlotView.prototype._get_trace = function (index, update) {\n            var trace = object_1.clone(this.model.data[index]);\n            var cds = this.model.data_sources[index];\n            for (var _i = 0, _a = cds.columns(); _i < _a.length; _i++) {\n                var column = _a[_i];\n                var shape = cds._shapes[column][0];\n                var array = cds.get_array(column)[0];\n                if (shape.length > 1) {\n                    var arrays = [];\n                    for (var s = 0; s < shape[0]; s++) {\n                        arrays.push(array.slice(s * shape[1], (s + 1) * shape[1]));\n                    }\n                    array = arrays;\n                }\n                var prop_path = column.split(\".\");\n                var prop = prop_path[prop_path.length - 1];\n                var prop_parent = trace;\n                for (var _b = 0, _c = prop_path.slice(0, -1); _b < _c.length; _b++) {\n                    var k = _c[_b];\n                    prop_parent = prop_parent[k];\n                }\n                if (update && prop_path.length == 1) {\n                    prop_parent[prop] = [array];\n                }\n                else {\n                    prop_parent[prop] = array;\n                }\n            }\n            return trace;\n        };\n        PlotlyPlotView.prototype._updateViewportFromProperty = function () {\n            var _this = this;\n            if (!Plotly || this._settingViewport || this._reacting || !this.model.viewport) {\n                return;\n            }\n            var fullLayout = this.el._fullLayout;\n            // Call relayout if viewport differs from fullLayout\n            Object.keys(this.model.viewport).reduce(function (value, key) {\n                if (!eq_1.isEqual(util_1.get(fullLayout, key), value)) {\n                    var clonedViewport = util_1.deepCopy(_this.model.viewport);\n                    clonedViewport['_update_from_property'] = true;\n                    Plotly.relayout(_this.el, clonedViewport);\n                    return false;\n                }\n                else {\n                    return true;\n                }\n            }, {});\n        };\n        PlotlyPlotView.prototype._updateViewportProperty = function () {\n            var fullLayout = this.el._fullLayout;\n            var viewport = {};\n            // Get range for all xaxis and yaxis properties\n            for (var prop in fullLayout) {\n                if (!fullLayout.hasOwnProperty(prop)) {\n                    continue;\n                }\n                var maybe_axis = prop.slice(0, 5);\n                if (maybe_axis === 'xaxis' || maybe_axis === 'yaxis') {\n                    viewport[prop + '.range'] = util_1.deepCopy(fullLayout[prop].range);\n                }\n            }\n            if (!eq_1.isEqual(viewport, this.model.viewport)) {\n                this._setViewport(viewport);\n            }\n        };\n        PlotlyPlotView.prototype._updateSetViewportFunction = function () {\n            var _this = this;\n            if (this.model.viewport_update_policy === \"continuous\" ||\n                this.model.viewport_update_policy === \"mouseup\") {\n                this._setViewport = function (viewport) {\n                    if (!_this._settingViewport) {\n                        _this._settingViewport = true;\n                        _this.model.viewport = viewport;\n                        _this._settingViewport = false;\n                    }\n                };\n            }\n            else {\n                this._setViewport = util_1.throttle(function (viewport) {\n                    if (!_this._settingViewport) {\n                        _this._settingViewport = true;\n                        _this.model.viewport = viewport;\n                        _this._settingViewport = false;\n                    }\n                }, this.model.viewport_update_throttle);\n            }\n        };\n        PlotlyPlotView.__name__ = \"PlotlyPlotView\";\n        return PlotlyPlotView;\n    }(layout_1.PanelHTMLBoxView));\n    exports.PlotlyPlotView = PlotlyPlotView;\n    var PlotlyPlot = /** @class */ (function (_super) {\n        __extends(PlotlyPlot, _super);\n        function PlotlyPlot(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        PlotlyPlot.init_PlotlyPlot = function () {\n            this.prototype.default_view = PlotlyPlotView;\n            this.define({\n                data: [p.Array, []],\n                layout: [p.Any, {}],\n                config: [p.Any, {}],\n                data_sources: [p.Array, []],\n                relayout_data: [p.Any, {}],\n                restyle_data: [p.Array, []],\n                click_data: [p.Any, {}],\n                hover_data: [p.Any, {}],\n                clickannotation_data: [p.Any, {}],\n                selected_data: [p.Any, {}],\n                viewport: [p.Any, {}],\n                viewport_update_policy: [p.String, \"mouseup\"],\n                viewport_update_throttle: [p.Number, 200],\n                _render_count: [p.Number, 0],\n            });\n        };\n        PlotlyPlot.__name__ = \"PlotlyPlot\";\n        PlotlyPlot.__module__ = \"panel.models.plotly\";\n        return PlotlyPlot;\n    }(html_box_1.HTMLBox));\n    exports.PlotlyPlot = PlotlyPlot;\n    PlotlyPlot.init_PlotlyPlot();\n}\n","/* debounce/index.js */ function _(require, module, exports) {\n    /**\n     * Returns a function, that, as long as it continues to be invoked, will not\n     * be triggered. The function will be called after it stops being called for\n     * N milliseconds. If `immediate` is passed, trigger the function on the\n     * leading edge, instead of the trailing. The function also has a property 'clear'\n     * that is a function which will clear the timer to prevent previously scheduled executions.\n     *\n     * @source underscore.js\n     * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n     * @param {Function} function to wrap\n     * @param {Number} timeout in ms (`100`)\n     * @param {Boolean} whether to execute at the beginning (`false`)\n     * @api public\n     */\n    function debounce(func, wait, immediate) {\n        var timeout, args, context, timestamp, result;\n        if (null == wait)\n            wait = 100;\n        function later() {\n            var last = Date.now() - timestamp;\n            if (last < wait && last >= 0) {\n                timeout = setTimeout(later, wait - last);\n            }\n            else {\n                timeout = null;\n                if (!immediate) {\n                    result = func.apply(context, args);\n                    context = args = null;\n                }\n            }\n        }\n        ;\n        var debounced = function () {\n            context = this;\n            args = arguments;\n            timestamp = Date.now();\n            var callNow = immediate && !timeout;\n            if (!timeout)\n                timeout = setTimeout(later, wait);\n            if (callNow) {\n                result = func.apply(context, args);\n                context = args = null;\n            }\n            return result;\n        };\n        debounced.clear = function () {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n        };\n        debounced.flush = function () {\n            if (timeout) {\n                result = func.apply(context, args);\n                context = args = null;\n                clearTimeout(timeout);\n                timeout = null;\n            }\n        };\n        return debounced;\n    }\n    ;\n    // Adds compatibility for ES modules\n    debounce.debounce = debounce;\n    module.exports = debounce;\n}\n","/* models/util.js */ function _(require, module, exports) {\n    exports.get = function (obj, path, defaultValue) {\n        if (defaultValue === void 0) {\n            defaultValue = undefined;\n        }\n        var travel = function (regexp) {\n            return String.prototype.split\n                .call(path, regexp)\n                .filter(Boolean)\n                .reduce(function (res, key) { return (res !== null && res !== undefined ? res[key] : res); }, obj);\n        };\n        var result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/);\n        return result === undefined || result === obj ? defaultValue : result;\n    };\n    function throttle(func, timeFrame) {\n        var lastTime = 0;\n        return function () {\n            var now = Number(new Date());\n            if (now - lastTime >= timeFrame) {\n                func();\n                lastTime = now;\n            }\n        };\n    }\n    exports.throttle = throttle;\n    function deepCopy(obj) {\n        var copy;\n        // Handle the 3 simple types, and null or undefined\n        if (null == obj || \"object\" != typeof obj)\n            return obj;\n        // Handle Array\n        if (obj instanceof Array) {\n            copy = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                copy[i] = deepCopy(obj[i]);\n            }\n            return copy;\n        }\n        // Handle Object\n        if (obj instanceof Object) {\n            var copy_1 = {};\n            for (var attr in obj) {\n                var key = attr;\n                if (obj.hasOwnProperty(key))\n                    copy_1[key] = deepCopy(obj[key]);\n            }\n            return copy_1;\n        }\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    exports.deepCopy = deepCopy;\n    function isPlainObject(obj) {\n        return Object.prototype.toString.call(obj) === '[object Object]';\n    }\n    exports.isPlainObject = isPlainObject;\n}\n","/* models/progress.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign = (this && this.__assign) || function () {\n        __assign = Object.assign || function (t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var ProgressView = /** @class */ (function (_super) {\n        __extends(ProgressView, _super);\n        function ProgressView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ProgressView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            var resize = function () {\n                _this.render();\n                _this.root.compute_layout(); // XXX: invalidate_layout?\n            };\n            this.connect(this.model.properties.height.change, resize);\n            this.connect(this.model.properties.width.change, resize);\n            this.connect(this.model.properties.height_policy.change, resize);\n            this.connect(this.model.properties.width_policy.change, resize);\n            this.connect(this.model.properties.sizing_mode.change, resize);\n            this.connect(this.model.properties.active.change, function () { return _this.setCSS(); });\n            this.connect(this.model.properties.bar_color.change, function () { return _this.setCSS(); });\n            this.connect(this.model.properties.css_classes.change, function () { return _this.setCSS(); });\n            this.connect(this.model.properties.value.change, function () { return _this.setValue(); });\n            this.connect(this.model.properties.max.change, function () { return _this.setMax(); });\n        };\n        ProgressView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            var style = __assign(__assign({}, this.model.style), { display: \"inline-block\" });\n            this.progressEl = document.createElement('progress');\n            this.setValue();\n            this.setMax();\n            layout_1.set_size(this.progressEl, this.model);\n            // Set styling\n            this.setCSS();\n            for (var prop in style)\n                this.progressEl.style.setProperty(prop, style[prop]);\n            this.el.appendChild(this.progressEl);\n        };\n        ProgressView.prototype.setCSS = function () {\n            var css = this.model.css_classes.join(\" \") + \" \" + this.model.bar_color;\n            if (this.model.active)\n                css = css + \" active\";\n            this.progressEl.className = css;\n        };\n        ProgressView.prototype.setValue = function () {\n            if (this.model.value != null)\n                this.progressEl.value = this.model.value;\n        };\n        ProgressView.prototype.setMax = function () {\n            if (this.model.max != null)\n                this.progressEl.max = this.model.max;\n        };\n        ProgressView.prototype._update_layout = function () {\n            var changed = ((this._prev_sizing_mode !== undefined) &&\n                (this._prev_sizing_mode !== this.model.sizing_mode));\n            this._prev_sizing_mode = this.model.sizing_mode;\n            this.layout = new layout_1.CachedVariadicBox(this.el, this.model.sizing_mode, changed);\n            this.layout.set_sizing(this.box_sizing());\n        };\n        ProgressView.__name__ = \"ProgressView\";\n        return ProgressView;\n    }(html_box_1.HTMLBoxView));\n    exports.ProgressView = ProgressView;\n    var Progress = /** @class */ (function (_super) {\n        __extends(Progress, _super);\n        function Progress(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        Progress.init_Progress = function () {\n            this.prototype.default_view = ProgressView;\n            this.define({\n                active: [p.Boolean, true],\n                bar_color: [p.String, 'primary'],\n                style: [p.Any, {}],\n                max: [p.Number, 100],\n                value: [p.Number, null],\n            });\n        };\n        Progress.__name__ = \"Progress\";\n        Progress.__module__ = \"panel.models.widgets\";\n        return Progress;\n    }(html_box_1.HTMLBox));\n    exports.Progress = Progress;\n    Progress.init_Progress();\n}\n","/* models/state.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var view_1 = require(\"@bokehjs/core/view\");\n    var array_1 = require(\"@bokehjs/core/util/array\");\n    var model_1 = require(\"@bokehjs/model\");\n    var receiver_1 = require(\"@bokehjs/protocol/receiver\");\n    function get_json(file, callback) {\n        var xobj = new XMLHttpRequest();\n        xobj.overrideMimeType(\"application/json\");\n        xobj.open('GET', file, true);\n        xobj.onreadystatechange = function () {\n            if (xobj.readyState == 4 && xobj.status == 200) {\n                callback(xobj.responseText);\n            }\n        };\n        xobj.send(null);\n    }\n    var StateView = /** @class */ (function (_super) {\n        __extends(StateView, _super);\n        function StateView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        StateView.prototype.renderTo = function () {\n        };\n        StateView.__name__ = \"StateView\";\n        return StateView;\n    }(view_1.View));\n    exports.StateView = StateView;\n    var State = /** @class */ (function (_super) {\n        __extends(State, _super);\n        function State(attrs) {\n            var _this = _super.call(this, attrs) || this;\n            _this._receiver = new receiver_1.Receiver();\n            _this._cache = {};\n            return _this;\n        }\n        State.prototype.apply_state = function (state) {\n            this._receiver.consume(state.header);\n            this._receiver.consume(state.metadata);\n            this._receiver.consume(state.content);\n            if (this._receiver.message && this.document) {\n                this.document.apply_json_patch(this._receiver.message.content);\n            }\n        };\n        State.prototype._receive_json = function (result, path) {\n            var state = JSON.parse(result);\n            this._cache[path] = state;\n            var current = this.state;\n            for (var _i = 0, _a = this.values; _i < _a.length; _i++) {\n                var i = _a[_i];\n                current = current[i];\n            }\n            if (current === path)\n                this.apply_state(state);\n            else if (this._cache[current])\n                this.apply_state(this._cache[current]);\n        };\n        State.prototype.set_state = function (widget, value) {\n            var _this = this;\n            var values = array_1.copy(this.values);\n            var index = this.widgets[widget.id];\n            values[index] = value;\n            var state = this.state;\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                var i = values_1[_i];\n                state = state[i];\n            }\n            this.values = values;\n            if (this.json) {\n                if (this._cache[state]) {\n                    this.apply_state(this._cache[state]);\n                }\n                else {\n                    get_json(state, function (result) { return _this._receive_json(result, state); });\n                }\n            }\n            else {\n                this.apply_state(state);\n            }\n        };\n        State.init_State = function () {\n            this.prototype.default_view = StateView;\n            this.define({\n                json: [p.Boolean, false],\n                state: [p.Any, {}],\n                widgets: [p.Any, {}],\n                values: [p.Any, []],\n            });\n        };\n        State.__name__ = \"State\";\n        State.__module__ = \"panel.models.state\";\n        return State;\n    }(model_1.Model));\n    exports.State = State;\n    State.init_State();\n}\n","/* models/vega.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var VegaPlotView = /** @class */ (function (_super) {\n        __extends(VegaPlotView, _super);\n        function VegaPlotView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        VegaPlotView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.data.change, this._plot);\n            this.connect(this.model.properties.data_sources.change, function () { return _this._connect_sources(); });\n            this._connected = [];\n            this._connect_sources();\n        };\n        VegaPlotView.prototype._connect_sources = function () {\n            for (var ds in this.model.data_sources) {\n                var cds = this.model.data_sources[ds];\n                if (this._connected.indexOf(ds) < 0) {\n                    this.connect(cds.properties.data.change, this._plot);\n                    this._connected.push(ds);\n                }\n            }\n        };\n        VegaPlotView.prototype._fetch_datasets = function () {\n            var datasets = {};\n            for (var ds in this.model.data_sources) {\n                var cds = this.model.data_sources[ds];\n                var data = [];\n                var columns = cds.columns();\n                for (var i = 0; i < cds.data[columns[0]].length; i++) {\n                    var item = {};\n                    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n                        var column = columns_1[_i];\n                        item[column] = cds.data[column][i];\n                    }\n                    data.push(item);\n                }\n                datasets[ds] = data;\n            }\n            return datasets;\n        };\n        VegaPlotView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            this._plot();\n        };\n        VegaPlotView.prototype._plot = function () {\n            if (!this.model.data || !window.vegaEmbed)\n                return;\n            if (this.model.data_sources && (Object.keys(this.model.data_sources).length > 0)) {\n                var datasets = this._fetch_datasets();\n                if ('data' in datasets) {\n                    this.model.data.data['values'] = datasets['data'];\n                    delete datasets['data'];\n                }\n                if (this.model.data.data !== undefined) {\n                    for (var _i = 0, _a = this.model.data.data; _i < _a.length; _i++) {\n                        var d = _a[_i];\n                        if (d.name in datasets) {\n                            d['values'] = datasets[d.name];\n                            delete datasets[d.name];\n                        }\n                    }\n                }\n                this.model.data['datasets'] = datasets;\n            }\n            window.vegaEmbed(this.el, this.model.data, { actions: false });\n        };\n        VegaPlotView.__name__ = \"VegaPlotView\";\n        return VegaPlotView;\n    }(html_box_1.HTMLBoxView));\n    exports.VegaPlotView = VegaPlotView;\n    var VegaPlot = /** @class */ (function (_super) {\n        __extends(VegaPlot, _super);\n        function VegaPlot(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        VegaPlot.init_VegaPlot = function () {\n            this.prototype.default_view = VegaPlotView;\n            this.define({\n                data: [p.Any],\n                data_sources: [p.Any],\n            });\n        };\n        VegaPlot.__name__ = \"VegaPlot\";\n        VegaPlot.__module__ = \"panel.models.vega\";\n        return VegaPlot;\n    }(html_box_1.HTMLBox));\n    exports.VegaPlot = VegaPlot;\n    VegaPlot.init_VegaPlot();\n}\n","/* models/video.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var VideoView = /** @class */ (function (_super) {\n        __extends(VideoView, _super);\n        function VideoView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        VideoView.prototype.initialize = function () {\n            _super.prototype.initialize.call(this);\n            this._blocked = false;\n            this._setting = false;\n            this._time = Date.now();\n        };\n        VideoView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.loop.change, function () { return _this.set_loop(); });\n            this.connect(this.model.properties.paused.change, function () { return _this.set_paused(); });\n            this.connect(this.model.properties.time.change, function () { return _this.set_time(); });\n            this.connect(this.model.properties.value.change, function () { return _this.set_value(); });\n            this.connect(this.model.properties.volume.change, function () { return _this.set_volume(); });\n        };\n        VideoView.prototype.render = function () {\n            var _this = this;\n            _super.prototype.render.call(this);\n            this.videoEl = document.createElement('video');\n            if (!this.model.sizing_mode || this.model.sizing_mode === 'fixed') {\n                if (this.model.height)\n                    this.videoEl.height = this.model.height;\n                if (this.model.width)\n                    this.videoEl.width = this.model.width;\n            }\n            this.videoEl.style.objectFit = 'fill';\n            this.videoEl.style.minWidth = '100%';\n            this.videoEl.style.minHeight = '100%';\n            this.videoEl.controls = true;\n            this.videoEl.src = this.model.value;\n            this.videoEl.currentTime = this.model.time;\n            this.videoEl.loop = this.model.loop;\n            if (this.model.volume != null)\n                this.videoEl.volume = this.model.volume / 100;\n            else\n                this.model.volume = this.videoEl.volume * 100;\n            this.videoEl.onpause = function () { return _this.model.paused = true; };\n            this.videoEl.onplay = function () { return _this.model.paused = false; };\n            this.videoEl.ontimeupdate = function () { return _this.update_time(_this); };\n            this.videoEl.onvolumechange = function () { return _this.update_volume(_this); };\n            this.el.appendChild(this.videoEl);\n            if (!this.model.paused)\n                this.videoEl.play();\n        };\n        VideoView.prototype.update_time = function (view) {\n            if (view._setting) {\n                view._setting = false;\n                return;\n            }\n            if ((Date.now() - view._time) < view.model.throttle)\n                return;\n            view._blocked = true;\n            view.model.time = view.videoEl.currentTime;\n            view._time = Date.now();\n        };\n        VideoView.prototype.update_volume = function (view) {\n            if (view._setting) {\n                view._setting = false;\n                return;\n            }\n            view._blocked = true;\n            view.model.volume = view.videoEl.volume * 100;\n        };\n        VideoView.prototype.set_loop = function () {\n            this.videoEl.loop = this.model.loop;\n        };\n        VideoView.prototype.set_paused = function () {\n            if (!this.videoEl.paused && this.model.paused)\n                this.videoEl.pause();\n            if (this.videoEl.paused && !this.model.paused)\n                this.videoEl.play();\n        };\n        VideoView.prototype.set_volume = function () {\n            if (this._blocked) {\n                this._blocked = false;\n                return;\n            }\n            this._setting = true;\n            if (this.model.volume != null)\n                this.videoEl.volume = this.model.volume / 100;\n        };\n        VideoView.prototype.set_time = function () {\n            if (this._blocked) {\n                this._blocked = false;\n                return;\n            }\n            this._setting = true;\n            this.videoEl.currentTime = this.model.time;\n        };\n        VideoView.prototype.set_value = function () {\n            this.videoEl.src = this.model.value;\n        };\n        VideoView.__name__ = \"VideoView\";\n        return VideoView;\n    }(layout_1.PanelHTMLBoxView));\n    exports.VideoView = VideoView;\n    var Video = /** @class */ (function (_super) {\n        __extends(Video, _super);\n        function Video(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        Video.init_Video = function () {\n            this.prototype.default_view = VideoView;\n            this.define({\n                loop: [p.Boolean, false],\n                paused: [p.Boolean, true],\n                time: [p.Number, 0],\n                throttle: [p.Number, 250],\n                value: [p.Any, ''],\n                volume: [p.Number, null],\n            });\n        };\n        Video.__name__ = \"Video\";\n        Video.__module__ = \"panel.models.widgets\";\n        return Video;\n    }(html_box_1.HTMLBox));\n    exports.Video = Video;\n    Video.init_Video();\n}\n","/* models/videostream.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var layout_1 = require(\"ec60963462\") /* ./layout */;\n    var VideoStreamView = /** @class */ (function (_super) {\n        __extends(VideoStreamView, _super);\n        function VideoStreamView() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.constraints = {\n                'audio': false,\n                'video': true\n            };\n            return _this;\n        }\n        VideoStreamView.prototype.initialize = function () {\n            _super.prototype.initialize.call(this);\n            if (this.model.timeout !== null)\n                this.set_timeout();\n        };\n        VideoStreamView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.timeout.change, function () { return _this.set_timeout(); });\n            this.connect(this.model.properties.snapshot.change, function () { return _this.snapshot(); });\n            this.connect(this.model.properties.paused.change, function () { return _this.pause(); });\n        };\n        VideoStreamView.prototype.pause = function () {\n            if (this.model.paused) {\n                if (this.timer != null) {\n                    clearInterval(this.timer);\n                    this.timer = null;\n                }\n                this.videoEl.pause();\n            }\n            this.set_timeout();\n        };\n        VideoStreamView.prototype.set_timeout = function () {\n            var _this = this;\n            if (this.timer) {\n                clearInterval(this.timer);\n                this.timer = null;\n            }\n            if (this.model.timeout > 0)\n                this.timer = setInterval(function () { return _this.snapshot(); }, this.model.timeout);\n        };\n        VideoStreamView.prototype.snapshot = function () {\n            this.canvasEl.width = this.videoEl.videoWidth;\n            this.canvasEl.height = this.videoEl.videoHeight;\n            var context = this.canvasEl.getContext('2d');\n            if (context)\n                context.drawImage(this.videoEl, 0, 0, this.canvasEl.width, this.canvasEl.height);\n            this.model.value = this.canvasEl.toDataURL(\"image/\" + this.model.format, 0.95);\n        };\n        VideoStreamView.prototype.remove = function () {\n            _super.prototype.remove.call(this);\n            if (this.timer) {\n                clearInterval(this.timer);\n                this.timer = null;\n            }\n        };\n        VideoStreamView.prototype.render = function () {\n            var _this = this;\n            _super.prototype.render.call(this);\n            if (this.videoEl)\n                return;\n            this.videoEl = document.createElement('video');\n            if (!this.model.sizing_mode || this.model.sizing_mode === 'fixed') {\n                if (this.model.height)\n                    this.videoEl.height = this.model.height;\n                if (this.model.width)\n                    this.videoEl.width = this.model.width;\n            }\n            this.videoEl.style.objectFit = 'fill';\n            this.videoEl.style.minWidth = '100%';\n            this.videoEl.style.minHeight = '100%';\n            this.canvasEl = document.createElement('canvas');\n            this.el.appendChild(this.videoEl);\n            if (navigator.mediaDevices.getUserMedia) {\n                navigator.mediaDevices.getUserMedia(this.constraints)\n                    .then(function (stream) {\n                    _this.videoEl.srcObject = stream;\n                    if (!_this.model.paused) {\n                        _this.videoEl.play();\n                    }\n                })\n                    .catch(console.error);\n            }\n        };\n        VideoStreamView.__name__ = \"VideoStreamView\";\n        return VideoStreamView;\n    }(layout_1.PanelHTMLBoxView));\n    exports.VideoStreamView = VideoStreamView;\n    var VideoStream = /** @class */ (function (_super) {\n        __extends(VideoStream, _super);\n        function VideoStream(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        VideoStream.init_VideoStream = function () {\n            this.prototype.default_view = VideoStreamView;\n            this.define({\n                format: [p.String, 'png'],\n                paused: [p.Boolean, false],\n                snapshot: [p.Boolean, false],\n                timeout: [p.Number, 0],\n                value: [p.Any,]\n            });\n            this.override({\n                height: 240,\n                width: 320\n            });\n        };\n        VideoStream.__name__ = \"VideoStream\";\n        VideoStream.__module__ = \"panel.models.widgets\";\n        return VideoStream;\n    }(html_box_1.HTMLBox));\n    exports.VideoStream = VideoStream;\n    VideoStream.init_VideoStream();\n}\n","/* models/vtk/index.js */ function _(require, module, exports) {\n    var vtk_1 = require(\"e04073341c\") /* ./vtk */;\n    exports.VTKPlot = vtk_1.VTKPlot;\n    var vtkvolume_1 = require(\"51dfc8cb0e\") /* ./vtkvolume */;\n    exports.VTKVolumePlot = vtkvolume_1.VTKVolumePlot;\n    var vtkaxes_1 = require(\"5bc27423fe\") /* ./vtkaxes */;\n    exports.VTKAxes = vtkaxes_1.VTKAxes;\n}\n","/* models/vtk/vtk.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var dom_1 = require(\"@bokehjs/core/dom\");\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var object_1 = require(\"@bokehjs/core/util/object\");\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var vtk_layout_1 = require(\"3755bf9cce\") /* ./vtk_layout */;\n    var vtk_utils_1 = require(\"f35231aba1\") /* ./vtk_utils */;\n    var VTKPlotView = /** @class */ (function (_super) {\n        __extends(VTKPlotView, _super);\n        function VTKPlotView() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._setting = false;\n            _this._axes_initialized = false;\n            return _this;\n        }\n        VTKPlotView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.data.change, function () {\n                _this.invalidate_render();\n            });\n            this.connect(this.model.properties.camera.change, function () { return _this._set_camera_state(); });\n            this.connect(this.model.properties.orientation_widget.change, function () {\n                _this._orientation_widget_visbility(_this.model.orientation_widget);\n            });\n            this.connect(this.model.properties.axes.change, function () {\n                _this._delete_axes();\n                if (_this.model.axes)\n                    _this._set_axes();\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.el.addEventListener('mouseenter', function () {\n                var interactor = _this._vtk_renwin.getInteractor();\n                if (_this.model.enable_keybindings) {\n                    document.querySelector('body').addEventListener('keypress', interactor.handleKeyPress);\n                    document.querySelector('body').addEventListener('keydown', interactor.handleKeyDown);\n                    document.querySelector('body').addEventListener('keyup', interactor.handleKeyUp);\n                }\n            });\n            this.el.addEventListener('mouseleave', function () {\n                var interactor = _this._vtk_renwin.getInteractor();\n                document.querySelector('body').removeEventListener('keypress', interactor.handleKeyPress);\n                document.querySelector('body').removeEventListener('keydown', interactor.handleKeyDown);\n                document.querySelector('body').removeEventListener('keyup', interactor.handleKeyUp);\n            });\n        };\n        VTKPlotView.prototype.render = function () {\n            var _this = this;\n            _super.prototype.render.call(this);\n            this.model.renderer_el = this._vtk_renwin;\n            this._orientationWidget = null;\n            this._axes = null;\n            this._axes_initialized = false;\n            this._plot();\n            this._vtk_renwin.getRenderer().getActiveCamera().onModified(function () { return _this._get_camera_state(); });\n        };\n        VTKPlotView.prototype.after_layout = function () {\n            if (!this._axes_initialized) {\n                this._render_axes_canvas();\n                this._axes_initialized = true;\n            }\n        };\n        VTKPlotView.prototype._create_orientation_widget = function () {\n            var _this = this;\n            var axes = vtk_utils_1.vtkns.AxesActor.newInstance();\n            // add orientation widget\n            var orientationWidget = vtk_utils_1.vtkns.OrientationMarkerWidget.newInstance({\n                actor: axes,\n                interactor: this._vtk_renwin.getInteractor(),\n            });\n            orientationWidget.setEnabled(true);\n            orientationWidget.setViewportCorner(vtk_utils_1.vtkns.OrientationMarkerWidget.Corners.BOTTOM_RIGHT);\n            orientationWidget.setViewportSize(0.15);\n            orientationWidget.setMinPixelSize(100);\n            orientationWidget.setMaxPixelSize(300);\n            this._orientationWidget = orientationWidget;\n            var widgetManager = vtk_utils_1.vtkns.WidgetManager.newInstance();\n            widgetManager.setRenderer(orientationWidget.getRenderer());\n            var widget = vtk_utils_1.vtkns.InteractiveOrientationWidget.newInstance();\n            widget.placeWidget(axes.getBounds());\n            widget.setBounds(axes.getBounds());\n            widget.setPlaceFactor(1);\n            var vw = widgetManager.addWidget(widget);\n            this._widgetManager = widgetManager;\n            // Manage user interaction\n            vw.onOrientationChange(function (_a) {\n                var direction = _a.direction;\n                var camera = _this._vtk_renwin.getRenderer().getActiveCamera();\n                var focalPoint = camera.getFocalPoint();\n                var position = camera.getPosition();\n                var viewUp = camera.getViewUp();\n                var distance = Math.sqrt(Math.pow(position[0] - focalPoint[0], 2) +\n                    Math.pow(position[1] - focalPoint[1], 2) +\n                    Math.pow(position[2] - focalPoint[2], 2));\n                camera.setPosition(focalPoint[0] + direction[0] * distance, focalPoint[1] + direction[1] * distance, focalPoint[2] + direction[2] * distance);\n                if (direction[0])\n                    camera.setViewUp(vtk_utils_1.majorAxis(viewUp, 1, 2));\n                if (direction[1])\n                    camera.setViewUp(vtk_utils_1.majorAxis(viewUp, 0, 2));\n                if (direction[2])\n                    camera.setViewUp(vtk_utils_1.majorAxis(viewUp, 0, 1));\n                _this._orientationWidget.updateMarkerOrientation();\n                _this._vtk_renwin.getRenderer().resetCameraClippingRange();\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this._orientation_widget_visbility(this.model.orientation_widget);\n        };\n        VTKPlotView.prototype._render_axes_canvas = function () {\n            var _this = this;\n            var canvas_list = this._vtk_container.getElementsByTagName('canvas');\n            if (canvas_list.length != 1)\n                throw Error('Error at initialization of the 3D scene, container should have one and only one canvas');\n            else\n                canvas_list[0].classList.add('scene3d-canvas');\n            var axes_canvas = dom_1.canvas({\n                style: {\n                    position: \"absolute\",\n                    top: \"0\",\n                    left: \"0\",\n                    width: \"100%\",\n                    height: \"100%\"\n                }\n            });\n            axes_canvas.classList.add('axes-canvas');\n            this._vtk_container.appendChild(axes_canvas);\n            this._vtk_renwin.setResizeCallback(function () {\n                var dims = _this._vtk_container.getBoundingClientRect();\n                var width = Math.floor(dims.width * window.devicePixelRatio);\n                var height = Math.floor(dims.height * window.devicePixelRatio);\n                axes_canvas.setAttribute('width', width.toFixed());\n                axes_canvas.setAttribute('height', height.toFixed());\n            });\n        };\n        VTKPlotView.prototype._orientation_widget_visbility = function (visbility) {\n            this._orientationWidget.setEnabled(visbility);\n            if (visbility)\n                this._widgetManager.enablePicking();\n            else\n                this._widgetManager.disablePicking();\n            this._orientationWidget.updateMarkerOrientation();\n            this._vtk_renwin.getRenderWindow().render();\n        };\n        VTKPlotView.prototype._get_camera_state = function () {\n            if (!this._setting) {\n                this._setting = true;\n                var state = object_1.clone(this._vtk_renwin.getRenderer().getActiveCamera().get());\n                delete state.classHierarchy;\n                delete state.vtkObject;\n                delete state.vtkCamera;\n                delete state.viewPlaneNormal;\n                this.model.camera = state;\n                this._setting = false;\n            }\n        };\n        VTKPlotView.prototype._set_camera_state = function () {\n            if (!this._setting) {\n                this._setting = true;\n                try {\n                    this._vtk_renwin.getRenderer().getActiveCamera().set(this.model.camera);\n                }\n                finally {\n                    this._setting = false;\n                }\n                if (this._orientationWidget != null) {\n                    this._orientationWidget.updateMarkerOrientation();\n                }\n                this._vtk_renwin.getRenderer().resetCameraClippingRange();\n                this._vtk_renwin.getRenderWindow().render();\n            }\n        };\n        VTKPlotView.prototype._delete_axes = function () {\n            var _this = this;\n            if (this._axes == null)\n                return;\n            Object.keys(this._axes).forEach(function (key) { return _this._vtk_renwin.getRenderer().removeActor(_this._axes[key]); });\n            var axesCanvas = this._vtk_renwin.getContainer().getElementsByClassName('axes-canvas')[0];\n            var textCtx = axesCanvas.getContext(\"2d\");\n            if (textCtx)\n                textCtx.clearRect(0, 0, axesCanvas.clientWidth * window.devicePixelRatio, axesCanvas.clientHeight * window.devicePixelRatio);\n            this._axes = null;\n        };\n        VTKPlotView.prototype._set_axes = function () {\n            if (this.model.axes) {\n                var axesCanvas = this._vtk_renwin.getContainer().getElementsByClassName('axes-canvas')[0];\n                var _a = this.model.axes.create_axes(axesCanvas), psActor = _a.psActor, axesActor = _a.axesActor, gridActor = _a.gridActor;\n                this._axes = { psActor: psActor, axesActor: axesActor, gridActor: gridActor };\n                this._vtk_renwin.getRenderer().addActor(psActor);\n                this._vtk_renwin.getRenderer().addActor(axesActor);\n                this._vtk_renwin.getRenderer().addActor(gridActor);\n            }\n        };\n        VTKPlotView.prototype._plot = function () {\n            var _this = this;\n            if (!this.model.data) {\n                this._vtk_renwin.getRenderWindow().render();\n                return;\n            }\n            var dataAccessHelper = vtk_utils_1.vtkns.DataAccessHelper.get('zip', {\n                zipContent: atob(this.model.data),\n                callback: function (_zip) {\n                    var sceneImporter = vtk_utils_1.vtkns.HttpSceneLoader.newInstance({\n                        renderer: _this._vtk_renwin.getRenderer(),\n                        dataAccessHelper: dataAccessHelper,\n                    });\n                    var fn = vtk_utils_1.vtk.macro.debounce(function () {\n                        if (_this._orientationWidget == null)\n                            _this._create_orientation_widget();\n                        if (_this._axes == null && _this.model.axes)\n                            _this._set_axes();\n                        _this._set_camera_state();\n                    }, 100);\n                    sceneImporter.setUrl('index.json');\n                    sceneImporter.onReady(fn);\n                }\n            });\n        };\n        VTKPlotView.__name__ = \"VTKPlotView\";\n        return VTKPlotView;\n    }(vtk_layout_1.VTKHTMLBoxView));\n    exports.VTKPlotView = VTKPlotView;\n    var VTKPlot = /** @class */ (function (_super) {\n        __extends(VTKPlot, _super);\n        function VTKPlot(attrs) {\n            var _this = _super.call(this, attrs) || this;\n            _this.renderer_el = null;\n            _this.outline = vtk_utils_1.vtkns.OutlineFilter.newInstance(); //use to display bouding box of a selected actor\n            var mapper = vtk_utils_1.vtkns.Mapper.newInstance();\n            mapper.setInputConnection(_this.outline.getOutputPort());\n            _this.outline_actor = vtk_utils_1.vtkns.Actor.newInstance();\n            _this.outline_actor.setMapper(mapper);\n            return _this;\n        }\n        VTKPlot.prototype.getActors = function () {\n            return this.renderer_el.getRenderer().getActors();\n        };\n        VTKPlot.init_VTKPlot = function () {\n            this.prototype.default_view = VTKPlotView;\n            this.define({\n                axes: [p.Instance],\n                camera: [p.Any],\n                data: [p.String],\n                enable_keybindings: [p.Boolean, false],\n                orientation_widget: [p.Boolean, false],\n            });\n            this.override({\n                height: 300,\n                width: 300\n            });\n        };\n        VTKPlot.__name__ = \"VTKPlot\";\n        VTKPlot.__module__ = \"panel.models.vtk\";\n        return VTKPlot;\n    }(html_box_1.HTMLBox));\n    exports.VTKPlot = VTKPlot;\n    VTKPlot.init_VTKPlot();\n}\n","/* models/vtk/vtk_layout.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var layout_1 = require(\"ec60963462\") /* ../layout */;\n    var dom_1 = require(\"@bokehjs/core/dom\");\n    var vtk_utils_1 = require(\"f35231aba1\") /* ./vtk_utils */;\n    var VTKHTMLBoxView = /** @class */ (function (_super) {\n        __extends(VTKHTMLBoxView, _super);\n        function VTKHTMLBoxView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        VTKHTMLBoxView.prototype.render = function () {\n            _super.prototype.render.call(this);\n            this._vtk_container = dom_1.div();\n            layout_1.set_size(this._vtk_container, this.model);\n            this.el.appendChild(this._vtk_container);\n            this._vtk_renwin = vtk_utils_1.vtkns.FullScreenRenderWindow.newInstance({\n                rootContainer: this.el,\n                container: this._vtk_container\n            });\n            this._remove_default_key_binding();\n        };\n        VTKHTMLBoxView.prototype.after_layout = function () {\n            _super.prototype.after_layout.call(this);\n            this._vtk_renwin.resize();\n        };\n        VTKHTMLBoxView.prototype._remove_default_key_binding = function () {\n            var interactor = this._vtk_renwin.getInteractor();\n            document.querySelector('body').removeEventListener('keypress', interactor.handleKeyPress);\n            document.querySelector('body').removeEventListener('keydown', interactor.handleKeyDown);\n            document.querySelector('body').removeEventListener('keyup', interactor.handleKeyUp);\n        };\n        VTKHTMLBoxView.__name__ = \"VTKHTMLBoxView\";\n        return VTKHTMLBoxView;\n    }(layout_1.PanelHTMLBoxView));\n    exports.VTKHTMLBoxView = VTKHTMLBoxView;\n}\n","/* models/vtk/vtk_utils.js */ function _(require, module, exports) {\n    var serialization_1 = require(\"@bokehjs/core/util/serialization\");\n    exports.vtk = window.vtk;\n    exports.vtkns = {};\n    if (exports.vtk) {\n        exports.vtkns['DataArray'] = exports.vtk.Common.Core.vtkDataArray;\n        exports.vtkns['ImageData'] = exports.vtk.Common.DataModel.vtkImageData;\n        exports.vtkns['OutlineFilter'] = exports.vtk.Filters.General.vtkOutlineFilter;\n        exports.vtkns['CubeSource'] = exports.vtk.Filters.Sources.vtkCubeSource;\n        exports.vtkns['LineSource'] = exports.vtk.Filters.Sources.vtkLineSource;\n        exports.vtkns['PlaneSource'] = exports.vtk.Filters.Sources.vtkPlaneSource;\n        exports.vtkns['PointSource'] = exports.vtk.Filters.Sources.vtkPointSource;\n        exports.vtkns['OrientationMarkerWidget'] = exports.vtk.Interaction.Widgets.vtkOrientationMarkerWidget;\n        exports.vtkns['DataAccessHelper'] = exports.vtk.IO.Core.DataAccessHelper;\n        exports.vtkns['HttpSceneLoader'] = exports.vtk.IO.Core.vtkHttpSceneLoader;\n        exports.vtkns['ImageSlice'] = exports.vtk.Rendering.Core.vtkImageSlice;\n        exports.vtkns['Actor'] = exports.vtk.Rendering.Core.vtkActor;\n        exports.vtkns['AxesActor'] = exports.vtk.Rendering.Core.vtkAxesActor;\n        exports.vtkns['Mapper'] = exports.vtk.Rendering.Core.vtkMapper;\n        exports.vtkns['ImageMapper'] = exports.vtk.Rendering.Core.vtkImageMapper;\n        exports.vtkns['SphereMapper'] = exports.vtk.Rendering.Core.vtkSphereMapper;\n        exports.vtkns['WidgetManager'] = exports.vtk.Widgets.Core.vtkWidgetManager;\n        exports.vtkns['InteractiveOrientationWidget'] = exports.vtk.Widgets.Widgets3D.vtkInteractiveOrientationWidget;\n        exports.vtkns['PixelSpaceCallbackMapper'] = exports.vtk.Rendering.Core.vtkPixelSpaceCallbackMapper;\n        exports.vtkns['FullScreenRenderWindow'] = exports.vtk.Rendering.Misc.vtkFullScreenRenderWindow;\n        exports.vtkns['VolumeController'] = exports.vtk.Interaction.UI.vtkVolumeController;\n        exports.vtkns['Volume'] = exports.vtk.Rendering.Core.vtkVolume;\n        exports.vtkns['VolumeMapper'] = exports.vtk.Rendering.Core.vtkVolumeMapper;\n        exports.vtkns['ColorTransferFunction'] = exports.vtk.Rendering.Core.vtkColorTransferFunction;\n        exports.vtkns['PiecewiseFunction'] = exports.vtk.Common.DataModel.vtkPiecewiseFunction;\n        exports.vtkns['BoundingBox'] = exports.vtk.Common.DataModel.vtkBoundingBox;\n    }\n    function hexToRGB(color) {\n        return [parseInt(color.slice(1, 3), 16) / 255,\n            parseInt(color.slice(3, 5), 16) / 255,\n            parseInt(color.slice(5, 7), 16) / 255];\n    }\n    exports.hexToRGB = hexToRGB;\n    function utf8ToAB(utf8_str) {\n        var buf = new ArrayBuffer(utf8_str.length); // 2 bytes for each char\n        var bufView = new Uint8Array(buf);\n        for (var i = 0, strLen = utf8_str.length; i < strLen; i++) {\n            bufView[i] = utf8_str.charCodeAt(i);\n        }\n        return buf;\n    }\n    function data2VTKImageData(data) {\n        var source = exports.vtkns.ImageData.newInstance({\n            spacing: data.spacing\n        });\n        source.setDimensions(data.dims);\n        source.setOrigin(data.origin != null ? data.origin : data.dims.map(function (v) { return v / 2; }));\n        var dataArray = exports.vtkns.DataArray.newInstance({\n            name: \"scalars\",\n            numberOfComponents: 1,\n            values: new serialization_1.ARRAY_TYPES[data.dtype](utf8ToAB(atob(data.buffer)))\n        });\n        source.getPointData().setScalars(dataArray);\n        return source;\n    }\n    exports.data2VTKImageData = data2VTKImageData;\n    function majorAxis(vec3, idxA, idxB) {\n        var axis = [0, 0, 0];\n        var idx = Math.abs(vec3[idxA]) > Math.abs(vec3[idxB]) ? idxA : idxB;\n        var value = vec3[idx] > 0 ? 1 : -1;\n        axis[idx] = value;\n        return axis;\n    }\n    exports.majorAxis = majorAxis;\n    function cartesian_product() {\n        var arrays = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            arrays[_i] = arguments[_i];\n        }\n        return arrays.reduce(function (acc, curr) {\n            return acc.flatMap(function (c) { return curr.map(function (n) { return [].concat(c, n); }); });\n        });\n    }\n    exports.cartesian_product = cartesian_product;\n}\n","/* models/vtk/vtkvolume.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    var vtk_layout_1 = require(\"3755bf9cce\") /* ./vtk_layout */;\n    var vtk_utils_1 = require(\"f35231aba1\") /* ./vtk_utils */;\n    var VTKVolumePlotView = /** @class */ (function (_super) {\n        __extends(VTKVolumePlotView, _super);\n        function VTKVolumePlotView() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        VTKVolumePlotView.prototype.connect_signals = function () {\n            var _this = this;\n            _super.prototype.connect_signals.call(this);\n            this.connect(this.model.properties.data.change, function () {\n                _this.invalidate_render();\n            });\n            this.connect(this.model.properties.colormap.change, function () {\n                _this.colormap_slector.value = _this.model.colormap;\n                var event = new Event('change');\n                _this.colormap_slector.dispatchEvent(event);\n            });\n            this.connect(this.model.properties.shadow.change, function () {\n                _this.shadow_selector.value = _this.model.shadow ? '1' : '0';\n                var event = new Event('change');\n                _this.shadow_selector.dispatchEvent(event);\n            });\n            this.connect(this.model.properties.sampling.change, function () {\n                _this.sampling_slider.value = _this.model.sampling.toFixed(2);\n                var event = new Event('input');\n                _this.sampling_slider.dispatchEvent(event);\n            });\n            this.connect(this.model.properties.edge_gradient.change, function () {\n                _this.edge_gradient_slider.value = _this.model.edge_gradient.toFixed(2);\n                var event = new Event('input');\n                _this.edge_gradient_slider.dispatchEvent(event);\n            });\n            this.connect(this.model.properties.rescale.change, function () {\n                _this._controllerWidget.setRescaleColorMap(_this.model.rescale);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.ambient.change, function () {\n                _this.volume.getProperty().setAmbient(_this.model.ambient);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.diffuse.change, function () {\n                _this.volume.getProperty().setDiffuse(_this.model.diffuse);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.specular.change, function () {\n                _this.volume.getProperty().setSpecular(_this.model.specular);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.specular_power.change, function () {\n                _this.volume.getProperty().setSpecularPower(_this.model.specular_power);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.display_volume.change, function () {\n                _this._set_volume_visbility(_this.model.display_volume);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.display_slices.change, function () {\n                _this._set_slices_visbility(_this.model.display_slices);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.slice_i.change, function () {\n                _this.image_actor_i.getMapper().setISlice(_this.model.slice_i);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.slice_j.change, function () {\n                _this.image_actor_j.getMapper().setJSlice(_this.model.slice_j);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.slice_k.change, function () {\n                _this.image_actor_k.getMapper().setKSlice(_this.model.slice_k);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.render_background.change, function () {\n                var _a;\n                (_a = _this._vtk_renwin.getRenderer()).setBackground.apply(_a, vtk_utils_1.hexToRGB(_this.model.render_background));\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n            this.connect(this.model.properties.interpolation.change, function () {\n                _this._set_interpolation(_this.model.interpolation);\n                _this._vtk_renwin.getRenderWindow().render();\n            });\n        };\n        Object.defineProperty(VTKVolumePlotView.prototype, \"volume\", {\n            get: function () {\n                return this._controllerWidget.getActor();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKVolumePlotView.prototype, \"image_actor_i\", {\n            get: function () {\n                return this._vtk_renwin.getRenderer().getActors()[0];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKVolumePlotView.prototype, \"image_actor_j\", {\n            get: function () {\n                return this._vtk_renwin.getRenderer().getActors()[1];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKVolumePlotView.prototype, \"image_actor_k\", {\n            get: function () {\n                return this._vtk_renwin.getRenderer().getActors()[2];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKVolumePlotView.prototype, \"shadow_selector\", {\n            get: function () {\n                return this.el.querySelector('.js-shadow');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKVolumePlotView.prototype, \"edge_gradient_slider\", {\n            get: function () {\n                return this.el.querySelector('.js-edge');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKVolumePlotView.prototype, \"sampling_slider\", {\n            get: function () {\n                return this.el.querySelector('.js-spacing');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKVolumePlotView.prototype, \"colormap_slector\", {\n            get: function () {\n                return this.el.querySelector('.js-color-preset');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        VTKVolumePlotView.prototype._set_interpolation = function (interpolation) {\n            if (interpolation == 'fast_linear') {\n                this.volume.getProperty().setInterpolationTypeToFastLinear();\n                this.image_actor_i.getProperty().setInterpolationTypeToLinear();\n            }\n            else if (interpolation == 'linear') {\n                this.volume.getProperty().setInterpolationTypeToLinear();\n                this.image_actor_i.getProperty().setInterpolationTypeToLinear();\n            }\n            else { //nearest\n                this.volume.getProperty().setInterpolationTypeToNearest();\n                this.image_actor_i.getProperty().setInterpolationTypeToNearest();\n            }\n        };\n        VTKVolumePlotView.prototype.render = function () {\n            var _a;\n            _super.prototype.render.call(this);\n            this._controllerWidget = vtk_utils_1.vtkns.VolumeController.newInstance({\n                size: [400, 150],\n                rescaleColorMap: this.model.rescale,\n            });\n            this._vtk_image_data = vtk_utils_1.data2VTKImageData(this.model.data);\n            this._controllerWidget.setContainer(this.el);\n            this._vtk_renwin.getRenderWindow().getInteractor();\n            this._vtk_renwin.getRenderWindow().getInteractor().setDesiredUpdateRate(45);\n            this._plot_volume();\n            this._connect_controls();\n            this._plot_slices();\n            this._set_volume_visbility(this.model.display_volume);\n            this._set_slices_visbility(this.model.display_slices);\n            (_a = this._vtk_renwin.getRenderer()).setBackground.apply(_a, vtk_utils_1.hexToRGB(this.model.render_background));\n            this._set_interpolation(this.model.interpolation);\n            this._vtk_renwin.getRenderer().resetCamera();\n        };\n        VTKVolumePlotView.prototype._connect_controls = function () {\n            var _this = this;\n            // Colormap selector\n            this.colormap_slector.addEventListener('change', function () {\n                _this.model.colormap = _this.colormap_slector.value;\n            });\n            if (!this.model.colormap)\n                this.model.colormap = this.colormap_slector.value;\n            else\n                this.model.properties.colormap.change.emit();\n            // Shadow selector\n            this.shadow_selector.addEventListener('change', function () {\n                _this.model.shadow = !!Number(_this.shadow_selector.value);\n            });\n            if (this.model.shadow = !!Number(this.shadow_selector.value))\n                this.model.properties.shadow.change.emit();\n            // Sampling slider\n            this.sampling_slider.addEventListener('input', function () {\n                var js_sampling_value = Number(_this.sampling_slider.value);\n                if (Math.abs(_this.model.sampling - js_sampling_value) >= 5e-3)\n                    _this.model.sampling = js_sampling_value;\n            });\n            if (Math.abs(this.model.sampling - Number(this.shadow_selector.value)) >= 5e-3)\n                this.model.properties.sampling.change.emit();\n            // Edge Gradient slider\n            this.edge_gradient_slider.addEventListener('input', function () {\n                var js_edge_gradient_value = Number(_this.edge_gradient_slider.value);\n                if (Math.abs(_this.model.edge_gradient - js_edge_gradient_value) >= 5e-3)\n                    _this.model.edge_gradient = js_edge_gradient_value;\n            });\n            if (Math.abs(this.model.edge_gradient - Number(this.edge_gradient_slider.value)) >= 5e-3)\n                this.model.properties.edge_gradient.change.emit();\n        };\n        VTKVolumePlotView.prototype._plot_volume = function () {\n            //Create vtk volume and add it to the scene\n            var source = this._vtk_image_data;\n            var actor = vtk_utils_1.vtkns.Volume.newInstance();\n            var mapper = vtk_utils_1.vtkns.VolumeMapper.newInstance();\n            actor.setMapper(mapper);\n            mapper.setInputData(source);\n            var dataArray = source.getPointData().getScalars() || source.getPointData().getArrays()[0];\n            var dataRange = dataArray.getRange();\n            var lookupTable = vtk_utils_1.vtkns.ColorTransferFunction.newInstance();\n            var piecewiseFunction = vtk_utils_1.vtkns.PiecewiseFunction.newInstance();\n            var sampleDistance = 0.7 * Math.sqrt(source.getSpacing()\n                .map(function (v) { return v * v; })\n                .reduce(function (a, b) { return a + b; }, 0));\n            mapper.setSampleDistance(sampleDistance);\n            actor.getProperty().setRGBTransferFunction(0, lookupTable);\n            actor.getProperty().setScalarOpacity(0, piecewiseFunction);\n            actor.getProperty().setInterpolationTypeToFastLinear();\n            // actor.getProperty().setInterpolationTypeToLinear();\n            // For better looking volume rendering\n            // - distance in world coordinates a scalar opacity of 1.0\n            actor\n                .getProperty()\n                .setScalarOpacityUnitDistance(0, vtk_utils_1.vtkns.BoundingBox.getDiagonalLength(source.getBounds()) / Math.max.apply(Math, source.getDimensions()));\n            // - control how we emphasize surface boundaries\n            //  => max should be around the average gradient magnitude for the\n            //     volume or maybe average plus one std dev of the gradient magnitude\n            //     (adjusted for spacing, this is a world coordinate gradient, not a\n            //     pixel gradient)\n            //  => max hack: (dataRange[1] - dataRange[0]) * 0.05\n            actor.getProperty().setGradientOpacityMinimumValue(0, 0);\n            actor\n                .getProperty()\n                .setGradientOpacityMaximumValue(0, (dataRange[1] - dataRange[0]) * 0.05);\n            // - Use shading based on gradient\n            actor.getProperty().setShade(this.model.shadow);\n            actor.getProperty().setUseGradientOpacity(0, true);\n            // - generic good default\n            actor.getProperty().setGradientOpacityMinimumOpacity(0, 0.0);\n            actor.getProperty().setGradientOpacityMaximumOpacity(0, 1.0);\n            actor.getProperty().setAmbient(this.model.ambient);\n            actor.getProperty().setDiffuse(this.model.diffuse);\n            actor.getProperty().setSpecular(this.model.specular);\n            actor.getProperty().setSpecularPower(this.model.specular_power);\n            this._vtk_renwin.getRenderer().addVolume(actor);\n            this._controllerWidget.setupContent(this._vtk_renwin.getRenderWindow(), actor, true);\n        };\n        VTKVolumePlotView.prototype._plot_slices = function () {\n            var source = this._vtk_image_data;\n            var image_actor_i = vtk_utils_1.vtkns.ImageSlice.newInstance();\n            var image_actor_j = vtk_utils_1.vtkns.ImageSlice.newInstance();\n            var image_actor_k = vtk_utils_1.vtkns.ImageSlice.newInstance();\n            var image_mapper_i = vtk_utils_1.vtkns.ImageMapper.newInstance();\n            var image_mapper_j = vtk_utils_1.vtkns.ImageMapper.newInstance();\n            var image_mapper_k = vtk_utils_1.vtkns.ImageMapper.newInstance();\n            image_mapper_i.setInputData(source);\n            image_mapper_i.setISlice(this.model.slice_i);\n            image_actor_i.setMapper(image_mapper_i);\n            image_mapper_j.setInputData(source);\n            image_mapper_j.setJSlice(this.model.slice_j);\n            image_actor_j.setMapper(image_mapper_j);\n            image_mapper_k.setInputData(source);\n            image_mapper_k.setKSlice(this.model.slice_k);\n            image_actor_k.setMapper(image_mapper_k);\n            // set_color and opacity\n            var piecewiseFunction = vtk_utils_1.vtkns.PiecewiseFunction.newInstance();\n            piecewiseFunction.removeAllPoints();\n            piecewiseFunction.addPoint(0, 1);\n            var lookupTable = this.volume.getProperty().getRGBTransferFunction(0);\n            var property = image_actor_i.getProperty();\n            image_actor_j.setProperty(property);\n            image_actor_k.setProperty(property);\n            property.setRGBTransferFunction(lookupTable);\n            property.setScalarOpacity(piecewiseFunction);\n            var renderer = this._vtk_renwin.getRenderer();\n            renderer.addActor(image_actor_i);\n            renderer.addActor(image_actor_j);\n            renderer.addActor(image_actor_k);\n        };\n        VTKVolumePlotView.prototype._set_volume_visbility = function (visibility) {\n            this.volume.setVisibility(visibility);\n        };\n        VTKVolumePlotView.prototype._set_slices_visbility = function (visibility) {\n            this._vtk_renwin.getRenderer().getActors().map(function (actor) { return actor.setVisibility(visibility); });\n        };\n        VTKVolumePlotView.__name__ = \"VTKVolumePlotView\";\n        return VTKVolumePlotView;\n    }(vtk_layout_1.VTKHTMLBoxView));\n    exports.VTKVolumePlotView = VTKVolumePlotView;\n    var VTKVolumePlot = /** @class */ (function (_super) {\n        __extends(VTKVolumePlot, _super);\n        function VTKVolumePlot(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        VTKVolumePlot.init_VTKVolumePlot = function () {\n            this.prototype.default_view = VTKVolumePlotView;\n            this.define({\n                data: [p.Instance],\n                shadow: [p.Boolean, true],\n                sampling: [p.Number, 0.4],\n                edge_gradient: [p.Number, 0.2],\n                colormap: [p.String],\n                rescale: [p.Boolean, false],\n                ambient: [p.Number, 0.2],\n                diffuse: [p.Number, 0.7],\n                specular: [p.Number, 0.3],\n                specular_power: [p.Number, 8.0],\n                slice_i: [p.Int, 0],\n                slice_j: [p.Int, 0],\n                slice_k: [p.Int, 0],\n                display_volume: [p.Boolean, true],\n                display_slices: [p.Boolean, false],\n                render_background: [p.String, '#52576e'],\n                interpolation: [p.Any, 'fast_linear'],\n            });\n            this.override({\n                height: 300,\n                width: 300\n            });\n        };\n        VTKVolumePlot.__name__ = \"VTKVolumePlot\";\n        VTKVolumePlot.__module__ = \"panel.models.vtk\";\n        return VTKVolumePlot;\n    }(html_box_1.HTMLBox));\n    exports.VTKVolumePlot = VTKVolumePlot;\n    VTKVolumePlot.init_VTKVolumePlot();\n}\n","/* models/vtk/vtkaxes.js */ function _(require, module, exports) {\n    var __extends = (this && this.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b)\n                    if (b.hasOwnProperty(p))\n                        d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __importStar = (this && this.__importStar) || function (mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    result[k] = mod[k];\n        result[\"default\"] = mod;\n        return result;\n    };\n    var gl_matrix_1 = require(\"3f31df8362\") /* gl-matrix */;\n    var model_1 = require(\"@bokehjs/model\");\n    var p = __importStar(require(\"@bokehjs/core/properties\"));\n    var vtk_utils_1 = require(\"f35231aba1\") /* ./vtk_utils */;\n    var VTKAxes = /** @class */ (function (_super) {\n        __extends(VTKAxes, _super);\n        function VTKAxes(attrs) {\n            return _super.call(this, attrs) || this;\n        }\n        VTKAxes.init_VTKAxes = function () {\n            this.define({\n                origin: [p.Array],\n                xticker: [p.Instance],\n                yticker: [p.Instance],\n                zticker: [p.Instance],\n                digits: [p.Number, 1],\n                show_grid: [p.Boolean, true],\n                grid_opacity: [p.Number, 0.1],\n                axes_opacity: [p.Number, 1],\n                fontsize: [p.Number, 12],\n            });\n        };\n        Object.defineProperty(VTKAxes.prototype, \"xticks\", {\n            get: function () {\n                return this.xticker.ticks;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKAxes.prototype, \"yticks\", {\n            get: function () {\n                return this.yticker.ticks;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKAxes.prototype, \"zticks\", {\n            get: function () {\n                return this.zticker.ticks;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKAxes.prototype, \"xlabels\", {\n            get: function () {\n                var _this = this;\n                return this.xticker.labels ? this.xticker.labels : this.xticks.map(function (elem) { return elem.toFixed(_this.digits); });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKAxes.prototype, \"ylabels\", {\n            get: function () {\n                var _this = this;\n                return this.yticker.labels ? this.yticker.labels : this.yticks.map(function (elem) { return elem.toFixed(_this.digits); });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(VTKAxes.prototype, \"zlabels\", {\n            get: function () {\n                var _this = this;\n                return this.zticker.labels ? this.zticker.labels : this.zticks.map(function (elem) { return elem.toFixed(_this.digits); });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        VTKAxes.prototype._make_grid_lines = function (n, m, offset) {\n            var out = [];\n            for (var i = 0; i < n - 1; i++) {\n                for (var j = 0; j < m - 1; j++) {\n                    var v0 = i * m + j + offset;\n                    var v1 = i * m + j + 1 + offset;\n                    var v2 = (i + 1) * m + j + 1 + offset;\n                    var v3 = (i + 1) * m + j + offset;\n                    var line = [5, v0, v1, v2, v3, v0];\n                    out.push(line);\n                }\n            }\n            return out;\n        };\n        VTKAxes.prototype._create_grid_axes = function () {\n            var pts = [];\n            pts.push(vtk_utils_1.cartesian_product(this.xticks, this.yticks, [this.origin[2]])); //xy\n            pts.push(vtk_utils_1.cartesian_product([this.origin[0]], this.yticks, this.zticks)); //yz\n            pts.push(vtk_utils_1.cartesian_product(this.xticks, [this.origin[1]], this.zticks)); //xz\n            var polys = [];\n            var offset = 0;\n            polys.push(this._make_grid_lines(this.xticks.length, this.yticks.length, offset)); //xy\n            offset += this.xticks.length * this.yticks.length;\n            polys.push(this._make_grid_lines(this.yticks.length, this.zticks.length, offset)); //yz\n            offset += this.yticks.length * this.zticks.length;\n            polys.push(this._make_grid_lines(this.xticks.length, this.zticks.length, offset)); //xz\n            var gridPolyData = vtk_utils_1.vtk({\n                vtkClass: 'vtkPolyData',\n                points: {\n                    vtkClass: 'vtkPoints',\n                    dataType: 'Float32Array',\n                    numberOfComponents: 3,\n                    values: pts.flat(2),\n                },\n                lines: {\n                    vtkClass: 'vtkCellArray',\n                    dataType: 'Uint32Array',\n                    values: polys.flat(2)\n                }\n            });\n            var gridMapper = vtk_utils_1.vtkns.Mapper.newInstance();\n            var gridActor = vtk_utils_1.vtkns.Actor.newInstance();\n            gridMapper.setInputData(gridPolyData);\n            gridActor.setMapper(gridMapper);\n            gridActor.getProperty().setOpacity(this.grid_opacity);\n            gridActor.setVisibility(this.show_grid);\n            return gridActor;\n        };\n        VTKAxes.prototype.create_axes = function (canvas) {\n            var _this = this;\n            var points = [this.xticks, this.yticks, this.zticks].map(function (arr, axis) {\n                var coords = null;\n                switch (axis) {\n                    case 0:\n                        coords = vtk_utils_1.cartesian_product(arr, [_this.origin[1]], [_this.origin[2]]);\n                        break;\n                    case 1:\n                        coords = vtk_utils_1.cartesian_product([_this.origin[0]], arr, [_this.origin[2]]);\n                        break;\n                    case 2:\n                        coords = vtk_utils_1.cartesian_product([_this.origin[0]], [_this.origin[1]], arr);\n                        break;\n                }\n                return coords;\n            }).flat(2);\n            var axesPolyData = vtk_utils_1.vtk({\n                vtkClass: 'vtkPolyData',\n                points: {\n                    vtkClass: 'vtkPoints',\n                    dataType: 'Float32Array',\n                    numberOfComponents: 3,\n                    values: points,\n                },\n                lines: {\n                    vtkClass: 'vtkCellArray',\n                    dataType: 'Uint32Array',\n                    values: [2, 0, this.xticks.length - 1,\n                        2, this.xticks.length, this.xticks.length + this.yticks.length - 1,\n                        2, this.xticks.length + this.yticks.length, this.xticks.length + this.yticks.length + this.zticks.length - 1]\n                }\n            });\n            var psMapper = vtk_utils_1.vtkns.PixelSpaceCallbackMapper.newInstance();\n            psMapper.setInputData(axesPolyData);\n            psMapper.setUseZValues(true);\n            psMapper.setCallback(function (coordsList, camera, aspect) {\n                var textCtx = canvas.getContext(\"2d\");\n                if (textCtx) {\n                    var dims_1 = {\n                        height: canvas.clientHeight * window.devicePixelRatio,\n                        width: canvas.clientWidth * window.devicePixelRatio\n                    };\n                    var dataPoints_1 = psMapper.getInputData().getPoints();\n                    var viewMatrix_1 = camera.getViewMatrix();\n                    gl_matrix_1.mat4.transpose(viewMatrix_1, viewMatrix_1);\n                    var projMatrix_1 = camera.getProjectionMatrix(aspect, -1, 1);\n                    gl_matrix_1.mat4.transpose(projMatrix_1, projMatrix_1);\n                    textCtx.clearRect(0, 0, dims_1.width, dims_1.height);\n                    coordsList.forEach(function (xy, idx) {\n                        var pdPoint = dataPoints_1.getPoint(idx);\n                        var vc = gl_matrix_1.vec3.fromValues(pdPoint[0], pdPoint[1], pdPoint[2]);\n                        gl_matrix_1.vec3.transformMat4(vc, vc, viewMatrix_1);\n                        vc[2] += 0.05; // sensibility\n                        gl_matrix_1.vec3.transformMat4(vc, vc, projMatrix_1);\n                        if (vc[2] - 0.001 < xy[3]) {\n                            textCtx.font = '30px serif';\n                            textCtx.textAlign = 'center';\n                            textCtx.textBaseline = 'alphabetic';\n                            textCtx.fillText(\".\", xy[0], dims_1.height - xy[1] + 2);\n                            textCtx.font = _this.fontsize * window.devicePixelRatio + \"px serif\";\n                            textCtx.textAlign = 'right';\n                            textCtx.textBaseline = 'top';\n                            var label = void 0;\n                            if (idx < _this.xticks.length)\n                                label = _this.xlabels[idx];\n                            else if (idx >= _this.xticks.length && idx < _this.xticks.length + _this.yticks.length)\n                                label = _this.ylabels[idx - _this.xticks.length];\n                            else\n                                label = _this.zlabels[idx - (_this.xticks.length + _this.yticks.length)];\n                            textCtx.fillText(\"\" + label, xy[0], dims_1.height - xy[1]);\n                        }\n                    });\n                }\n            });\n            var psActor = vtk_utils_1.vtkns.Actor.newInstance();\n            psActor.setMapper(psMapper);\n            var axesMapper = vtk_utils_1.vtkns.Mapper.newInstance();\n            axesMapper.setInputData(axesPolyData);\n            var axesActor = vtk_utils_1.vtkns.Actor.newInstance();\n            axesActor.setMapper(axesMapper);\n            axesActor.getProperty().setOpacity(this.axes_opacity);\n            var gridActor = this._create_grid_axes();\n            return { psActor: psActor, axesActor: axesActor, gridActor: gridActor };\n        };\n        VTKAxes.__name__ = \"VTKAxes\";\n        VTKAxes.__module__ = \"panel.models.vtk\";\n        return VTKAxes;\n    }(model_1.Model));\n    exports.VTKAxes = VTKAxes;\n    VTKAxes.init_VTKAxes();\n}\n","/* gl-matrix/cjs/index.js */ function _(require, module, exports) {\n    exports.vec4 = exports.vec3 = exports.vec2 = exports.quat2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    exports.glMatrix = glMatrix;\n    var mat2 = _interopRequireWildcard(require(\"de7a8760b2\") /* ./mat2.js */);\n    exports.mat2 = mat2;\n    var mat2d = _interopRequireWildcard(require(\"19c4f7f3f1\") /* ./mat2d.js */);\n    exports.mat2d = mat2d;\n    var mat3 = _interopRequireWildcard(require(\"4b4956d3f5\") /* ./mat3.js */);\n    exports.mat3 = mat3;\n    var mat4 = _interopRequireWildcard(require(\"04eeb2ead8\") /* ./mat4.js */);\n    exports.mat4 = mat4;\n    var quat = _interopRequireWildcard(require(\"fb0a790f46\") /* ./quat.js */);\n    exports.quat = quat;\n    var quat2 = _interopRequireWildcard(require(\"43b2ef2f0a\") /* ./quat2.js */);\n    exports.quat2 = quat2;\n    var vec2 = _interopRequireWildcard(require(\"7aa5d7ae2d\") /* ./vec2.js */);\n    exports.vec2 = vec2;\n    var vec3 = _interopRequireWildcard(require(\"9aff2264cd\") /* ./vec3.js */);\n    exports.vec3 = vec3;\n    var vec4 = _interopRequireWildcard(require(\"2c797465df\") /* ./vec4.js */);\n    exports.vec4 = vec4;\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n}\n","/* gl-matrix/cjs/common.js */ function _(require, module, exports) {\n    exports.setMatrixArrayType = setMatrixArrayType;\n    exports.toRadian = toRadian;\n    exports.equals = equals;\n    exports.RANDOM = exports.ARRAY_TYPE = exports.EPSILON = void 0;\n    /**\n     * Common utilities\n     * @module glMatrix\n     */\n    // Configuration Constants\n    var EPSILON = 0.000001;\n    exports.EPSILON = EPSILON;\n    var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n    exports.ARRAY_TYPE = ARRAY_TYPE;\n    var RANDOM = Math.random;\n    /**\n     * Sets the type of array used when creating new vectors and matrices\n     *\n     * @param {Type} type Array type, such as Float32Array or Array\n     */\n    exports.RANDOM = RANDOM;\n    function setMatrixArrayType(type) {\n        exports.ARRAY_TYPE = ARRAY_TYPE = type;\n    }\n    var degree = Math.PI / 180;\n    /**\n     * Convert Degree To Radian\n     *\n     * @param {Number} a Angle in Degrees\n     */\n    function toRadian(a) {\n        return a * degree;\n    }\n    /**\n     * Tests whether or not the arguments have approximately the same value, within an absolute\n     * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n     * than or equal to 1.0, and a relative tolerance is used for larger values)\n     *\n     * @param {Number} a The first number to test.\n     * @param {Number} b The second number to test.\n     * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n     */\n    function equals(a, b) {\n        return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n    }\n    if (!Math.hypot)\n        Math.hypot = function () {\n            var y = 0, i = arguments.length;\n            while (i--) {\n                y += arguments[i] * arguments[i];\n            }\n            return Math.sqrt(y);\n        };\n}\n","/* gl-matrix/cjs/mat2.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.clone = clone;\n    exports.copy = copy;\n    exports.identity = identity;\n    exports.fromValues = fromValues;\n    exports.set = set;\n    exports.transpose = transpose;\n    exports.invert = invert;\n    exports.adjoint = adjoint;\n    exports.determinant = determinant;\n    exports.multiply = multiply;\n    exports.rotate = rotate;\n    exports.scale = scale;\n    exports.fromRotation = fromRotation;\n    exports.fromScaling = fromScaling;\n    exports.str = str;\n    exports.frob = frob;\n    exports.LDU = LDU;\n    exports.add = add;\n    exports.subtract = subtract;\n    exports.exactEquals = exactEquals;\n    exports.equals = equals;\n    exports.multiplyScalar = multiplyScalar;\n    exports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n    exports.sub = exports.mul = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * 2x2 Matrix\n     * @module mat2\n     */\n    /**\n     * Creates a new identity mat2\n     *\n     * @returns {mat2} a new 2x2 matrix\n     */\n    function create() {\n        var out = new glMatrix.ARRAY_TYPE(4);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            out[1] = 0;\n            out[2] = 0;\n        }\n        out[0] = 1;\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Creates a new mat2 initialized with values from an existing matrix\n     *\n     * @param {mat2} a matrix to clone\n     * @returns {mat2} a new 2x2 matrix\n     */\n    function clone(a) {\n        var out = new glMatrix.ARRAY_TYPE(4);\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Copy the values from one mat2 to another\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the source matrix\n     * @returns {mat2} out\n     */\n    function copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set a mat2 to the identity matrix\n     *\n     * @param {mat2} out the receiving matrix\n     * @returns {mat2} out\n     */\n    function identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Create a new mat2 with the given values\n     *\n     * @param {Number} m00 Component in column 0, row 0 position (index 0)\n     * @param {Number} m01 Component in column 0, row 1 position (index 1)\n     * @param {Number} m10 Component in column 1, row 0 position (index 2)\n     * @param {Number} m11 Component in column 1, row 1 position (index 3)\n     * @returns {mat2} out A new 2x2 matrix\n     */\n    function fromValues(m00, m01, m10, m11) {\n        var out = new glMatrix.ARRAY_TYPE(4);\n        out[0] = m00;\n        out[1] = m01;\n        out[2] = m10;\n        out[3] = m11;\n        return out;\n    }\n    /**\n     * Set the components of a mat2 to the given values\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {Number} m00 Component in column 0, row 0 position (index 0)\n     * @param {Number} m01 Component in column 0, row 1 position (index 1)\n     * @param {Number} m10 Component in column 1, row 0 position (index 2)\n     * @param {Number} m11 Component in column 1, row 1 position (index 3)\n     * @returns {mat2} out\n     */\n    function set(out, m00, m01, m10, m11) {\n        out[0] = m00;\n        out[1] = m01;\n        out[2] = m10;\n        out[3] = m11;\n        return out;\n    }\n    /**\n     * Transpose the values of a mat2\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the source matrix\n     * @returns {mat2} out\n     */\n    function transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache\n        // some values\n        if (out === a) {\n            var a1 = a[1];\n            out[1] = a[2];\n            out[2] = a1;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[2];\n            out[2] = a[1];\n            out[3] = a[3];\n        }\n        return out;\n    }\n    /**\n     * Inverts a mat2\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the source matrix\n     * @returns {mat2} out\n     */\n    function invert(out, a) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3]; // Calculate the determinant\n        var det = a0 * a3 - a2 * a1;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = a3 * det;\n        out[1] = -a1 * det;\n        out[2] = -a2 * det;\n        out[3] = a0 * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a mat2\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the source matrix\n     * @returns {mat2} out\n     */\n    function adjoint(out, a) {\n        // Caching this value is nessecary if out == a\n        var a0 = a[0];\n        out[0] = a[3];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a0;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a mat2\n     *\n     * @param {mat2} a the source matrix\n     * @returns {Number} determinant of a\n     */\n    function determinant(a) {\n        return a[0] * a[3] - a[2] * a[1];\n    }\n    /**\n     * Multiplies two mat2's\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the first operand\n     * @param {mat2} b the second operand\n     * @returns {mat2} out\n     */\n    function multiply(out, a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n        out[0] = a0 * b0 + a2 * b1;\n        out[1] = a1 * b0 + a3 * b1;\n        out[2] = a0 * b2 + a2 * b3;\n        out[3] = a1 * b2 + a3 * b3;\n        return out;\n    }\n    /**\n     * Rotates a mat2 by the given angle\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the matrix to rotate\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat2} out\n     */\n    function rotate(out, a, rad) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        var s = Math.sin(rad);\n        var c = Math.cos(rad);\n        out[0] = a0 * c + a2 * s;\n        out[1] = a1 * c + a3 * s;\n        out[2] = a0 * -s + a2 * c;\n        out[3] = a1 * -s + a3 * c;\n        return out;\n    }\n    /**\n     * Scales the mat2 by the dimensions in the given vec2\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the matrix to rotate\n     * @param {vec2} v the vec2 to scale the matrix by\n     * @returns {mat2} out\n     **/\n    function scale(out, a, v) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        var v0 = v[0], v1 = v[1];\n        out[0] = a0 * v0;\n        out[1] = a1 * v0;\n        out[2] = a2 * v1;\n        out[3] = a3 * v1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a given angle\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2.identity(dest);\n     *     mat2.rotate(dest, dest, rad);\n     *\n     * @param {mat2} out mat2 receiving operation result\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat2} out\n     */\n    function fromRotation(out, rad) {\n        var s = Math.sin(rad);\n        var c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = -s;\n        out[3] = c;\n        return out;\n    }\n    /**\n     * Creates a matrix from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2.identity(dest);\n     *     mat2.scale(dest, dest, vec);\n     *\n     * @param {mat2} out mat2 receiving operation result\n     * @param {vec2} v Scaling vector\n     * @returns {mat2} out\n     */\n    function fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = v[1];\n        return out;\n    }\n    /**\n     * Returns a string representation of a mat2\n     *\n     * @param {mat2} a matrix to represent as a string\n     * @returns {String} string representation of the matrix\n     */\n    function str(a) {\n        return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n    }\n    /**\n     * Returns Frobenius norm of a mat2\n     *\n     * @param {mat2} a the matrix to calculate Frobenius norm of\n     * @returns {Number} Frobenius norm\n     */\n    function frob(a) {\n        return Math.hypot(a[0], a[1], a[2], a[3]);\n    }\n    /**\n     * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n     * @param {mat2} L the lower triangular matrix\n     * @param {mat2} D the diagonal matrix\n     * @param {mat2} U the upper triangular matrix\n     * @param {mat2} a the input matrix to factorize\n     */\n    function LDU(L, D, U, a) {\n        L[2] = a[2] / a[0];\n        U[0] = a[0];\n        U[1] = a[1];\n        U[3] = a[3] - L[2] * U[1];\n        return [L, D, U];\n    }\n    /**\n     * Adds two mat2's\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the first operand\n     * @param {mat2} b the second operand\n     * @returns {mat2} out\n     */\n    function add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the first operand\n     * @param {mat2} b the second operand\n     * @returns {mat2} out\n     */\n    function subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        return out;\n    }\n    /**\n     * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n     *\n     * @param {mat2} a The first matrix.\n     * @param {mat2} b The second matrix.\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\n     */\n    function exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n    }\n    /**\n     * Returns whether or not the matrices have approximately the same elements in the same position.\n     *\n     * @param {mat2} a The first matrix.\n     * @param {mat2} b The second matrix.\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\n     */\n    function equals(a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n        return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n    }\n    /**\n     * Multiply each element of the matrix by a scalar.\n     *\n     * @param {mat2} out the receiving matrix\n     * @param {mat2} a the matrix to scale\n     * @param {Number} b amount to scale the matrix's elements by\n     * @returns {mat2} out\n     */\n    function multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        return out;\n    }\n    /**\n     * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n     *\n     * @param {mat2} out the receiving vector\n     * @param {mat2} a the first operand\n     * @param {mat2} b the second operand\n     * @param {Number} scale the amount to scale b's elements by before adding\n     * @returns {mat2} out\n     */\n    function multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        return out;\n    }\n    /**\n     * Alias for {@link mat2.multiply}\n     * @function\n     */\n    var mul = multiply;\n    /**\n     * Alias for {@link mat2.subtract}\n     * @function\n     */\n    exports.mul = mul;\n    var sub = subtract;\n    exports.sub = sub;\n}\n","/* gl-matrix/cjs/mat2d.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.clone = clone;\n    exports.copy = copy;\n    exports.identity = identity;\n    exports.fromValues = fromValues;\n    exports.set = set;\n    exports.invert = invert;\n    exports.determinant = determinant;\n    exports.multiply = multiply;\n    exports.rotate = rotate;\n    exports.scale = scale;\n    exports.translate = translate;\n    exports.fromRotation = fromRotation;\n    exports.fromScaling = fromScaling;\n    exports.fromTranslation = fromTranslation;\n    exports.str = str;\n    exports.frob = frob;\n    exports.add = add;\n    exports.subtract = subtract;\n    exports.multiplyScalar = multiplyScalar;\n    exports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n    exports.exactEquals = exactEquals;\n    exports.equals = equals;\n    exports.sub = exports.mul = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * 2x3 Matrix\n     * @module mat2d\n     *\n     * @description\n     * A mat2d contains six elements defined as:\n     * <pre>\n     * [a, b, c,\n     *  d, tx, ty]\n     * </pre>\n     * This is a short form for the 3x3 matrix:\n     * <pre>\n     * [a, b, 0,\n     *  c, d, 0,\n     *  tx, ty, 1]\n     * </pre>\n     * The last column is ignored so the array is shorter and operations are faster.\n     */\n    /**\n     * Creates a new identity mat2d\n     *\n     * @returns {mat2d} a new 2x3 matrix\n     */\n    function create() {\n        var out = new glMatrix.ARRAY_TYPE(6);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            out[1] = 0;\n            out[2] = 0;\n            out[4] = 0;\n            out[5] = 0;\n        }\n        out[0] = 1;\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Creates a new mat2d initialized with values from an existing matrix\n     *\n     * @param {mat2d} a matrix to clone\n     * @returns {mat2d} a new 2x3 matrix\n     */\n    function clone(a) {\n        var out = new glMatrix.ARRAY_TYPE(6);\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        return out;\n    }\n    /**\n     * Copy the values from one mat2d to another\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the source matrix\n     * @returns {mat2d} out\n     */\n    function copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        return out;\n    }\n    /**\n     * Set a mat2d to the identity matrix\n     *\n     * @param {mat2d} out the receiving matrix\n     * @returns {mat2d} out\n     */\n    function identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Create a new mat2d with the given values\n     *\n     * @param {Number} a Component A (index 0)\n     * @param {Number} b Component B (index 1)\n     * @param {Number} c Component C (index 2)\n     * @param {Number} d Component D (index 3)\n     * @param {Number} tx Component TX (index 4)\n     * @param {Number} ty Component TY (index 5)\n     * @returns {mat2d} A new mat2d\n     */\n    function fromValues(a, b, c, d, tx, ty) {\n        var out = new glMatrix.ARRAY_TYPE(6);\n        out[0] = a;\n        out[1] = b;\n        out[2] = c;\n        out[3] = d;\n        out[4] = tx;\n        out[5] = ty;\n        return out;\n    }\n    /**\n     * Set the components of a mat2d to the given values\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {Number} a Component A (index 0)\n     * @param {Number} b Component B (index 1)\n     * @param {Number} c Component C (index 2)\n     * @param {Number} d Component D (index 3)\n     * @param {Number} tx Component TX (index 4)\n     * @param {Number} ty Component TY (index 5)\n     * @returns {mat2d} out\n     */\n    function set(out, a, b, c, d, tx, ty) {\n        out[0] = a;\n        out[1] = b;\n        out[2] = c;\n        out[3] = d;\n        out[4] = tx;\n        out[5] = ty;\n        return out;\n    }\n    /**\n     * Inverts a mat2d\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the source matrix\n     * @returns {mat2d} out\n     */\n    function invert(out, a) {\n        var aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n        var atx = a[4], aty = a[5];\n        var det = aa * ad - ab * ac;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = ad * det;\n        out[1] = -ab * det;\n        out[2] = -ac * det;\n        out[3] = aa * det;\n        out[4] = (ac * aty - ad * atx) * det;\n        out[5] = (ab * atx - aa * aty) * det;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a mat2d\n     *\n     * @param {mat2d} a the source matrix\n     * @returns {Number} determinant of a\n     */\n    function determinant(a) {\n        return a[0] * a[3] - a[1] * a[2];\n    }\n    /**\n     * Multiplies two mat2d's\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the first operand\n     * @param {mat2d} b the second operand\n     * @returns {mat2d} out\n     */\n    function multiply(out, a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n        out[0] = a0 * b0 + a2 * b1;\n        out[1] = a1 * b0 + a3 * b1;\n        out[2] = a0 * b2 + a2 * b3;\n        out[3] = a1 * b2 + a3 * b3;\n        out[4] = a0 * b4 + a2 * b5 + a4;\n        out[5] = a1 * b4 + a3 * b5 + a5;\n        return out;\n    }\n    /**\n     * Rotates a mat2d by the given angle\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the matrix to rotate\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat2d} out\n     */\n    function rotate(out, a, rad) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n        var s = Math.sin(rad);\n        var c = Math.cos(rad);\n        out[0] = a0 * c + a2 * s;\n        out[1] = a1 * c + a3 * s;\n        out[2] = a0 * -s + a2 * c;\n        out[3] = a1 * -s + a3 * c;\n        out[4] = a4;\n        out[5] = a5;\n        return out;\n    }\n    /**\n     * Scales the mat2d by the dimensions in the given vec2\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the matrix to translate\n     * @param {vec2} v the vec2 to scale the matrix by\n     * @returns {mat2d} out\n     **/\n    function scale(out, a, v) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n        var v0 = v[0], v1 = v[1];\n        out[0] = a0 * v0;\n        out[1] = a1 * v0;\n        out[2] = a2 * v1;\n        out[3] = a3 * v1;\n        out[4] = a4;\n        out[5] = a5;\n        return out;\n    }\n    /**\n     * Translates the mat2d by the dimensions in the given vec2\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the matrix to translate\n     * @param {vec2} v the vec2 to translate the matrix by\n     * @returns {mat2d} out\n     **/\n    function translate(out, a, v) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n        var v0 = v[0], v1 = v[1];\n        out[0] = a0;\n        out[1] = a1;\n        out[2] = a2;\n        out[3] = a3;\n        out[4] = a0 * v0 + a2 * v1 + a4;\n        out[5] = a1 * v0 + a3 * v1 + a5;\n        return out;\n    }\n    /**\n     * Creates a matrix from a given angle\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2d.identity(dest);\n     *     mat2d.rotate(dest, dest, rad);\n     *\n     * @param {mat2d} out mat2d receiving operation result\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat2d} out\n     */\n    function fromRotation(out, rad) {\n        var s = Math.sin(rad), c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = -s;\n        out[3] = c;\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Creates a matrix from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2d.identity(dest);\n     *     mat2d.scale(dest, dest, vec);\n     *\n     * @param {mat2d} out mat2d receiving operation result\n     * @param {vec2} v Scaling vector\n     * @returns {mat2d} out\n     */\n    function fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = v[1];\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Creates a matrix from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2d.identity(dest);\n     *     mat2d.translate(dest, dest, vec);\n     *\n     * @param {mat2d} out mat2d receiving operation result\n     * @param {vec2} v Translation vector\n     * @returns {mat2d} out\n     */\n    function fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = v[0];\n        out[5] = v[1];\n        return out;\n    }\n    /**\n     * Returns a string representation of a mat2d\n     *\n     * @param {mat2d} a matrix to represent as a string\n     * @returns {String} string representation of the matrix\n     */\n    function str(a) {\n        return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n    }\n    /**\n     * Returns Frobenius norm of a mat2d\n     *\n     * @param {mat2d} a the matrix to calculate Frobenius norm of\n     * @returns {Number} Frobenius norm\n     */\n    function frob(a) {\n        return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n    }\n    /**\n     * Adds two mat2d's\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the first operand\n     * @param {mat2d} b the second operand\n     * @returns {mat2d} out\n     */\n    function add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the first operand\n     * @param {mat2d} b the second operand\n     * @returns {mat2d} out\n     */\n    function subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        return out;\n    }\n    /**\n     * Multiply each element of the matrix by a scalar.\n     *\n     * @param {mat2d} out the receiving matrix\n     * @param {mat2d} a the matrix to scale\n     * @param {Number} b amount to scale the matrix's elements by\n     * @returns {mat2d} out\n     */\n    function multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        return out;\n    }\n    /**\n     * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n     *\n     * @param {mat2d} out the receiving vector\n     * @param {mat2d} a the first operand\n     * @param {mat2d} b the second operand\n     * @param {Number} scale the amount to scale b's elements by before adding\n     * @returns {mat2d} out\n     */\n    function multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n     *\n     * @param {mat2d} a The first matrix.\n     * @param {mat2d} b The second matrix.\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\n     */\n    function exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n    }\n    /**\n     * Returns whether or not the matrices have approximately the same elements in the same position.\n     *\n     * @param {mat2d} a The first matrix.\n     * @param {mat2d} b The second matrix.\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\n     */\n    function equals(a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n        return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n    }\n    /**\n     * Alias for {@link mat2d.multiply}\n     * @function\n     */\n    var mul = multiply;\n    /**\n     * Alias for {@link mat2d.subtract}\n     * @function\n     */\n    exports.mul = mul;\n    var sub = subtract;\n    exports.sub = sub;\n}\n","/* gl-matrix/cjs/mat3.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.fromMat4 = fromMat4;\n    exports.clone = clone;\n    exports.copy = copy;\n    exports.fromValues = fromValues;\n    exports.set = set;\n    exports.identity = identity;\n    exports.transpose = transpose;\n    exports.invert = invert;\n    exports.adjoint = adjoint;\n    exports.determinant = determinant;\n    exports.multiply = multiply;\n    exports.translate = translate;\n    exports.rotate = rotate;\n    exports.scale = scale;\n    exports.fromTranslation = fromTranslation;\n    exports.fromRotation = fromRotation;\n    exports.fromScaling = fromScaling;\n    exports.fromMat2d = fromMat2d;\n    exports.fromQuat = fromQuat;\n    exports.normalFromMat4 = normalFromMat4;\n    exports.projection = projection;\n    exports.str = str;\n    exports.frob = frob;\n    exports.add = add;\n    exports.subtract = subtract;\n    exports.multiplyScalar = multiplyScalar;\n    exports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n    exports.exactEquals = exactEquals;\n    exports.equals = equals;\n    exports.sub = exports.mul = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * 3x3 Matrix\n     * @module mat3\n     */\n    /**\n     * Creates a new identity mat3\n     *\n     * @returns {mat3} a new 3x3 matrix\n     */\n    function create() {\n        var out = new glMatrix.ARRAY_TYPE(9);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 0;\n            out[5] = 0;\n            out[6] = 0;\n            out[7] = 0;\n        }\n        out[0] = 1;\n        out[4] = 1;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Copies the upper-left 3x3 values into the given mat3.\n     *\n     * @param {mat3} out the receiving 3x3 matrix\n     * @param {mat4} a   the source 4x4 matrix\n     * @returns {mat3} out\n     */\n    function fromMat4(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[4];\n        out[4] = a[5];\n        out[5] = a[6];\n        out[6] = a[8];\n        out[7] = a[9];\n        out[8] = a[10];\n        return out;\n    }\n    /**\n     * Creates a new mat3 initialized with values from an existing matrix\n     *\n     * @param {mat3} a matrix to clone\n     * @returns {mat3} a new 3x3 matrix\n     */\n    function clone(a) {\n        var out = new glMatrix.ARRAY_TYPE(9);\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        return out;\n    }\n    /**\n     * Copy the values from one mat3 to another\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the source matrix\n     * @returns {mat3} out\n     */\n    function copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        return out;\n    }\n    /**\n     * Create a new mat3 with the given values\n     *\n     * @param {Number} m00 Component in column 0, row 0 position (index 0)\n     * @param {Number} m01 Component in column 0, row 1 position (index 1)\n     * @param {Number} m02 Component in column 0, row 2 position (index 2)\n     * @param {Number} m10 Component in column 1, row 0 position (index 3)\n     * @param {Number} m11 Component in column 1, row 1 position (index 4)\n     * @param {Number} m12 Component in column 1, row 2 position (index 5)\n     * @param {Number} m20 Component in column 2, row 0 position (index 6)\n     * @param {Number} m21 Component in column 2, row 1 position (index 7)\n     * @param {Number} m22 Component in column 2, row 2 position (index 8)\n     * @returns {mat3} A new mat3\n     */\n    function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        var out = new glMatrix.ARRAY_TYPE(9);\n        out[0] = m00;\n        out[1] = m01;\n        out[2] = m02;\n        out[3] = m10;\n        out[4] = m11;\n        out[5] = m12;\n        out[6] = m20;\n        out[7] = m21;\n        out[8] = m22;\n        return out;\n    }\n    /**\n     * Set the components of a mat3 to the given values\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {Number} m00 Component in column 0, row 0 position (index 0)\n     * @param {Number} m01 Component in column 0, row 1 position (index 1)\n     * @param {Number} m02 Component in column 0, row 2 position (index 2)\n     * @param {Number} m10 Component in column 1, row 0 position (index 3)\n     * @param {Number} m11 Component in column 1, row 1 position (index 4)\n     * @param {Number} m12 Component in column 1, row 2 position (index 5)\n     * @param {Number} m20 Component in column 2, row 0 position (index 6)\n     * @param {Number} m21 Component in column 2, row 1 position (index 7)\n     * @param {Number} m22 Component in column 2, row 2 position (index 8)\n     * @returns {mat3} out\n     */\n    function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        out[0] = m00;\n        out[1] = m01;\n        out[2] = m02;\n        out[3] = m10;\n        out[4] = m11;\n        out[5] = m12;\n        out[6] = m20;\n        out[7] = m21;\n        out[8] = m22;\n        return out;\n    }\n    /**\n     * Set a mat3 to the identity matrix\n     *\n     * @param {mat3} out the receiving matrix\n     * @returns {mat3} out\n     */\n    function identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 1;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Transpose the values of a mat3\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the source matrix\n     * @returns {mat3} out\n     */\n    function transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\n        if (out === a) {\n            var a01 = a[1], a02 = a[2], a12 = a[5];\n            out[1] = a[3];\n            out[2] = a[6];\n            out[3] = a01;\n            out[5] = a[7];\n            out[6] = a02;\n            out[7] = a12;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[3];\n            out[2] = a[6];\n            out[3] = a[1];\n            out[4] = a[4];\n            out[5] = a[7];\n            out[6] = a[2];\n            out[7] = a[5];\n            out[8] = a[8];\n        }\n        return out;\n    }\n    /**\n     * Inverts a mat3\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the source matrix\n     * @returns {mat3} out\n     */\n    function invert(out, a) {\n        var a00 = a[0], a01 = a[1], a02 = a[2];\n        var a10 = a[3], a11 = a[4], a12 = a[5];\n        var a20 = a[6], a21 = a[7], a22 = a[8];\n        var b01 = a22 * a11 - a12 * a21;\n        var b11 = -a22 * a10 + a12 * a20;\n        var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n        var det = a00 * b01 + a01 * b11 + a02 * b21;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = b01 * det;\n        out[1] = (-a22 * a01 + a02 * a21) * det;\n        out[2] = (a12 * a01 - a02 * a11) * det;\n        out[3] = b11 * det;\n        out[4] = (a22 * a00 - a02 * a20) * det;\n        out[5] = (-a12 * a00 + a02 * a10) * det;\n        out[6] = b21 * det;\n        out[7] = (-a21 * a00 + a01 * a20) * det;\n        out[8] = (a11 * a00 - a01 * a10) * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a mat3\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the source matrix\n     * @returns {mat3} out\n     */\n    function adjoint(out, a) {\n        var a00 = a[0], a01 = a[1], a02 = a[2];\n        var a10 = a[3], a11 = a[4], a12 = a[5];\n        var a20 = a[6], a21 = a[7], a22 = a[8];\n        out[0] = a11 * a22 - a12 * a21;\n        out[1] = a02 * a21 - a01 * a22;\n        out[2] = a01 * a12 - a02 * a11;\n        out[3] = a12 * a20 - a10 * a22;\n        out[4] = a00 * a22 - a02 * a20;\n        out[5] = a02 * a10 - a00 * a12;\n        out[6] = a10 * a21 - a11 * a20;\n        out[7] = a01 * a20 - a00 * a21;\n        out[8] = a00 * a11 - a01 * a10;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a mat3\n     *\n     * @param {mat3} a the source matrix\n     * @returns {Number} determinant of a\n     */\n    function determinant(a) {\n        var a00 = a[0], a01 = a[1], a02 = a[2];\n        var a10 = a[3], a11 = a[4], a12 = a[5];\n        var a20 = a[6], a21 = a[7], a22 = a[8];\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n    }\n    /**\n     * Multiplies two mat3's\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the first operand\n     * @param {mat3} b the second operand\n     * @returns {mat3} out\n     */\n    function multiply(out, a, b) {\n        var a00 = a[0], a01 = a[1], a02 = a[2];\n        var a10 = a[3], a11 = a[4], a12 = a[5];\n        var a20 = a[6], a21 = a[7], a22 = a[8];\n        var b00 = b[0], b01 = b[1], b02 = b[2];\n        var b10 = b[3], b11 = b[4], b12 = b[5];\n        var b20 = b[6], b21 = b[7], b22 = b[8];\n        out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n        out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n        out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n        out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n        out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n        out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n        out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n        out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n        out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n        return out;\n    }\n    /**\n     * Translate a mat3 by the given vector\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the matrix to translate\n     * @param {vec2} v vector to translate by\n     * @returns {mat3} out\n     */\n    function translate(out, a, v) {\n        var a00 = a[0], a01 = a[1], a02 = a[2], a10 = a[3], a11 = a[4], a12 = a[5], a20 = a[6], a21 = a[7], a22 = a[8], x = v[0], y = v[1];\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a10;\n        out[4] = a11;\n        out[5] = a12;\n        out[6] = x * a00 + y * a10 + a20;\n        out[7] = x * a01 + y * a11 + a21;\n        out[8] = x * a02 + y * a12 + a22;\n        return out;\n    }\n    /**\n     * Rotates a mat3 by the given angle\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the matrix to rotate\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat3} out\n     */\n    function rotate(out, a, rad) {\n        var a00 = a[0], a01 = a[1], a02 = a[2], a10 = a[3], a11 = a[4], a12 = a[5], a20 = a[6], a21 = a[7], a22 = a[8], s = Math.sin(rad), c = Math.cos(rad);\n        out[0] = c * a00 + s * a10;\n        out[1] = c * a01 + s * a11;\n        out[2] = c * a02 + s * a12;\n        out[3] = c * a10 - s * a00;\n        out[4] = c * a11 - s * a01;\n        out[5] = c * a12 - s * a02;\n        out[6] = a20;\n        out[7] = a21;\n        out[8] = a22;\n        return out;\n    }\n    ;\n    /**\n     * Scales the mat3 by the dimensions in the given vec2\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the matrix to rotate\n     * @param {vec2} v the vec2 to scale the matrix by\n     * @returns {mat3} out\n     **/\n    function scale(out, a, v) {\n        var x = v[0], y = v[1];\n        out[0] = x * a[0];\n        out[1] = x * a[1];\n        out[2] = x * a[2];\n        out[3] = y * a[3];\n        out[4] = y * a[4];\n        out[5] = y * a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        return out;\n    }\n    /**\n     * Creates a matrix from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.translate(dest, dest, vec);\n     *\n     * @param {mat3} out mat3 receiving operation result\n     * @param {vec2} v Translation vector\n     * @returns {mat3} out\n     */\n    function fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 1;\n        out[5] = 0;\n        out[6] = v[0];\n        out[7] = v[1];\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a given angle\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.rotate(dest, dest, rad);\n     *\n     * @param {mat3} out mat3 receiving operation result\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat3} out\n     */\n    function fromRotation(out, rad) {\n        var s = Math.sin(rad), c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = 0;\n        out[3] = -s;\n        out[4] = c;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.scale(dest, dest, vec);\n     *\n     * @param {mat3} out mat3 receiving operation result\n     * @param {vec2} v Scaling vector\n     * @returns {mat3} out\n     */\n    function fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = v[1];\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Copies the values from a mat2d into a mat3\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat2d} a the matrix to copy\n     * @returns {mat3} out\n     **/\n    function fromMat2d(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = 0;\n        out[3] = a[2];\n        out[4] = a[3];\n        out[5] = 0;\n        out[6] = a[4];\n        out[7] = a[5];\n        out[8] = 1;\n        return out;\n    }\n    /**\n    * Calculates a 3x3 matrix from the given quaternion\n    *\n    * @param {mat3} out mat3 receiving operation result\n    * @param {quat} q Quaternion to create matrix from\n    *\n    * @returns {mat3} out\n    */\n    function fromQuat(out, q) {\n        var x = q[0], y = q[1], z = q[2], w = q[3];\n        var x2 = x + x;\n        var y2 = y + y;\n        var z2 = z + z;\n        var xx = x * x2;\n        var yx = y * x2;\n        var yy = y * y2;\n        var zx = z * x2;\n        var zy = z * y2;\n        var zz = z * z2;\n        var wx = w * x2;\n        var wy = w * y2;\n        var wz = w * z2;\n        out[0] = 1 - yy - zz;\n        out[3] = yx - wz;\n        out[6] = zx + wy;\n        out[1] = yx + wz;\n        out[4] = 1 - xx - zz;\n        out[7] = zy - wx;\n        out[2] = zx - wy;\n        out[5] = zy + wx;\n        out[8] = 1 - xx - yy;\n        return out;\n    }\n    /**\n    * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n    *\n    * @param {mat3} out mat3 receiving operation result\n    * @param {mat4} a Mat4 to derive the normal matrix from\n    *\n    * @returns {mat3} out\n    */\n    function normalFromMat4(out, a) {\n        var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        var a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        var a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        var a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        var b00 = a00 * a11 - a01 * a10;\n        var b01 = a00 * a12 - a02 * a10;\n        var b02 = a00 * a13 - a03 * a10;\n        var b03 = a01 * a12 - a02 * a11;\n        var b04 = a01 * a13 - a03 * a11;\n        var b05 = a02 * a13 - a03 * a12;\n        var b06 = a20 * a31 - a21 * a30;\n        var b07 = a20 * a32 - a22 * a30;\n        var b08 = a20 * a33 - a23 * a30;\n        var b09 = a21 * a32 - a22 * a31;\n        var b10 = a21 * a33 - a23 * a31;\n        var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n        var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n        return out;\n    }\n    /**\n     * Generates a 2D projection matrix with the given bounds\n     *\n     * @param {mat3} out mat3 frustum matrix will be written into\n     * @param {number} width Width of your gl context\n     * @param {number} height Height of gl context\n     * @returns {mat3} out\n     */\n    function projection(out, width, height) {\n        out[0] = 2 / width;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = -2 / height;\n        out[5] = 0;\n        out[6] = -1;\n        out[7] = 1;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Returns a string representation of a mat3\n     *\n     * @param {mat3} a matrix to represent as a string\n     * @returns {String} string representation of the matrix\n     */\n    function str(a) {\n        return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n    }\n    /**\n     * Returns Frobenius norm of a mat3\n     *\n     * @param {mat3} a the matrix to calculate Frobenius norm of\n     * @returns {Number} Frobenius norm\n     */\n    function frob(a) {\n        return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n    }\n    /**\n     * Adds two mat3's\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the first operand\n     * @param {mat3} b the second operand\n     * @returns {mat3} out\n     */\n    function add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        out[8] = a[8] + b[8];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the first operand\n     * @param {mat3} b the second operand\n     * @returns {mat3} out\n     */\n    function subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        out[6] = a[6] - b[6];\n        out[7] = a[7] - b[7];\n        out[8] = a[8] - b[8];\n        return out;\n    }\n    /**\n     * Multiply each element of the matrix by a scalar.\n     *\n     * @param {mat3} out the receiving matrix\n     * @param {mat3} a the matrix to scale\n     * @param {Number} b amount to scale the matrix's elements by\n     * @returns {mat3} out\n     */\n    function multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        out[8] = a[8] * b;\n        return out;\n    }\n    /**\n     * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n     *\n     * @param {mat3} out the receiving vector\n     * @param {mat3} a the first operand\n     * @param {mat3} b the second operand\n     * @param {Number} scale the amount to scale b's elements by before adding\n     * @returns {mat3} out\n     */\n    function multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        out[6] = a[6] + b[6] * scale;\n        out[7] = a[7] + b[7] * scale;\n        out[8] = a[8] + b[8] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n     *\n     * @param {mat3} a The first matrix.\n     * @param {mat3} b The second matrix.\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\n     */\n    function exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n    }\n    /**\n     * Returns whether or not the matrices have approximately the same elements in the same position.\n     *\n     * @param {mat3} a The first matrix.\n     * @param {mat3} b The second matrix.\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\n     */\n    function equals(a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n        return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n    }\n    /**\n     * Alias for {@link mat3.multiply}\n     * @function\n     */\n    var mul = multiply;\n    /**\n     * Alias for {@link mat3.subtract}\n     * @function\n     */\n    exports.mul = mul;\n    var sub = subtract;\n    exports.sub = sub;\n}\n","/* gl-matrix/cjs/mat4.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.clone = clone;\n    exports.copy = copy;\n    exports.fromValues = fromValues;\n    exports.set = set;\n    exports.identity = identity;\n    exports.transpose = transpose;\n    exports.invert = invert;\n    exports.adjoint = adjoint;\n    exports.determinant = determinant;\n    exports.multiply = multiply;\n    exports.translate = translate;\n    exports.scale = scale;\n    exports.rotate = rotate;\n    exports.rotateX = rotateX;\n    exports.rotateY = rotateY;\n    exports.rotateZ = rotateZ;\n    exports.fromTranslation = fromTranslation;\n    exports.fromScaling = fromScaling;\n    exports.fromRotation = fromRotation;\n    exports.fromXRotation = fromXRotation;\n    exports.fromYRotation = fromYRotation;\n    exports.fromZRotation = fromZRotation;\n    exports.fromRotationTranslation = fromRotationTranslation;\n    exports.fromQuat2 = fromQuat2;\n    exports.getTranslation = getTranslation;\n    exports.getScaling = getScaling;\n    exports.getRotation = getRotation;\n    exports.fromRotationTranslationScale = fromRotationTranslationScale;\n    exports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\n    exports.fromQuat = fromQuat;\n    exports.frustum = frustum;\n    exports.perspective = perspective;\n    exports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\n    exports.ortho = ortho;\n    exports.lookAt = lookAt;\n    exports.targetTo = targetTo;\n    exports.str = str;\n    exports.frob = frob;\n    exports.add = add;\n    exports.subtract = subtract;\n    exports.multiplyScalar = multiplyScalar;\n    exports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n    exports.exactEquals = exactEquals;\n    exports.equals = equals;\n    exports.sub = exports.mul = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n     * @module mat4\n     */\n    /**\n     * Creates a new identity mat4\n     *\n     * @returns {mat4} a new 4x4 matrix\n     */\n    function create() {\n        var out = new glMatrix.ARRAY_TYPE(16);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 0;\n            out[4] = 0;\n            out[6] = 0;\n            out[7] = 0;\n            out[8] = 0;\n            out[9] = 0;\n            out[11] = 0;\n            out[12] = 0;\n            out[13] = 0;\n            out[14] = 0;\n        }\n        out[0] = 1;\n        out[5] = 1;\n        out[10] = 1;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a new mat4 initialized with values from an existing matrix\n     *\n     * @param {mat4} a matrix to clone\n     * @returns {mat4} a new 4x4 matrix\n     */\n    function clone(a) {\n        var out = new glMatrix.ARRAY_TYPE(16);\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        out[9] = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n        return out;\n    }\n    /**\n     * Copy the values from one mat4 to another\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the source matrix\n     * @returns {mat4} out\n     */\n    function copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        out[9] = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n        return out;\n    }\n    /**\n     * Create a new mat4 with the given values\n     *\n     * @param {Number} m00 Component in column 0, row 0 position (index 0)\n     * @param {Number} m01 Component in column 0, row 1 position (index 1)\n     * @param {Number} m02 Component in column 0, row 2 position (index 2)\n     * @param {Number} m03 Component in column 0, row 3 position (index 3)\n     * @param {Number} m10 Component in column 1, row 0 position (index 4)\n     * @param {Number} m11 Component in column 1, row 1 position (index 5)\n     * @param {Number} m12 Component in column 1, row 2 position (index 6)\n     * @param {Number} m13 Component in column 1, row 3 position (index 7)\n     * @param {Number} m20 Component in column 2, row 0 position (index 8)\n     * @param {Number} m21 Component in column 2, row 1 position (index 9)\n     * @param {Number} m22 Component in column 2, row 2 position (index 10)\n     * @param {Number} m23 Component in column 2, row 3 position (index 11)\n     * @param {Number} m30 Component in column 3, row 0 position (index 12)\n     * @param {Number} m31 Component in column 3, row 1 position (index 13)\n     * @param {Number} m32 Component in column 3, row 2 position (index 14)\n     * @param {Number} m33 Component in column 3, row 3 position (index 15)\n     * @returns {mat4} A new mat4\n     */\n    function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        var out = new glMatrix.ARRAY_TYPE(16);\n        out[0] = m00;\n        out[1] = m01;\n        out[2] = m02;\n        out[3] = m03;\n        out[4] = m10;\n        out[5] = m11;\n        out[6] = m12;\n        out[7] = m13;\n        out[8] = m20;\n        out[9] = m21;\n        out[10] = m22;\n        out[11] = m23;\n        out[12] = m30;\n        out[13] = m31;\n        out[14] = m32;\n        out[15] = m33;\n        return out;\n    }\n    /**\n     * Set the components of a mat4 to the given values\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {Number} m00 Component in column 0, row 0 position (index 0)\n     * @param {Number} m01 Component in column 0, row 1 position (index 1)\n     * @param {Number} m02 Component in column 0, row 2 position (index 2)\n     * @param {Number} m03 Component in column 0, row 3 position (index 3)\n     * @param {Number} m10 Component in column 1, row 0 position (index 4)\n     * @param {Number} m11 Component in column 1, row 1 position (index 5)\n     * @param {Number} m12 Component in column 1, row 2 position (index 6)\n     * @param {Number} m13 Component in column 1, row 3 position (index 7)\n     * @param {Number} m20 Component in column 2, row 0 position (index 8)\n     * @param {Number} m21 Component in column 2, row 1 position (index 9)\n     * @param {Number} m22 Component in column 2, row 2 position (index 10)\n     * @param {Number} m23 Component in column 2, row 3 position (index 11)\n     * @param {Number} m30 Component in column 3, row 0 position (index 12)\n     * @param {Number} m31 Component in column 3, row 1 position (index 13)\n     * @param {Number} m32 Component in column 3, row 2 position (index 14)\n     * @param {Number} m33 Component in column 3, row 3 position (index 15)\n     * @returns {mat4} out\n     */\n    function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        out[0] = m00;\n        out[1] = m01;\n        out[2] = m02;\n        out[3] = m03;\n        out[4] = m10;\n        out[5] = m11;\n        out[6] = m12;\n        out[7] = m13;\n        out[8] = m20;\n        out[9] = m21;\n        out[10] = m22;\n        out[11] = m23;\n        out[12] = m30;\n        out[13] = m31;\n        out[14] = m32;\n        out[15] = m33;\n        return out;\n    }\n    /**\n     * Set a mat4 to the identity matrix\n     *\n     * @param {mat4} out the receiving matrix\n     * @returns {mat4} out\n     */\n    function identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Transpose the values of a mat4\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the source matrix\n     * @returns {mat4} out\n     */\n    function transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\n        if (out === a) {\n            var a01 = a[1], a02 = a[2], a03 = a[3];\n            var a12 = a[6], a13 = a[7];\n            var a23 = a[11];\n            out[1] = a[4];\n            out[2] = a[8];\n            out[3] = a[12];\n            out[4] = a01;\n            out[6] = a[9];\n            out[7] = a[13];\n            out[8] = a02;\n            out[9] = a12;\n            out[11] = a[14];\n            out[12] = a03;\n            out[13] = a13;\n            out[14] = a23;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[4];\n            out[2] = a[8];\n            out[3] = a[12];\n            out[4] = a[1];\n            out[5] = a[5];\n            out[6] = a[9];\n            out[7] = a[13];\n            out[8] = a[2];\n            out[9] = a[6];\n            out[10] = a[10];\n            out[11] = a[14];\n            out[12] = a[3];\n            out[13] = a[7];\n            out[14] = a[11];\n            out[15] = a[15];\n        }\n        return out;\n    }\n    /**\n     * Inverts a mat4\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the source matrix\n     * @returns {mat4} out\n     */\n    function invert(out, a) {\n        var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        var a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        var a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        var a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        var b00 = a00 * a11 - a01 * a10;\n        var b01 = a00 * a12 - a02 * a10;\n        var b02 = a00 * a13 - a03 * a10;\n        var b03 = a01 * a12 - a02 * a11;\n        var b04 = a01 * a13 - a03 * a11;\n        var b05 = a02 * a13 - a03 * a12;\n        var b06 = a20 * a31 - a21 * a30;\n        var b07 = a20 * a32 - a22 * a30;\n        var b08 = a20 * a33 - a23 * a30;\n        var b09 = a21 * a32 - a22 * a31;\n        var b10 = a21 * a33 - a23 * a31;\n        var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n        var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a mat4\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the source matrix\n     * @returns {mat4} out\n     */\n    function adjoint(out, a) {\n        var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        var a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        var a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        var a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n        out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n        out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n        out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n        out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n        out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n        out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n        out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n        out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n        out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n        out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n        out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n        out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n        out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n        out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n        out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n        return out;\n    }\n    /**\n     * Calculates the determinant of a mat4\n     *\n     * @param {mat4} a the source matrix\n     * @returns {Number} determinant of a\n     */\n    function determinant(a) {\n        var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        var a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        var a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        var a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        var b00 = a00 * a11 - a01 * a10;\n        var b01 = a00 * a12 - a02 * a10;\n        var b02 = a00 * a13 - a03 * a10;\n        var b03 = a01 * a12 - a02 * a11;\n        var b04 = a01 * a13 - a03 * a11;\n        var b05 = a02 * a13 - a03 * a12;\n        var b06 = a20 * a31 - a21 * a30;\n        var b07 = a20 * a32 - a22 * a30;\n        var b08 = a20 * a33 - a23 * a30;\n        var b09 = a21 * a32 - a22 * a31;\n        var b10 = a21 * a33 - a23 * a31;\n        var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n        return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    }\n    /**\n     * Multiplies two mat4s\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the first operand\n     * @param {mat4} b the second operand\n     * @returns {mat4} out\n     */\n    function multiply(out, a, b) {\n        var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        var a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        var a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        var a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15]; // Cache only the current line of the second matrix\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[4];\n        b1 = b[5];\n        b2 = b[6];\n        b3 = b[7];\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[8];\n        b1 = b[9];\n        b2 = b[10];\n        b3 = b[11];\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[12];\n        b1 = b[13];\n        b2 = b[14];\n        b3 = b[15];\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        return out;\n    }\n    /**\n     * Translate a mat4 by the given vector\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the matrix to translate\n     * @param {vec3} v vector to translate by\n     * @returns {mat4} out\n     */\n    function translate(out, a, v) {\n        var x = v[0], y = v[1], z = v[2];\n        var a00, a01, a02, a03;\n        var a10, a11, a12, a13;\n        var a20, a21, a22, a23;\n        if (a === out) {\n            out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n            out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n            out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n            out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n        }\n        else {\n            a00 = a[0];\n            a01 = a[1];\n            a02 = a[2];\n            a03 = a[3];\n            a10 = a[4];\n            a11 = a[5];\n            a12 = a[6];\n            a13 = a[7];\n            a20 = a[8];\n            a21 = a[9];\n            a22 = a[10];\n            a23 = a[11];\n            out[0] = a00;\n            out[1] = a01;\n            out[2] = a02;\n            out[3] = a03;\n            out[4] = a10;\n            out[5] = a11;\n            out[6] = a12;\n            out[7] = a13;\n            out[8] = a20;\n            out[9] = a21;\n            out[10] = a22;\n            out[11] = a23;\n            out[12] = a00 * x + a10 * y + a20 * z + a[12];\n            out[13] = a01 * x + a11 * y + a21 * z + a[13];\n            out[14] = a02 * x + a12 * y + a22 * z + a[14];\n            out[15] = a03 * x + a13 * y + a23 * z + a[15];\n        }\n        return out;\n    }\n    /**\n     * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the matrix to scale\n     * @param {vec3} v the vec3 to scale the matrix by\n     * @returns {mat4} out\n     **/\n    function scale(out, a, v) {\n        var x = v[0], y = v[1], z = v[2];\n        out[0] = a[0] * x;\n        out[1] = a[1] * x;\n        out[2] = a[2] * x;\n        out[3] = a[3] * x;\n        out[4] = a[4] * y;\n        out[5] = a[5] * y;\n        out[6] = a[6] * y;\n        out[7] = a[7] * y;\n        out[8] = a[8] * z;\n        out[9] = a[9] * z;\n        out[10] = a[10] * z;\n        out[11] = a[11] * z;\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n        return out;\n    }\n    /**\n     * Rotates a mat4 by the given angle around the given axis\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the matrix to rotate\n     * @param {Number} rad the angle to rotate the matrix by\n     * @param {vec3} axis the axis to rotate around\n     * @returns {mat4} out\n     */\n    function rotate(out, a, rad, axis) {\n        var x = axis[0], y = axis[1], z = axis[2];\n        var len = Math.hypot(x, y, z);\n        var s, c, t;\n        var a00, a01, a02, a03;\n        var a10, a11, a12, a13;\n        var a20, a21, a22, a23;\n        var b00, b01, b02;\n        var b10, b11, b12;\n        var b20, b21, b22;\n        if (len < glMatrix.EPSILON) {\n            return null;\n        }\n        len = 1 / len;\n        x *= len;\n        y *= len;\n        z *= len;\n        s = Math.sin(rad);\n        c = Math.cos(rad);\n        t = 1 - c;\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11]; // Construct the elements of the rotation matrix\n        b00 = x * x * t + c;\n        b01 = y * x * t + z * s;\n        b02 = z * x * t - y * s;\n        b10 = x * y * t - z * s;\n        b11 = y * y * t + c;\n        b12 = z * y * t + x * s;\n        b20 = x * z * t + y * s;\n        b21 = y * z * t - x * s;\n        b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged last row\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the X axis\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the matrix to rotate\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat4} out\n     */\n    function rotateX(out, a, rad) {\n        var s = Math.sin(rad);\n        var c = Math.cos(rad);\n        var a10 = a[4];\n        var a11 = a[5];\n        var a12 = a[6];\n        var a13 = a[7];\n        var a20 = a[8];\n        var a21 = a[9];\n        var a22 = a[10];\n        var a23 = a[11];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged rows\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        } // Perform axis-specific matrix multiplication\n        out[4] = a10 * c + a20 * s;\n        out[5] = a11 * c + a21 * s;\n        out[6] = a12 * c + a22 * s;\n        out[7] = a13 * c + a23 * s;\n        out[8] = a20 * c - a10 * s;\n        out[9] = a21 * c - a11 * s;\n        out[10] = a22 * c - a12 * s;\n        out[11] = a23 * c - a13 * s;\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the Y axis\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the matrix to rotate\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat4} out\n     */\n    function rotateY(out, a, rad) {\n        var s = Math.sin(rad);\n        var c = Math.cos(rad);\n        var a00 = a[0];\n        var a01 = a[1];\n        var a02 = a[2];\n        var a03 = a[3];\n        var a20 = a[8];\n        var a21 = a[9];\n        var a22 = a[10];\n        var a23 = a[11];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged rows\n            out[4] = a[4];\n            out[5] = a[5];\n            out[6] = a[6];\n            out[7] = a[7];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        } // Perform axis-specific matrix multiplication\n        out[0] = a00 * c - a20 * s;\n        out[1] = a01 * c - a21 * s;\n        out[2] = a02 * c - a22 * s;\n        out[3] = a03 * c - a23 * s;\n        out[8] = a00 * s + a20 * c;\n        out[9] = a01 * s + a21 * c;\n        out[10] = a02 * s + a22 * c;\n        out[11] = a03 * s + a23 * c;\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the Z axis\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the matrix to rotate\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat4} out\n     */\n    function rotateZ(out, a, rad) {\n        var s = Math.sin(rad);\n        var c = Math.cos(rad);\n        var a00 = a[0];\n        var a01 = a[1];\n        var a02 = a[2];\n        var a03 = a[3];\n        var a10 = a[4];\n        var a11 = a[5];\n        var a12 = a[6];\n        var a13 = a[7];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged last row\n            out[8] = a[8];\n            out[9] = a[9];\n            out[10] = a[10];\n            out[11] = a[11];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        } // Perform axis-specific matrix multiplication\n        out[0] = a00 * c + a10 * s;\n        out[1] = a01 * c + a11 * s;\n        out[2] = a02 * c + a12 * s;\n        out[3] = a03 * c + a13 * s;\n        out[4] = a10 * c - a00 * s;\n        out[5] = a11 * c - a01 * s;\n        out[6] = a12 * c - a02 * s;\n        out[7] = a13 * c - a03 * s;\n        return out;\n    }\n    /**\n     * Creates a matrix from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, dest, vec);\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {vec3} v Translation vector\n     * @returns {mat4} out\n     */\n    function fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.scale(dest, dest, vec);\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {vec3} v Scaling vector\n     * @returns {mat4} out\n     */\n    function fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = v[1];\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = v[2];\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotate(dest, dest, rad, axis);\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {Number} rad the angle to rotate the matrix by\n     * @param {vec3} axis the axis to rotate around\n     * @returns {mat4} out\n     */\n    function fromRotation(out, rad, axis) {\n        var x = axis[0], y = axis[1], z = axis[2];\n        var len = Math.hypot(x, y, z);\n        var s, c, t;\n        if (len < glMatrix.EPSILON) {\n            return null;\n        }\n        len = 1 / len;\n        x *= len;\n        y *= len;\n        z *= len;\n        s = Math.sin(rad);\n        c = Math.cos(rad);\n        t = 1 - c; // Perform rotation-specific matrix multiplication\n        out[0] = x * x * t + c;\n        out[1] = y * x * t + z * s;\n        out[2] = z * x * t - y * s;\n        out[3] = 0;\n        out[4] = x * y * t - z * s;\n        out[5] = y * y * t + c;\n        out[6] = z * y * t + x * s;\n        out[7] = 0;\n        out[8] = x * z * t + y * s;\n        out[9] = y * z * t - x * s;\n        out[10] = z * z * t + c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the X axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateX(dest, dest, rad);\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat4} out\n     */\n    function fromXRotation(out, rad) {\n        var s = Math.sin(rad);\n        var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = c;\n        out[6] = s;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = -s;\n        out[10] = c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the Y axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateY(dest, dest, rad);\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat4} out\n     */\n    function fromYRotation(out, rad) {\n        var s = Math.sin(rad);\n        var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n        out[0] = c;\n        out[1] = 0;\n        out[2] = -s;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = s;\n        out[9] = 0;\n        out[10] = c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the Z axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateZ(dest, dest, rad);\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {Number} rad the angle to rotate the matrix by\n     * @returns {mat4} out\n     */\n    function fromZRotation(out, rad) {\n        var s = Math.sin(rad);\n        var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n        out[0] = c;\n        out[1] = s;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = -s;\n        out[5] = c;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation and vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {quat4} q Rotation quaternion\n     * @param {vec3} v Translation vector\n     * @returns {mat4} out\n     */\n    function fromRotationTranslation(out, q, v) {\n        // Quaternion math\n        var x = q[0], y = q[1], z = q[2], w = q[3];\n        var x2 = x + x;\n        var y2 = y + y;\n        var z2 = z + z;\n        var xx = x * x2;\n        var xy = x * y2;\n        var xz = x * z2;\n        var yy = y * y2;\n        var yz = y * z2;\n        var zz = z * z2;\n        var wx = w * x2;\n        var wy = w * y2;\n        var wz = w * z2;\n        out[0] = 1 - (yy + zz);\n        out[1] = xy + wz;\n        out[2] = xz - wy;\n        out[3] = 0;\n        out[4] = xy - wz;\n        out[5] = 1 - (xx + zz);\n        out[6] = yz + wx;\n        out[7] = 0;\n        out[8] = xz + wy;\n        out[9] = yz - wx;\n        out[10] = 1 - (xx + yy);\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a new mat4 from a dual quat.\n     *\n     * @param {mat4} out Matrix\n     * @param {quat2} a Dual Quaternion\n     * @returns {mat4} mat4 receiving operation result\n     */\n    function fromQuat2(out, a) {\n        var translation = new glMatrix.ARRAY_TYPE(3);\n        var bx = -a[0], by = -a[1], bz = -a[2], bw = a[3], ax = a[4], ay = a[5], az = a[6], aw = a[7];\n        var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n        if (magnitude > 0) {\n            translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n            translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n            translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n        }\n        else {\n            translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n            translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n            translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n        }\n        fromRotationTranslation(out, a, translation);\n        return out;\n    }\n    /**\n     * Returns the translation vector component of a transformation\n     *  matrix. If a matrix is built with fromRotationTranslation,\n     *  the returned vector will be the same as the translation vector\n     *  originally supplied.\n     * @param  {vec3} out Vector to receive translation component\n     * @param  {mat4} mat Matrix to be decomposed (input)\n     * @return {vec3} out\n     */\n    function getTranslation(out, mat) {\n        out[0] = mat[12];\n        out[1] = mat[13];\n        out[2] = mat[14];\n        return out;\n    }\n    /**\n     * Returns the scaling factor component of a transformation\n     *  matrix. If a matrix is built with fromRotationTranslationScale\n     *  with a normalized Quaternion paramter, the returned vector will be\n     *  the same as the scaling vector\n     *  originally supplied.\n     * @param  {vec3} out Vector to receive scaling factor component\n     * @param  {mat4} mat Matrix to be decomposed (input)\n     * @return {vec3} out\n     */\n    function getScaling(out, mat) {\n        var m11 = mat[0];\n        var m12 = mat[1];\n        var m13 = mat[2];\n        var m21 = mat[4];\n        var m22 = mat[5];\n        var m23 = mat[6];\n        var m31 = mat[8];\n        var m32 = mat[9];\n        var m33 = mat[10];\n        out[0] = Math.hypot(m11, m12, m13);\n        out[1] = Math.hypot(m21, m22, m23);\n        out[2] = Math.hypot(m31, m32, m33);\n        return out;\n    }\n    /**\n     * Returns a quaternion representing the rotational component\n     *  of a transformation matrix. If a matrix is built with\n     *  fromRotationTranslation, the returned quaternion will be the\n     *  same as the quaternion originally supplied.\n     * @param {quat} out Quaternion to receive the rotation component\n     * @param {mat4} mat Matrix to be decomposed (input)\n     * @return {quat} out\n     */\n    function getRotation(out, mat) {\n        var scaling = new glMatrix.ARRAY_TYPE(3);\n        getScaling(scaling, mat);\n        var is1 = 1 / scaling[0];\n        var is2 = 1 / scaling[1];\n        var is3 = 1 / scaling[2];\n        var sm11 = mat[0] * is1;\n        var sm12 = mat[1] * is2;\n        var sm13 = mat[2] * is3;\n        var sm21 = mat[4] * is1;\n        var sm22 = mat[5] * is2;\n        var sm23 = mat[6] * is3;\n        var sm31 = mat[8] * is1;\n        var sm32 = mat[9] * is2;\n        var sm33 = mat[10] * is3;\n        var trace = sm11 + sm22 + sm33;\n        var S = 0;\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        }\n        else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        }\n        else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        }\n        else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n        return out;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation, vector translation and vector scale\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     *     mat4.scale(dest, scale)\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {quat4} q Rotation quaternion\n     * @param {vec3} v Translation vector\n     * @param {vec3} s Scaling vector\n     * @returns {mat4} out\n     */\n    function fromRotationTranslationScale(out, q, v, s) {\n        // Quaternion math\n        var x = q[0], y = q[1], z = q[2], w = q[3];\n        var x2 = x + x;\n        var y2 = y + y;\n        var z2 = z + z;\n        var xx = x * x2;\n        var xy = x * y2;\n        var xz = x * z2;\n        var yy = y * y2;\n        var yz = y * z2;\n        var zz = z * z2;\n        var wx = w * x2;\n        var wy = w * y2;\n        var wz = w * z2;\n        var sx = s[0];\n        var sy = s[1];\n        var sz = s[2];\n        out[0] = (1 - (yy + zz)) * sx;\n        out[1] = (xy + wz) * sx;\n        out[2] = (xz - wy) * sx;\n        out[3] = 0;\n        out[4] = (xy - wz) * sy;\n        out[5] = (1 - (xx + zz)) * sy;\n        out[6] = (yz + wx) * sy;\n        out[7] = 0;\n        out[8] = (xz + wy) * sz;\n        out[9] = (yz - wx) * sz;\n        out[10] = (1 - (xx + yy)) * sz;\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     mat4.translate(dest, origin);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     *     mat4.scale(dest, scale)\n     *     mat4.translate(dest, negativeOrigin);\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {quat4} q Rotation quaternion\n     * @param {vec3} v Translation vector\n     * @param {vec3} s Scaling vector\n     * @param {vec3} o The origin vector around which to scale and rotate\n     * @returns {mat4} out\n     */\n    function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n        // Quaternion math\n        var x = q[0], y = q[1], z = q[2], w = q[3];\n        var x2 = x + x;\n        var y2 = y + y;\n        var z2 = z + z;\n        var xx = x * x2;\n        var xy = x * y2;\n        var xz = x * z2;\n        var yy = y * y2;\n        var yz = y * z2;\n        var zz = z * z2;\n        var wx = w * x2;\n        var wy = w * y2;\n        var wz = w * z2;\n        var sx = s[0];\n        var sy = s[1];\n        var sz = s[2];\n        var ox = o[0];\n        var oy = o[1];\n        var oz = o[2];\n        var out0 = (1 - (yy + zz)) * sx;\n        var out1 = (xy + wz) * sx;\n        var out2 = (xz - wy) * sx;\n        var out4 = (xy - wz) * sy;\n        var out5 = (1 - (xx + zz)) * sy;\n        var out6 = (yz + wx) * sy;\n        var out8 = (xz + wy) * sz;\n        var out9 = (yz - wx) * sz;\n        var out10 = (1 - (xx + yy)) * sz;\n        out[0] = out0;\n        out[1] = out1;\n        out[2] = out2;\n        out[3] = 0;\n        out[4] = out4;\n        out[5] = out5;\n        out[6] = out6;\n        out[7] = 0;\n        out[8] = out8;\n        out[9] = out9;\n        out[10] = out10;\n        out[11] = 0;\n        out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n        out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n        out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Calculates a 4x4 matrix from the given quaternion\n     *\n     * @param {mat4} out mat4 receiving operation result\n     * @param {quat} q Quaternion to create matrix from\n     *\n     * @returns {mat4} out\n     */\n    function fromQuat(out, q) {\n        var x = q[0], y = q[1], z = q[2], w = q[3];\n        var x2 = x + x;\n        var y2 = y + y;\n        var z2 = z + z;\n        var xx = x * x2;\n        var yx = y * x2;\n        var yy = y * y2;\n        var zx = z * x2;\n        var zy = z * y2;\n        var zz = z * z2;\n        var wx = w * x2;\n        var wy = w * y2;\n        var wz = w * z2;\n        out[0] = 1 - yy - zz;\n        out[1] = yx + wz;\n        out[2] = zx - wy;\n        out[3] = 0;\n        out[4] = yx - wz;\n        out[5] = 1 - xx - zz;\n        out[6] = zy + wx;\n        out[7] = 0;\n        out[8] = zx + wy;\n        out[9] = zy - wx;\n        out[10] = 1 - xx - yy;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a frustum matrix with the given bounds\n     *\n     * @param {mat4} out mat4 frustum matrix will be written into\n     * @param {Number} left Left bound of the frustum\n     * @param {Number} right Right bound of the frustum\n     * @param {Number} bottom Bottom bound of the frustum\n     * @param {Number} top Top bound of the frustum\n     * @param {Number} near Near bound of the frustum\n     * @param {Number} far Far bound of the frustum\n     * @returns {mat4} out\n     */\n    function frustum(out, left, right, bottom, top, near, far) {\n        var rl = 1 / (right - left);\n        var tb = 1 / (top - bottom);\n        var nf = 1 / (near - far);\n        out[0] = near * 2 * rl;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = near * 2 * tb;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = (right + left) * rl;\n        out[9] = (top + bottom) * tb;\n        out[10] = (far + near) * nf;\n        out[11] = -1;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = far * near * 2 * nf;\n        out[15] = 0;\n        return out;\n    }\n    /**\n     * Generates a perspective projection matrix with the given bounds.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     *\n     * @param {mat4} out mat4 frustum matrix will be written into\n     * @param {number} fovy Vertical field of view in radians\n     * @param {number} aspect Aspect ratio. typically viewport width/height\n     * @param {number} near Near bound of the frustum\n     * @param {number} far Far bound of the frustum, can be null or Infinity\n     * @returns {mat4} out\n     */\n    function perspective(out, fovy, aspect, near, far) {\n        var f = 1.0 / Math.tan(fovy / 2), nf;\n        out[0] = f / aspect;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = f;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[11] = -1;\n        out[12] = 0;\n        out[13] = 0;\n        out[15] = 0;\n        if (far != null && far !== Infinity) {\n            nf = 1 / (near - far);\n            out[10] = (far + near) * nf;\n            out[14] = 2 * far * near * nf;\n        }\n        else {\n            out[10] = -1;\n            out[14] = -2 * near;\n        }\n        return out;\n    }\n    /**\n     * Generates a perspective projection matrix with the given field of view.\n     * This is primarily useful for generating projection matrices to be used\n     * with the still experiemental WebVR API.\n     *\n     * @param {mat4} out mat4 frustum matrix will be written into\n     * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n     * @param {number} near Near bound of the frustum\n     * @param {number} far Far bound of the frustum\n     * @returns {mat4} out\n     */\n    function perspectiveFromFieldOfView(out, fov, near, far) {\n        var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n        var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n        var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n        var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n        var xScale = 2.0 / (leftTan + rightTan);\n        var yScale = 2.0 / (upTan + downTan);\n        out[0] = xScale;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        out[3] = 0.0;\n        out[4] = 0.0;\n        out[5] = yScale;\n        out[6] = 0.0;\n        out[7] = 0.0;\n        out[8] = -((leftTan - rightTan) * xScale * 0.5);\n        out[9] = (upTan - downTan) * yScale * 0.5;\n        out[10] = far / (near - far);\n        out[11] = -1.0;\n        out[12] = 0.0;\n        out[13] = 0.0;\n        out[14] = far * near / (near - far);\n        out[15] = 0.0;\n        return out;\n    }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds\n     *\n     * @param {mat4} out mat4 frustum matrix will be written into\n     * @param {number} left Left bound of the frustum\n     * @param {number} right Right bound of the frustum\n     * @param {number} bottom Bottom bound of the frustum\n     * @param {number} top Top bound of the frustum\n     * @param {number} near Near bound of the frustum\n     * @param {number} far Far bound of the frustum\n     * @returns {mat4} out\n     */\n    function ortho(out, left, right, bottom, top, near, far) {\n        var lr = 1 / (left - right);\n        var bt = 1 / (bottom - top);\n        var nf = 1 / (near - far);\n        out[0] = -2 * lr;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = -2 * bt;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 2 * nf;\n        out[11] = 0;\n        out[12] = (left + right) * lr;\n        out[13] = (top + bottom) * bt;\n        out[14] = (far + near) * nf;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a look-at matrix with the given eye position, focal point, and up axis.\n     * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n     *\n     * @param {mat4} out mat4 frustum matrix will be written into\n     * @param {vec3} eye Position of the viewer\n     * @param {vec3} center Point the viewer is looking at\n     * @param {vec3} up vec3 pointing up\n     * @returns {mat4} out\n     */\n    function lookAt(out, eye, center, up) {\n        var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n        var eyex = eye[0];\n        var eyey = eye[1];\n        var eyez = eye[2];\n        var upx = up[0];\n        var upy = up[1];\n        var upz = up[2];\n        var centerx = center[0];\n        var centery = center[1];\n        var centerz = center[2];\n        if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n            return identity(out);\n        }\n        z0 = eyex - centerx;\n        z1 = eyey - centery;\n        z2 = eyez - centerz;\n        len = 1 / Math.hypot(z0, z1, z2);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n        x0 = upy * z2 - upz * z1;\n        x1 = upz * z0 - upx * z2;\n        x2 = upx * z1 - upy * z0;\n        len = Math.hypot(x0, x1, x2);\n        if (!len) {\n            x0 = 0;\n            x1 = 0;\n            x2 = 0;\n        }\n        else {\n            len = 1 / len;\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n        }\n        y0 = z1 * x2 - z2 * x1;\n        y1 = z2 * x0 - z0 * x2;\n        y2 = z0 * x1 - z1 * x0;\n        len = Math.hypot(y0, y1, y2);\n        if (!len) {\n            y0 = 0;\n            y1 = 0;\n            y2 = 0;\n        }\n        else {\n            len = 1 / len;\n            y0 *= len;\n            y1 *= len;\n            y2 *= len;\n        }\n        out[0] = x0;\n        out[1] = y0;\n        out[2] = z0;\n        out[3] = 0;\n        out[4] = x1;\n        out[5] = y1;\n        out[6] = z1;\n        out[7] = 0;\n        out[8] = x2;\n        out[9] = y2;\n        out[10] = z2;\n        out[11] = 0;\n        out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n        out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n        out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a matrix that makes something look at something else.\n     *\n     * @param {mat4} out mat4 frustum matrix will be written into\n     * @param {vec3} eye Position of the viewer\n     * @param {vec3} center Point the viewer is looking at\n     * @param {vec3} up vec3 pointing up\n     * @returns {mat4} out\n     */\n    function targetTo(out, eye, target, up) {\n        var eyex = eye[0], eyey = eye[1], eyez = eye[2], upx = up[0], upy = up[1], upz = up[2];\n        var z0 = eyex - target[0], z1 = eyey - target[1], z2 = eyez - target[2];\n        var len = z0 * z0 + z1 * z1 + z2 * z2;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            z0 *= len;\n            z1 *= len;\n            z2 *= len;\n        }\n        var x0 = upy * z2 - upz * z1, x1 = upz * z0 - upx * z2, x2 = upx * z1 - upy * z0;\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n        }\n        out[0] = x0;\n        out[1] = x1;\n        out[2] = x2;\n        out[3] = 0;\n        out[4] = z1 * x2 - z2 * x1;\n        out[5] = z2 * x0 - z0 * x2;\n        out[6] = z0 * x1 - z1 * x0;\n        out[7] = 0;\n        out[8] = z0;\n        out[9] = z1;\n        out[10] = z2;\n        out[11] = 0;\n        out[12] = eyex;\n        out[13] = eyey;\n        out[14] = eyez;\n        out[15] = 1;\n        return out;\n    }\n    ;\n    /**\n     * Returns a string representation of a mat4\n     *\n     * @param {mat4} a matrix to represent as a string\n     * @returns {String} string representation of the matrix\n     */\n    function str(a) {\n        return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n    }\n    /**\n     * Returns Frobenius norm of a mat4\n     *\n     * @param {mat4} a the matrix to calculate Frobenius norm of\n     * @returns {Number} Frobenius norm\n     */\n    function frob(a) {\n        return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n    }\n    /**\n     * Adds two mat4's\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the first operand\n     * @param {mat4} b the second operand\n     * @returns {mat4} out\n     */\n    function add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        out[8] = a[8] + b[8];\n        out[9] = a[9] + b[9];\n        out[10] = a[10] + b[10];\n        out[11] = a[11] + b[11];\n        out[12] = a[12] + b[12];\n        out[13] = a[13] + b[13];\n        out[14] = a[14] + b[14];\n        out[15] = a[15] + b[15];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the first operand\n     * @param {mat4} b the second operand\n     * @returns {mat4} out\n     */\n    function subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        out[6] = a[6] - b[6];\n        out[7] = a[7] - b[7];\n        out[8] = a[8] - b[8];\n        out[9] = a[9] - b[9];\n        out[10] = a[10] - b[10];\n        out[11] = a[11] - b[11];\n        out[12] = a[12] - b[12];\n        out[13] = a[13] - b[13];\n        out[14] = a[14] - b[14];\n        out[15] = a[15] - b[15];\n        return out;\n    }\n    /**\n     * Multiply each element of the matrix by a scalar.\n     *\n     * @param {mat4} out the receiving matrix\n     * @param {mat4} a the matrix to scale\n     * @param {Number} b amount to scale the matrix's elements by\n     * @returns {mat4} out\n     */\n    function multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        out[8] = a[8] * b;\n        out[9] = a[9] * b;\n        out[10] = a[10] * b;\n        out[11] = a[11] * b;\n        out[12] = a[12] * b;\n        out[13] = a[13] * b;\n        out[14] = a[14] * b;\n        out[15] = a[15] * b;\n        return out;\n    }\n    /**\n     * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n     *\n     * @param {mat4} out the receiving vector\n     * @param {mat4} a the first operand\n     * @param {mat4} b the second operand\n     * @param {Number} scale the amount to scale b's elements by before adding\n     * @returns {mat4} out\n     */\n    function multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        out[6] = a[6] + b[6] * scale;\n        out[7] = a[7] + b[7] * scale;\n        out[8] = a[8] + b[8] * scale;\n        out[9] = a[9] + b[9] * scale;\n        out[10] = a[10] + b[10] * scale;\n        out[11] = a[11] + b[11] * scale;\n        out[12] = a[12] + b[12] * scale;\n        out[13] = a[13] + b[13] * scale;\n        out[14] = a[14] + b[14] * scale;\n        out[15] = a[15] + b[15] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n     *\n     * @param {mat4} a The first matrix.\n     * @param {mat4} b The second matrix.\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\n     */\n    function exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n    }\n    /**\n     * Returns whether or not the matrices have approximately the same elements in the same position.\n     *\n     * @param {mat4} a The first matrix.\n     * @param {mat4} b The second matrix.\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\n     */\n    function equals(a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        var a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7];\n        var a8 = a[8], a9 = a[9], a10 = a[10], a11 = a[11];\n        var a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n        var b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7];\n        var b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11];\n        var b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n        return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n    }\n    /**\n     * Alias for {@link mat4.multiply}\n     * @function\n     */\n    var mul = multiply;\n    /**\n     * Alias for {@link mat4.subtract}\n     * @function\n     */\n    exports.mul = mul;\n    var sub = subtract;\n    exports.sub = sub;\n}\n","/* gl-matrix/cjs/quat.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.identity = identity;\n    exports.setAxisAngle = setAxisAngle;\n    exports.getAxisAngle = getAxisAngle;\n    exports.getAngle = getAngle;\n    exports.multiply = multiply;\n    exports.rotateX = rotateX;\n    exports.rotateY = rotateY;\n    exports.rotateZ = rotateZ;\n    exports.calculateW = calculateW;\n    exports.exp = exp;\n    exports.ln = ln;\n    exports.pow = pow;\n    exports.slerp = slerp;\n    exports.random = random;\n    exports.invert = invert;\n    exports.conjugate = conjugate;\n    exports.fromMat3 = fromMat3;\n    exports.fromEuler = fromEuler;\n    exports.str = str;\n    exports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    var mat3 = _interopRequireWildcard(require(\"4b4956d3f5\") /* ./mat3.js */);\n    var vec3 = _interopRequireWildcard(require(\"9aff2264cd\") /* ./vec3.js */);\n    var vec4 = _interopRequireWildcard(require(\"2c797465df\") /* ./vec4.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * Quaternion\n     * @module quat\n     */\n    /**\n     * Creates a new identity quat\n     *\n     * @returns {quat} a new quaternion\n     */\n    function create() {\n        var out = new glMatrix.ARRAY_TYPE(4);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n        }\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Set a quat to the identity quaternion\n     *\n     * @param {quat} out the receiving quaternion\n     * @returns {quat} out\n     */\n    function identity(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Sets a quat from the given angle and rotation axis,\n     * then returns it.\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {vec3} axis the axis around which to rotate\n     * @param {Number} rad the angle in radians\n     * @returns {quat} out\n     **/\n    function setAxisAngle(out, axis, rad) {\n        rad = rad * 0.5;\n        var s = Math.sin(rad);\n        out[0] = s * axis[0];\n        out[1] = s * axis[1];\n        out[2] = s * axis[2];\n        out[3] = Math.cos(rad);\n        return out;\n    }\n    /**\n     * Gets the rotation axis and angle for a given\n     *  quaternion. If a quaternion is created with\n     *  setAxisAngle, this method will return the same\n     *  values as providied in the original parameter list\n     *  OR functionally equivalent values.\n     * Example: The quaternion formed by axis [0, 0, 1] and\n     *  angle -90 is the same as the quaternion formed by\n     *  [0, 0, 1] and 270. This method favors the latter.\n     * @param  {vec3} out_axis  Vector receiving the axis of rotation\n     * @param  {quat} q     Quaternion to be decomposed\n     * @return {Number}     Angle, in radians, of the rotation\n     */\n    function getAxisAngle(out_axis, q) {\n        var rad = Math.acos(q[3]) * 2.0;\n        var s = Math.sin(rad / 2.0);\n        if (s > glMatrix.EPSILON) {\n            out_axis[0] = q[0] / s;\n            out_axis[1] = q[1] / s;\n            out_axis[2] = q[2] / s;\n        }\n        else {\n            // If s is zero, return any axis (no rotation - axis does not matter)\n            out_axis[0] = 1;\n            out_axis[1] = 0;\n            out_axis[2] = 0;\n        }\n        return rad;\n    }\n    /**\n     * Gets the angular distance between two unit quaternions\n     *\n     * @param  {quat} a     Origin unit quaternion\n     * @param  {quat} b     Destination unit quaternion\n     * @return {Number}     Angle, in radians, between the two quaternions\n     */\n    function getAngle(a, b) {\n        var dotproduct = dot(a, b);\n        return Math.acos(2 * dotproduct * dotproduct - 1);\n    }\n    /**\n     * Multiplies two quat's\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a the first operand\n     * @param {quat} b the second operand\n     * @returns {quat} out\n     */\n    function multiply(out, a, b) {\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3];\n        var bx = b[0], by = b[1], bz = b[2], bw = b[3];\n        out[0] = ax * bw + aw * bx + ay * bz - az * by;\n        out[1] = ay * bw + aw * by + az * bx - ax * bz;\n        out[2] = az * bw + aw * bz + ax * by - ay * bx;\n        out[3] = aw * bw - ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the X axis\n     *\n     * @param {quat} out quat receiving operation result\n     * @param {quat} a quat to rotate\n     * @param {number} rad angle (in radians) to rotate\n     * @returns {quat} out\n     */\n    function rotateX(out, a, rad) {\n        rad *= 0.5;\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3];\n        var bx = Math.sin(rad), bw = Math.cos(rad);\n        out[0] = ax * bw + aw * bx;\n        out[1] = ay * bw + az * bx;\n        out[2] = az * bw - ay * bx;\n        out[3] = aw * bw - ax * bx;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the Y axis\n     *\n     * @param {quat} out quat receiving operation result\n     * @param {quat} a quat to rotate\n     * @param {number} rad angle (in radians) to rotate\n     * @returns {quat} out\n     */\n    function rotateY(out, a, rad) {\n        rad *= 0.5;\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3];\n        var by = Math.sin(rad), bw = Math.cos(rad);\n        out[0] = ax * bw - az * by;\n        out[1] = ay * bw + aw * by;\n        out[2] = az * bw + ax * by;\n        out[3] = aw * bw - ay * by;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the Z axis\n     *\n     * @param {quat} out quat receiving operation result\n     * @param {quat} a quat to rotate\n     * @param {number} rad angle (in radians) to rotate\n     * @returns {quat} out\n     */\n    function rotateZ(out, a, rad) {\n        rad *= 0.5;\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3];\n        var bz = Math.sin(rad), bw = Math.cos(rad);\n        out[0] = ax * bw + ay * bz;\n        out[1] = ay * bw - ax * bz;\n        out[2] = az * bw + aw * bz;\n        out[3] = aw * bw - az * bz;\n        return out;\n    }\n    /**\n     * Calculates the W component of a quat from the X, Y, and Z components.\n     * Assumes that quaternion is 1 unit in length.\n     * Any existing W component will be ignored.\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a quat to calculate W component of\n     * @returns {quat} out\n     */\n    function calculateW(out, a) {\n        var x = a[0], y = a[1], z = a[2];\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n        return out;\n    }\n    /**\n     * Calculate the exponential of a unit quaternion.\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a quat to calculate the exponential of\n     * @returns {quat} out\n     */\n    function exp(out, a) {\n        var x = a[0], y = a[1], z = a[2], w = a[3];\n        var r = Math.sqrt(x * x + y * y + z * z);\n        var et = Math.exp(w);\n        var s = r > 0 ? et * Math.sin(r) / r : 0;\n        out[0] = x * s;\n        out[1] = y * s;\n        out[2] = z * s;\n        out[3] = et * Math.cos(r);\n        return out;\n    }\n    /**\n     * Calculate the natural logarithm of a unit quaternion.\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a quat to calculate the exponential of\n     * @returns {quat} out\n     */\n    function ln(out, a) {\n        var x = a[0], y = a[1], z = a[2], w = a[3];\n        var r = Math.sqrt(x * x + y * y + z * z);\n        var t = r > 0 ? Math.atan2(r, w) / r : 0;\n        out[0] = x * t;\n        out[1] = y * t;\n        out[2] = z * t;\n        out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n        return out;\n    }\n    /**\n     * Calculate the scalar power of a unit quaternion.\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a quat to calculate the exponential of\n     * @param {Number} b amount to scale the quaternion by\n     * @returns {quat} out\n     */\n    function pow(out, a, b) {\n        ln(out, a);\n        scale(out, out, b);\n        exp(out, out);\n        return out;\n    }\n    /**\n     * Performs a spherical linear interpolation between two quat\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a the first operand\n     * @param {quat} b the second operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {quat} out\n     */\n    function slerp(out, a, b, t) {\n        // benchmarks:\n        //    http://jsperf.com/quaternion-slerp-implementations\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3];\n        var bx = b[0], by = b[1], bz = b[2], bw = b[3];\n        var omega, cosom, sinom, scale0, scale1; // calc cosine\n        cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n        if (cosom < 0.0) {\n            cosom = -cosom;\n            bx = -bx;\n            by = -by;\n            bz = -bz;\n            bw = -bw;\n        } // calculate coefficients\n        if (1.0 - cosom > glMatrix.EPSILON) {\n            // standard case (slerp)\n            omega = Math.acos(cosom);\n            sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        }\n        else {\n            // \"from\" and \"to\" quaternions are very close\n            //  ... so we can do a linear interpolation\n            scale0 = 1.0 - t;\n            scale1 = t;\n        } // calculate final values\n        out[0] = scale0 * ax + scale1 * bx;\n        out[1] = scale0 * ay + scale1 * by;\n        out[2] = scale0 * az + scale1 * bz;\n        out[3] = scale0 * aw + scale1 * bw;\n        return out;\n    }\n    /**\n     * Generates a random unit quaternion\n     *\n     * @param {quat} out the receiving quaternion\n     * @returns {quat} out\n     */\n    function random(out) {\n        // Implementation of http://planning.cs.uiuc.edu/node198.html\n        // TODO: Calling random 3 times is probably not the fastest solution\n        var u1 = glMatrix.RANDOM();\n        var u2 = glMatrix.RANDOM();\n        var u3 = glMatrix.RANDOM();\n        var sqrt1MinusU1 = Math.sqrt(1 - u1);\n        var sqrtU1 = Math.sqrt(u1);\n        out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n        out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n        out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n        out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n        return out;\n    }\n    /**\n     * Calculates the inverse of a quat\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a quat to calculate inverse of\n     * @returns {quat} out\n     */\n    function invert(out, a) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n        var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n        out[0] = -a0 * invDot;\n        out[1] = -a1 * invDot;\n        out[2] = -a2 * invDot;\n        out[3] = a3 * invDot;\n        return out;\n    }\n    /**\n     * Calculates the conjugate of a quat\n     * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a quat to calculate conjugate of\n     * @returns {quat} out\n     */\n    function conjugate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Creates a quaternion from the given 3x3 rotation matrix.\n     *\n     * NOTE: The resultant quaternion is not normalized, so you should be sure\n     * to renormalize the quaternion yourself where necessary.\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {mat3} m rotation matrix\n     * @returns {quat} out\n     * @function\n     */\n    function fromMat3(out, m) {\n        // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n        // article \"Quaternion Calculus and Fast Animation\".\n        var fTrace = m[0] + m[4] + m[8];\n        var fRoot;\n        if (fTrace > 0.0) {\n            // |w| > 1/2, may as well choose w > 1/2\n            fRoot = Math.sqrt(fTrace + 1.0); // 2w\n            out[3] = 0.5 * fRoot;\n            fRoot = 0.5 / fRoot; // 1/(4w)\n            out[0] = (m[5] - m[7]) * fRoot;\n            out[1] = (m[6] - m[2]) * fRoot;\n            out[2] = (m[1] - m[3]) * fRoot;\n        }\n        else {\n            // |w| <= 1/2\n            var i = 0;\n            if (m[4] > m[0])\n                i = 1;\n            if (m[8] > m[i * 3 + i])\n                i = 2;\n            var j = (i + 1) % 3;\n            var k = (i + 2) % 3;\n            fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n            out[i] = 0.5 * fRoot;\n            fRoot = 0.5 / fRoot;\n            out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n            out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n            out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n        }\n        return out;\n    }\n    /**\n     * Creates a quaternion from the given euler angle x, y, z.\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {x} Angle to rotate around X axis in degrees.\n     * @param {y} Angle to rotate around Y axis in degrees.\n     * @param {z} Angle to rotate around Z axis in degrees.\n     * @returns {quat} out\n     * @function\n     */\n    function fromEuler(out, x, y, z) {\n        var halfToRad = 0.5 * Math.PI / 180.0;\n        x *= halfToRad;\n        y *= halfToRad;\n        z *= halfToRad;\n        var sx = Math.sin(x);\n        var cx = Math.cos(x);\n        var sy = Math.sin(y);\n        var cy = Math.cos(y);\n        var sz = Math.sin(z);\n        var cz = Math.cos(z);\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        return out;\n    }\n    /**\n     * Returns a string representation of a quatenion\n     *\n     * @param {quat} a vector to represent as a string\n     * @returns {String} string representation of the vector\n     */\n    function str(a) {\n        return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n    }\n    /**\n     * Creates a new quat initialized with values from an existing quaternion\n     *\n     * @param {quat} a quaternion to clone\n     * @returns {quat} a new quaternion\n     * @function\n     */\n    var clone = vec4.clone;\n    /**\n     * Creates a new quat initialized with the given values\n     *\n     * @param {Number} x X component\n     * @param {Number} y Y component\n     * @param {Number} z Z component\n     * @param {Number} w W component\n     * @returns {quat} a new quaternion\n     * @function\n     */\n    exports.clone = clone;\n    var fromValues = vec4.fromValues;\n    /**\n     * Copy the values from one quat to another\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a the source quaternion\n     * @returns {quat} out\n     * @function\n     */\n    exports.fromValues = fromValues;\n    var copy = vec4.copy;\n    /**\n     * Set the components of a quat to the given values\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {Number} x X component\n     * @param {Number} y Y component\n     * @param {Number} z Z component\n     * @param {Number} w W component\n     * @returns {quat} out\n     * @function\n     */\n    exports.copy = copy;\n    var set = vec4.set;\n    /**\n     * Adds two quat's\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a the first operand\n     * @param {quat} b the second operand\n     * @returns {quat} out\n     * @function\n     */\n    exports.set = set;\n    var add = vec4.add;\n    /**\n     * Alias for {@link quat.multiply}\n     * @function\n     */\n    exports.add = add;\n    var mul = multiply;\n    /**\n     * Scales a quat by a scalar number\n     *\n     * @param {quat} out the receiving vector\n     * @param {quat} a the vector to scale\n     * @param {Number} b amount to scale the vector by\n     * @returns {quat} out\n     * @function\n     */\n    exports.mul = mul;\n    var scale = vec4.scale;\n    /**\n     * Calculates the dot product of two quat's\n     *\n     * @param {quat} a the first operand\n     * @param {quat} b the second operand\n     * @returns {Number} dot product of a and b\n     * @function\n     */\n    exports.scale = scale;\n    var dot = vec4.dot;\n    /**\n     * Performs a linear interpolation between two quat's\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a the first operand\n     * @param {quat} b the second operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {quat} out\n     * @function\n     */\n    exports.dot = dot;\n    var lerp = vec4.lerp;\n    /**\n     * Calculates the length of a quat\n     *\n     * @param {quat} a vector to calculate length of\n     * @returns {Number} length of a\n     */\n    exports.lerp = lerp;\n    var length = vec4.length;\n    /**\n     * Alias for {@link quat.length}\n     * @function\n     */\n    exports.length = length;\n    var len = length;\n    /**\n     * Calculates the squared length of a quat\n     *\n     * @param {quat} a vector to calculate squared length of\n     * @returns {Number} squared length of a\n     * @function\n     */\n    exports.len = len;\n    var squaredLength = vec4.squaredLength;\n    /**\n     * Alias for {@link quat.squaredLength}\n     * @function\n     */\n    exports.squaredLength = squaredLength;\n    var sqrLen = squaredLength;\n    /**\n     * Normalize a quat\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a quaternion to normalize\n     * @returns {quat} out\n     * @function\n     */\n    exports.sqrLen = sqrLen;\n    var normalize = vec4.normalize;\n    /**\n     * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n     *\n     * @param {quat} a The first quaternion.\n     * @param {quat} b The second quaternion.\n     * @returns {Boolean} True if the vectors are equal, false otherwise.\n     */\n    exports.normalize = normalize;\n    var exactEquals = vec4.exactEquals;\n    /**\n     * Returns whether or not the quaternions have approximately the same elements in the same position.\n     *\n     * @param {quat} a The first vector.\n     * @param {quat} b The second vector.\n     * @returns {Boolean} True if the vectors are equal, false otherwise.\n     */\n    exports.exactEquals = exactEquals;\n    var equals = vec4.equals;\n    /**\n     * Sets a quaternion to represent the shortest rotation from one\n     * vector to another.\n     *\n     * Both vectors are assumed to be unit length.\n     *\n     * @param {quat} out the receiving quaternion.\n     * @param {vec3} a the initial vector\n     * @param {vec3} b the destination vector\n     * @returns {quat} out\n     */\n    exports.equals = equals;\n    var rotationTo = function () {\n        var tmpvec3 = vec3.create();\n        var xUnitVec3 = vec3.fromValues(1, 0, 0);\n        var yUnitVec3 = vec3.fromValues(0, 1, 0);\n        return function (out, a, b) {\n            var dot = vec3.dot(a, b);\n            if (dot < -0.999999) {\n                vec3.cross(tmpvec3, xUnitVec3, a);\n                if (vec3.len(tmpvec3) < 0.000001)\n                    vec3.cross(tmpvec3, yUnitVec3, a);\n                vec3.normalize(tmpvec3, tmpvec3);\n                setAxisAngle(out, tmpvec3, Math.PI);\n                return out;\n            }\n            else if (dot > 0.999999) {\n                out[0] = 0;\n                out[1] = 0;\n                out[2] = 0;\n                out[3] = 1;\n                return out;\n            }\n            else {\n                vec3.cross(tmpvec3, a, b);\n                out[0] = tmpvec3[0];\n                out[1] = tmpvec3[1];\n                out[2] = tmpvec3[2];\n                out[3] = 1 + dot;\n                return normalize(out, out);\n            }\n        };\n    }();\n    /**\n     * Performs a spherical linear interpolation with two control points\n     *\n     * @param {quat} out the receiving quaternion\n     * @param {quat} a the first operand\n     * @param {quat} b the second operand\n     * @param {quat} c the third operand\n     * @param {quat} d the fourth operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {quat} out\n     */\n    exports.rotationTo = rotationTo;\n    var sqlerp = function () {\n        var temp1 = create();\n        var temp2 = create();\n        return function (out, a, b, c, d, t) {\n            slerp(temp1, a, d, t);\n            slerp(temp2, b, c, t);\n            slerp(out, temp1, temp2, 2 * t * (1 - t));\n            return out;\n        };\n    }();\n    /**\n     * Sets the specified quaternion with values corresponding to the given\n     * axes. Each axis is a vec3 and is expected to be unit length and\n     * perpendicular to all other specified axes.\n     *\n     * @param {vec3} view  the vector representing the viewing direction\n     * @param {vec3} right the vector representing the local \"right\" direction\n     * @param {vec3} up    the vector representing the local \"up\" direction\n     * @returns {quat} out\n     */\n    exports.sqlerp = sqlerp;\n    var setAxes = function () {\n        var matr = mat3.create();\n        return function (out, view, right, up) {\n            matr[0] = right[0];\n            matr[3] = right[1];\n            matr[6] = right[2];\n            matr[1] = up[0];\n            matr[4] = up[1];\n            matr[7] = up[2];\n            matr[2] = -view[0];\n            matr[5] = -view[1];\n            matr[8] = -view[2];\n            return normalize(out, fromMat3(out, matr));\n        };\n    }();\n    exports.setAxes = setAxes;\n}\n","/* gl-matrix/cjs/vec3.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.clone = clone;\n    exports.length = length;\n    exports.fromValues = fromValues;\n    exports.copy = copy;\n    exports.set = set;\n    exports.add = add;\n    exports.subtract = subtract;\n    exports.multiply = multiply;\n    exports.divide = divide;\n    exports.ceil = ceil;\n    exports.floor = floor;\n    exports.min = min;\n    exports.max = max;\n    exports.round = round;\n    exports.scale = scale;\n    exports.scaleAndAdd = scaleAndAdd;\n    exports.distance = distance;\n    exports.squaredDistance = squaredDistance;\n    exports.squaredLength = squaredLength;\n    exports.negate = negate;\n    exports.inverse = inverse;\n    exports.normalize = normalize;\n    exports.dot = dot;\n    exports.cross = cross;\n    exports.lerp = lerp;\n    exports.hermite = hermite;\n    exports.bezier = bezier;\n    exports.random = random;\n    exports.transformMat4 = transformMat4;\n    exports.transformMat3 = transformMat3;\n    exports.transformQuat = transformQuat;\n    exports.rotateX = rotateX;\n    exports.rotateY = rotateY;\n    exports.rotateZ = rotateZ;\n    exports.angle = angle;\n    exports.zero = zero;\n    exports.str = str;\n    exports.exactEquals = exactEquals;\n    exports.equals = equals;\n    exports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * 3 Dimensional Vector\n     * @module vec3\n     */\n    /**\n     * Creates a new, empty vec3\n     *\n     * @returns {vec3} a new 3D vector\n     */\n    function create() {\n        var out = new glMatrix.ARRAY_TYPE(3);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n        }\n        return out;\n    }\n    /**\n     * Creates a new vec3 initialized with values from an existing vector\n     *\n     * @param {vec3} a vector to clone\n     * @returns {vec3} a new 3D vector\n     */\n    function clone(a) {\n        var out = new glMatrix.ARRAY_TYPE(3);\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        return out;\n    }\n    /**\n     * Calculates the length of a vec3\n     *\n     * @param {vec3} a vector to calculate length of\n     * @returns {Number} length of a\n     */\n    function length(a) {\n        var x = a[0];\n        var y = a[1];\n        var z = a[2];\n        return Math.hypot(x, y, z);\n    }\n    /**\n     * Creates a new vec3 initialized with the given values\n     *\n     * @param {Number} x X component\n     * @param {Number} y Y component\n     * @param {Number} z Z component\n     * @returns {vec3} a new 3D vector\n     */\n    function fromValues(x, y, z) {\n        var out = new glMatrix.ARRAY_TYPE(3);\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        return out;\n    }\n    /**\n     * Copy the values from one vec3 to another\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the source vector\n     * @returns {vec3} out\n     */\n    function copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        return out;\n    }\n    /**\n     * Set the components of a vec3 to the given values\n     *\n     * @param {vec3} out the receiving vector\n     * @param {Number} x X component\n     * @param {Number} y Y component\n     * @param {Number} z Z component\n     * @returns {vec3} out\n     */\n    function set(out, x, y, z) {\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        return out;\n    }\n    /**\n     * Adds two vec3's\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {vec3} out\n     */\n    function add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {vec3} out\n     */\n    function subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        return out;\n    }\n    /**\n     * Multiplies two vec3's\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {vec3} out\n     */\n    function multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        out[2] = a[2] * b[2];\n        return out;\n    }\n    /**\n     * Divides two vec3's\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {vec3} out\n     */\n    function divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        out[2] = a[2] / b[2];\n        return out;\n    }\n    /**\n     * Math.ceil the components of a vec3\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a vector to ceil\n     * @returns {vec3} out\n     */\n    function ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        out[2] = Math.ceil(a[2]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a vec3\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a vector to floor\n     * @returns {vec3} out\n     */\n    function floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        out[2] = Math.floor(a[2]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two vec3's\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {vec3} out\n     */\n    function min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        out[2] = Math.min(a[2], b[2]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two vec3's\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {vec3} out\n     */\n    function max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        out[2] = Math.max(a[2], b[2]);\n        return out;\n    }\n    /**\n     * Math.round the components of a vec3\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a vector to round\n     * @returns {vec3} out\n     */\n    function round(out, a) {\n        out[0] = Math.round(a[0]);\n        out[1] = Math.round(a[1]);\n        out[2] = Math.round(a[2]);\n        return out;\n    }\n    /**\n     * Scales a vec3 by a scalar number\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the vector to scale\n     * @param {Number} b amount to scale the vector by\n     * @returns {vec3} out\n     */\n    function scale(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        return out;\n    }\n    /**\n     * Adds two vec3's after scaling the second operand by a scalar value\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @param {Number} scale the amount to scale b by before adding\n     * @returns {vec3} out\n     */\n    function scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two vec3's\n     *\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {Number} distance between a and b\n     */\n    function distance(a, b) {\n        var x = b[0] - a[0];\n        var y = b[1] - a[1];\n        var z = b[2] - a[2];\n        return Math.hypot(x, y, z);\n    }\n    /**\n     * Calculates the squared euclidian distance between two vec3's\n     *\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {Number} squared distance between a and b\n     */\n    function squaredDistance(a, b) {\n        var x = b[0] - a[0];\n        var y = b[1] - a[1];\n        var z = b[2] - a[2];\n        return x * x + y * y + z * z;\n    }\n    /**\n     * Calculates the squared length of a vec3\n     *\n     * @param {vec3} a vector to calculate squared length of\n     * @returns {Number} squared length of a\n     */\n    function squaredLength(a) {\n        var x = a[0];\n        var y = a[1];\n        var z = a[2];\n        return x * x + y * y + z * z;\n    }\n    /**\n     * Negates the components of a vec3\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a vector to negate\n     * @returns {vec3} out\n     */\n    function negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a vec3\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a vector to invert\n     * @returns {vec3} out\n     */\n    function inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        out[2] = 1.0 / a[2];\n        return out;\n    }\n    /**\n     * Normalize a vec3\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a vector to normalize\n     * @returns {vec3} out\n     */\n    function normalize(out, a) {\n        var x = a[0];\n        var y = a[1];\n        var z = a[2];\n        var len = x * x + y * y + z * z;\n        if (len > 0) {\n            //TODO: evaluate use of glm_invsqrt here?\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two vec3's\n     *\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {Number} dot product of a and b\n     */\n    function dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    }\n    /**\n     * Computes the cross product of two vec3's\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @returns {vec3} out\n     */\n    function cross(out, a, b) {\n        var ax = a[0], ay = a[1], az = a[2];\n        var bx = b[0], by = b[1], bz = b[2];\n        out[0] = ay * bz - az * by;\n        out[1] = az * bx - ax * bz;\n        out[2] = ax * by - ay * bx;\n        return out;\n    }\n    /**\n     * Performs a linear interpolation between two vec3's\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {vec3} out\n     */\n    function lerp(out, a, b, t) {\n        var ax = a[0];\n        var ay = a[1];\n        var az = a[2];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        out[2] = az + t * (b[2] - az);\n        return out;\n    }\n    /**\n     * Performs a hermite interpolation with two control points\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @param {vec3} c the third operand\n     * @param {vec3} d the fourth operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {vec3} out\n     */\n    function hermite(out, a, b, c, d, t) {\n        var factorTimes2 = t * t;\n        var factor1 = factorTimes2 * (2 * t - 3) + 1;\n        var factor2 = factorTimes2 * (t - 2) + t;\n        var factor3 = factorTimes2 * (t - 1);\n        var factor4 = factorTimes2 * (3 - 2 * t);\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n        return out;\n    }\n    /**\n     * Performs a bezier interpolation with two control points\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the first operand\n     * @param {vec3} b the second operand\n     * @param {vec3} c the third operand\n     * @param {vec3} d the fourth operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {vec3} out\n     */\n    function bezier(out, a, b, c, d, t) {\n        var inverseFactor = 1 - t;\n        var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n        var factorTimes2 = t * t;\n        var factor1 = inverseFactorTimesTwo * inverseFactor;\n        var factor2 = 3 * t * inverseFactorTimesTwo;\n        var factor3 = 3 * factorTimes2 * inverseFactor;\n        var factor4 = factorTimes2 * t;\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n        return out;\n    }\n    /**\n     * Generates a random vector with the given scale\n     *\n     * @param {vec3} out the receiving vector\n     * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n     * @returns {vec3} out\n     */\n    function random(out, scale) {\n        scale = scale || 1.0;\n        var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n        var z = glMatrix.RANDOM() * 2.0 - 1.0;\n        var zScale = Math.sqrt(1.0 - z * z) * scale;\n        out[0] = Math.cos(r) * zScale;\n        out[1] = Math.sin(r) * zScale;\n        out[2] = z * scale;\n        return out;\n    }\n    /**\n     * Transforms the vec3 with a mat4.\n     * 4th vector component is implicitly '1'\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the vector to transform\n     * @param {mat4} m matrix to transform with\n     * @returns {vec3} out\n     */\n    function transformMat4(out, a, m) {\n        var x = a[0], y = a[1], z = a[2];\n        var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n        w = w || 1.0;\n        out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n        out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n        out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n        return out;\n    }\n    /**\n     * Transforms the vec3 with a mat3.\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the vector to transform\n     * @param {mat3} m the 3x3 matrix to transform with\n     * @returns {vec3} out\n     */\n    function transformMat3(out, a, m) {\n        var x = a[0], y = a[1], z = a[2];\n        out[0] = x * m[0] + y * m[3] + z * m[6];\n        out[1] = x * m[1] + y * m[4] + z * m[7];\n        out[2] = x * m[2] + y * m[5] + z * m[8];\n        return out;\n    }\n    /**\n     * Transforms the vec3 with a quat\n     * Can also be used for dual quaternions. (Multiply it with the real part)\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec3} a the vector to transform\n     * @param {quat} q quaternion to transform with\n     * @returns {vec3} out\n     */\n    function transformQuat(out, a, q) {\n        // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n        var qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n        var x = a[0], y = a[1], z = a[2]; // var qvec = [qx, qy, qz];\n        // var uv = vec3.cross([], qvec, a);\n        var uvx = qy * z - qz * y, uvy = qz * x - qx * z, uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n        var uuvx = qy * uvz - qz * uvy, uuvy = qz * uvx - qx * uvz, uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n        var w2 = qw * 2;\n        uvx *= w2;\n        uvy *= w2;\n        uvz *= w2; // vec3.scale(uuv, uuv, 2);\n        uuvx *= 2;\n        uuvy *= 2;\n        uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n        out[0] = x + uvx + uuvx;\n        out[1] = y + uvy + uuvy;\n        out[2] = z + uvz + uuvz;\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the x-axis\n     * @param {vec3} out The receiving vec3\n     * @param {vec3} a The vec3 point to rotate\n     * @param {vec3} b The origin of the rotation\n     * @param {Number} c The angle of rotation\n     * @returns {vec3} out\n     */\n    function rotateX(out, a, b, c) {\n        var p = [], r = []; //Translate point to the origin\n        p[0] = a[0] - b[0];\n        p[1] = a[1] - b[1];\n        p[2] = a[2] - b[2]; //perform rotation\n        r[0] = p[0];\n        r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n        r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n        out[0] = r[0] + b[0];\n        out[1] = r[1] + b[1];\n        out[2] = r[2] + b[2];\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the y-axis\n     * @param {vec3} out The receiving vec3\n     * @param {vec3} a The vec3 point to rotate\n     * @param {vec3} b The origin of the rotation\n     * @param {Number} c The angle of rotation\n     * @returns {vec3} out\n     */\n    function rotateY(out, a, b, c) {\n        var p = [], r = []; //Translate point to the origin\n        p[0] = a[0] - b[0];\n        p[1] = a[1] - b[1];\n        p[2] = a[2] - b[2]; //perform rotation\n        r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n        r[1] = p[1];\n        r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n        out[0] = r[0] + b[0];\n        out[1] = r[1] + b[1];\n        out[2] = r[2] + b[2];\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the z-axis\n     * @param {vec3} out The receiving vec3\n     * @param {vec3} a The vec3 point to rotate\n     * @param {vec3} b The origin of the rotation\n     * @param {Number} c The angle of rotation\n     * @returns {vec3} out\n     */\n    function rotateZ(out, a, b, c) {\n        var p = [], r = []; //Translate point to the origin\n        p[0] = a[0] - b[0];\n        p[1] = a[1] - b[1];\n        p[2] = a[2] - b[2]; //perform rotation\n        r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n        r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n        r[2] = p[2]; //translate to correct position\n        out[0] = r[0] + b[0];\n        out[1] = r[1] + b[1];\n        out[2] = r[2] + b[2];\n        return out;\n    }\n    /**\n     * Get the angle between two 3D vectors\n     * @param {vec3} a The first operand\n     * @param {vec3} b The second operand\n     * @returns {Number} The angle in radians\n     */\n    function angle(a, b) {\n        var tempA = fromValues(a[0], a[1], a[2]);\n        var tempB = fromValues(b[0], b[1], b[2]);\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n        var cosine = dot(tempA, tempB);\n        if (cosine > 1.0) {\n            return 0;\n        }\n        else if (cosine < -1.0) {\n            return Math.PI;\n        }\n        else {\n            return Math.acos(cosine);\n        }\n    }\n    /**\n     * Set the components of a vec3 to zero\n     *\n     * @param {vec3} out the receiving vector\n     * @returns {vec3} out\n     */\n    function zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        return out;\n    }\n    /**\n     * Returns a string representation of a vector\n     *\n     * @param {vec3} a vector to represent as a string\n     * @returns {String} string representation of the vector\n     */\n    function str(a) {\n        return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n    }\n    /**\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n     *\n     * @param {vec3} a The first vector.\n     * @param {vec3} b The second vector.\n     * @returns {Boolean} True if the vectors are equal, false otherwise.\n     */\n    function exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     *\n     * @param {vec3} a The first vector.\n     * @param {vec3} b The second vector.\n     * @returns {Boolean} True if the vectors are equal, false otherwise.\n     */\n    function equals(a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2];\n        var b0 = b[0], b1 = b[1], b2 = b[2];\n        return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n    }\n    /**\n     * Alias for {@link vec3.subtract}\n     * @function\n     */\n    var sub = subtract;\n    /**\n     * Alias for {@link vec3.multiply}\n     * @function\n     */\n    exports.sub = sub;\n    var mul = multiply;\n    /**\n     * Alias for {@link vec3.divide}\n     * @function\n     */\n    exports.mul = mul;\n    var div = divide;\n    /**\n     * Alias for {@link vec3.distance}\n     * @function\n     */\n    exports.div = div;\n    var dist = distance;\n    /**\n     * Alias for {@link vec3.squaredDistance}\n     * @function\n     */\n    exports.dist = dist;\n    var sqrDist = squaredDistance;\n    /**\n     * Alias for {@link vec3.length}\n     * @function\n     */\n    exports.sqrDist = sqrDist;\n    var len = length;\n    /**\n     * Alias for {@link vec3.squaredLength}\n     * @function\n     */\n    exports.len = len;\n    var sqrLen = squaredLength;\n    /**\n     * Perform some operation over an array of vec3s.\n     *\n     * @param {Array} a the array of vectors to iterate over\n     * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n     * @param {Number} offset Number of elements to skip at the beginning of the array\n     * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n     * @param {Function} fn Function to call for each vector in the array\n     * @param {Object} [arg] additional argument to pass to fn\n     * @returns {Array} a\n     * @function\n     */\n    exports.sqrLen = sqrLen;\n    var forEach = function () {\n        var vec = create();\n        return function (a, stride, offset, count, fn, arg) {\n            var i, l;\n            if (!stride) {\n                stride = 3;\n            }\n            if (!offset) {\n                offset = 0;\n            }\n            if (count) {\n                l = Math.min(count * stride + offset, a.length);\n            }\n            else {\n                l = a.length;\n            }\n            for (i = offset; i < l; i += stride) {\n                vec[0] = a[i];\n                vec[1] = a[i + 1];\n                vec[2] = a[i + 2];\n                fn(vec, vec, arg);\n                a[i] = vec[0];\n                a[i + 1] = vec[1];\n                a[i + 2] = vec[2];\n            }\n            return a;\n        };\n    }();\n    exports.forEach = forEach;\n}\n","/* gl-matrix/cjs/vec4.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.clone = clone;\n    exports.fromValues = fromValues;\n    exports.copy = copy;\n    exports.set = set;\n    exports.add = add;\n    exports.subtract = subtract;\n    exports.multiply = multiply;\n    exports.divide = divide;\n    exports.ceil = ceil;\n    exports.floor = floor;\n    exports.min = min;\n    exports.max = max;\n    exports.round = round;\n    exports.scale = scale;\n    exports.scaleAndAdd = scaleAndAdd;\n    exports.distance = distance;\n    exports.squaredDistance = squaredDistance;\n    exports.length = length;\n    exports.squaredLength = squaredLength;\n    exports.negate = negate;\n    exports.inverse = inverse;\n    exports.normalize = normalize;\n    exports.dot = dot;\n    exports.cross = cross;\n    exports.lerp = lerp;\n    exports.random = random;\n    exports.transformMat4 = transformMat4;\n    exports.transformQuat = transformQuat;\n    exports.zero = zero;\n    exports.str = str;\n    exports.exactEquals = exactEquals;\n    exports.equals = equals;\n    exports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * 4 Dimensional Vector\n     * @module vec4\n     */\n    /**\n     * Creates a new, empty vec4\n     *\n     * @returns {vec4} a new 4D vector\n     */\n    function create() {\n        var out = new glMatrix.ARRAY_TYPE(4);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 0;\n        }\n        return out;\n    }\n    /**\n     * Creates a new vec4 initialized with values from an existing vector\n     *\n     * @param {vec4} a vector to clone\n     * @returns {vec4} a new 4D vector\n     */\n    function clone(a) {\n        var out = new glMatrix.ARRAY_TYPE(4);\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Creates a new vec4 initialized with the given values\n     *\n     * @param {Number} x X component\n     * @param {Number} y Y component\n     * @param {Number} z Z component\n     * @param {Number} w W component\n     * @returns {vec4} a new 4D vector\n     */\n    function fromValues(x, y, z, w) {\n        var out = new glMatrix.ARRAY_TYPE(4);\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        out[3] = w;\n        return out;\n    }\n    /**\n     * Copy the values from one vec4 to another\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the source vector\n     * @returns {vec4} out\n     */\n    function copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set the components of a vec4 to the given values\n     *\n     * @param {vec4} out the receiving vector\n     * @param {Number} x X component\n     * @param {Number} y Y component\n     * @param {Number} z Z component\n     * @param {Number} w W component\n     * @returns {vec4} out\n     */\n    function set(out, x, y, z, w) {\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        out[3] = w;\n        return out;\n    }\n    /**\n     * Adds two vec4's\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {vec4} out\n     */\n    function add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {vec4} out\n     */\n    function subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        return out;\n    }\n    /**\n     * Multiplies two vec4's\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {vec4} out\n     */\n    function multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        out[2] = a[2] * b[2];\n        out[3] = a[3] * b[3];\n        return out;\n    }\n    /**\n     * Divides two vec4's\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {vec4} out\n     */\n    function divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        out[2] = a[2] / b[2];\n        out[3] = a[3] / b[3];\n        return out;\n    }\n    /**\n     * Math.ceil the components of a vec4\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a vector to ceil\n     * @returns {vec4} out\n     */\n    function ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        out[2] = Math.ceil(a[2]);\n        out[3] = Math.ceil(a[3]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a vec4\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a vector to floor\n     * @returns {vec4} out\n     */\n    function floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        out[2] = Math.floor(a[2]);\n        out[3] = Math.floor(a[3]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two vec4's\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {vec4} out\n     */\n    function min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        out[2] = Math.min(a[2], b[2]);\n        out[3] = Math.min(a[3], b[3]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two vec4's\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {vec4} out\n     */\n    function max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        out[2] = Math.max(a[2], b[2]);\n        out[3] = Math.max(a[3], b[3]);\n        return out;\n    }\n    /**\n     * Math.round the components of a vec4\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a vector to round\n     * @returns {vec4} out\n     */\n    function round(out, a) {\n        out[0] = Math.round(a[0]);\n        out[1] = Math.round(a[1]);\n        out[2] = Math.round(a[2]);\n        out[3] = Math.round(a[3]);\n        return out;\n    }\n    /**\n     * Scales a vec4 by a scalar number\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the vector to scale\n     * @param {Number} b amount to scale the vector by\n     * @returns {vec4} out\n     */\n    function scale(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        return out;\n    }\n    /**\n     * Adds two vec4's after scaling the second operand by a scalar value\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @param {Number} scale the amount to scale b by before adding\n     * @returns {vec4} out\n     */\n    function scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two vec4's\n     *\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {Number} distance between a and b\n     */\n    function distance(a, b) {\n        var x = b[0] - a[0];\n        var y = b[1] - a[1];\n        var z = b[2] - a[2];\n        var w = b[3] - a[3];\n        return Math.hypot(x, y, z, w);\n    }\n    /**\n     * Calculates the squared euclidian distance between two vec4's\n     *\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {Number} squared distance between a and b\n     */\n    function squaredDistance(a, b) {\n        var x = b[0] - a[0];\n        var y = b[1] - a[1];\n        var z = b[2] - a[2];\n        var w = b[3] - a[3];\n        return x * x + y * y + z * z + w * w;\n    }\n    /**\n     * Calculates the length of a vec4\n     *\n     * @param {vec4} a vector to calculate length of\n     * @returns {Number} length of a\n     */\n    function length(a) {\n        var x = a[0];\n        var y = a[1];\n        var z = a[2];\n        var w = a[3];\n        return Math.hypot(x, y, z, w);\n    }\n    /**\n     * Calculates the squared length of a vec4\n     *\n     * @param {vec4} a vector to calculate squared length of\n     * @returns {Number} squared length of a\n     */\n    function squaredLength(a) {\n        var x = a[0];\n        var y = a[1];\n        var z = a[2];\n        var w = a[3];\n        return x * x + y * y + z * z + w * w;\n    }\n    /**\n     * Negates the components of a vec4\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a vector to negate\n     * @returns {vec4} out\n     */\n    function negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = -a[3];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a vec4\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a vector to invert\n     * @returns {vec4} out\n     */\n    function inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        out[2] = 1.0 / a[2];\n        out[3] = 1.0 / a[3];\n        return out;\n    }\n    /**\n     * Normalize a vec4\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a vector to normalize\n     * @returns {vec4} out\n     */\n    function normalize(out, a) {\n        var x = a[0];\n        var y = a[1];\n        var z = a[2];\n        var w = a[3];\n        var len = x * x + y * y + z * z + w * w;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two vec4's\n     *\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @returns {Number} dot product of a and b\n     */\n    function dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    }\n    /**\n     * Returns the cross-product of three vectors in a 4-dimensional space\n     *\n     * @param {vec4} result the receiving vector\n     * @param {vec4} U the first vector\n     * @param {vec4} V the second vector\n     * @param {vec4} W the third vector\n     * @returns {vec4} result\n     */\n    function cross(out, u, v, w) {\n        var A = v[0] * w[1] - v[1] * w[0], B = v[0] * w[2] - v[2] * w[0], C = v[0] * w[3] - v[3] * w[0], D = v[1] * w[2] - v[2] * w[1], E = v[1] * w[3] - v[3] * w[1], F = v[2] * w[3] - v[3] * w[2];\n        var G = u[0];\n        var H = u[1];\n        var I = u[2];\n        var J = u[3];\n        out[0] = H * F - I * E + J * D;\n        out[1] = -(G * F) + I * C - J * B;\n        out[2] = G * E - H * C + J * A;\n        out[3] = -(G * D) + H * B - I * A;\n        return out;\n    }\n    ;\n    /**\n     * Performs a linear interpolation between two vec4's\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the first operand\n     * @param {vec4} b the second operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {vec4} out\n     */\n    function lerp(out, a, b, t) {\n        var ax = a[0];\n        var ay = a[1];\n        var az = a[2];\n        var aw = a[3];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        out[2] = az + t * (b[2] - az);\n        out[3] = aw + t * (b[3] - aw);\n        return out;\n    }\n    /**\n     * Generates a random vector with the given scale\n     *\n     * @param {vec4} out the receiving vector\n     * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n     * @returns {vec4} out\n     */\n    function random(out, scale) {\n        scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n        // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n        // http://projecteuclid.org/euclid.aoms/1177692644;\n        var v1, v2, v3, v4;\n        var s1, s2;\n        do {\n            v1 = glMatrix.RANDOM() * 2 - 1;\n            v2 = glMatrix.RANDOM() * 2 - 1;\n            s1 = v1 * v1 + v2 * v2;\n        } while (s1 >= 1);\n        do {\n            v3 = glMatrix.RANDOM() * 2 - 1;\n            v4 = glMatrix.RANDOM() * 2 - 1;\n            s2 = v3 * v3 + v4 * v4;\n        } while (s2 >= 1);\n        var d = Math.sqrt((1 - s1) / s2);\n        out[0] = scale * v1;\n        out[1] = scale * v2;\n        out[2] = scale * v3 * d;\n        out[3] = scale * v4 * d;\n        return out;\n    }\n    /**\n     * Transforms the vec4 with a mat4.\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the vector to transform\n     * @param {mat4} m matrix to transform with\n     * @returns {vec4} out\n     */\n    function transformMat4(out, a, m) {\n        var x = a[0], y = a[1], z = a[2], w = a[3];\n        out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n        out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n        out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n        out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n        return out;\n    }\n    /**\n     * Transforms the vec4 with a quat\n     *\n     * @param {vec4} out the receiving vector\n     * @param {vec4} a the vector to transform\n     * @param {quat} q quaternion to transform with\n     * @returns {vec4} out\n     */\n    function transformQuat(out, a, q) {\n        var x = a[0], y = a[1], z = a[2];\n        var qx = q[0], qy = q[1], qz = q[2], qw = q[3]; // calculate quat * vec\n        var ix = qw * x + qy * z - qz * y;\n        var iy = qw * y + qz * x - qx * z;\n        var iz = qw * z + qx * y - qy * x;\n        var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n        out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set the components of a vec4 to zero\n     *\n     * @param {vec4} out the receiving vector\n     * @returns {vec4} out\n     */\n    function zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        out[3] = 0.0;\n        return out;\n    }\n    /**\n     * Returns a string representation of a vector\n     *\n     * @param {vec4} a vector to represent as a string\n     * @returns {String} string representation of the vector\n     */\n    function str(a) {\n        return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n    }\n    /**\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n     *\n     * @param {vec4} a The first vector.\n     * @param {vec4} b The second vector.\n     * @returns {Boolean} True if the vectors are equal, false otherwise.\n     */\n    function exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     *\n     * @param {vec4} a The first vector.\n     * @param {vec4} b The second vector.\n     * @returns {Boolean} True if the vectors are equal, false otherwise.\n     */\n    function equals(a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n        return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n    }\n    /**\n     * Alias for {@link vec4.subtract}\n     * @function\n     */\n    var sub = subtract;\n    /**\n     * Alias for {@link vec4.multiply}\n     * @function\n     */\n    exports.sub = sub;\n    var mul = multiply;\n    /**\n     * Alias for {@link vec4.divide}\n     * @function\n     */\n    exports.mul = mul;\n    var div = divide;\n    /**\n     * Alias for {@link vec4.distance}\n     * @function\n     */\n    exports.div = div;\n    var dist = distance;\n    /**\n     * Alias for {@link vec4.squaredDistance}\n     * @function\n     */\n    exports.dist = dist;\n    var sqrDist = squaredDistance;\n    /**\n     * Alias for {@link vec4.length}\n     * @function\n     */\n    exports.sqrDist = sqrDist;\n    var len = length;\n    /**\n     * Alias for {@link vec4.squaredLength}\n     * @function\n     */\n    exports.len = len;\n    var sqrLen = squaredLength;\n    /**\n     * Perform some operation over an array of vec4s.\n     *\n     * @param {Array} a the array of vectors to iterate over\n     * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n     * @param {Number} offset Number of elements to skip at the beginning of the array\n     * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n     * @param {Function} fn Function to call for each vector in the array\n     * @param {Object} [arg] additional argument to pass to fn\n     * @returns {Array} a\n     * @function\n     */\n    exports.sqrLen = sqrLen;\n    var forEach = function () {\n        var vec = create();\n        return function (a, stride, offset, count, fn, arg) {\n            var i, l;\n            if (!stride) {\n                stride = 4;\n            }\n            if (!offset) {\n                offset = 0;\n            }\n            if (count) {\n                l = Math.min(count * stride + offset, a.length);\n            }\n            else {\n                l = a.length;\n            }\n            for (i = offset; i < l; i += stride) {\n                vec[0] = a[i];\n                vec[1] = a[i + 1];\n                vec[2] = a[i + 2];\n                vec[3] = a[i + 3];\n                fn(vec, vec, arg);\n                a[i] = vec[0];\n                a[i + 1] = vec[1];\n                a[i + 2] = vec[2];\n                a[i + 3] = vec[3];\n            }\n            return a;\n        };\n    }();\n    exports.forEach = forEach;\n}\n","/* gl-matrix/cjs/quat2.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.clone = clone;\n    exports.fromValues = fromValues;\n    exports.fromRotationTranslationValues = fromRotationTranslationValues;\n    exports.fromRotationTranslation = fromRotationTranslation;\n    exports.fromTranslation = fromTranslation;\n    exports.fromRotation = fromRotation;\n    exports.fromMat4 = fromMat4;\n    exports.copy = copy;\n    exports.identity = identity;\n    exports.set = set;\n    exports.getDual = getDual;\n    exports.setDual = setDual;\n    exports.getTranslation = getTranslation;\n    exports.translate = translate;\n    exports.rotateX = rotateX;\n    exports.rotateY = rotateY;\n    exports.rotateZ = rotateZ;\n    exports.rotateByQuatAppend = rotateByQuatAppend;\n    exports.rotateByQuatPrepend = rotateByQuatPrepend;\n    exports.rotateAroundAxis = rotateAroundAxis;\n    exports.add = add;\n    exports.multiply = multiply;\n    exports.scale = scale;\n    exports.lerp = lerp;\n    exports.invert = invert;\n    exports.conjugate = conjugate;\n    exports.normalize = normalize;\n    exports.str = str;\n    exports.exactEquals = exactEquals;\n    exports.equals = equals;\n    exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.dot = exports.mul = exports.setReal = exports.getReal = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    var quat = _interopRequireWildcard(require(\"fb0a790f46\") /* ./quat.js */);\n    var mat4 = _interopRequireWildcard(require(\"04eeb2ead8\") /* ./mat4.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * Dual Quaternion<br>\n     * Format: [real, dual]<br>\n     * Quaternion format: XYZW<br>\n     * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n     * @module quat2\n     */\n    /**\n     * Creates a new identity dual quat\n     *\n     * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n     */\n    function create() {\n        var dq = new glMatrix.ARRAY_TYPE(8);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            dq[0] = 0;\n            dq[1] = 0;\n            dq[2] = 0;\n            dq[4] = 0;\n            dq[5] = 0;\n            dq[6] = 0;\n            dq[7] = 0;\n        }\n        dq[3] = 1;\n        return dq;\n    }\n    /**\n     * Creates a new quat initialized with values from an existing quaternion\n     *\n     * @param {quat2} a dual quaternion to clone\n     * @returns {quat2} new dual quaternion\n     * @function\n     */\n    function clone(a) {\n        var dq = new glMatrix.ARRAY_TYPE(8);\n        dq[0] = a[0];\n        dq[1] = a[1];\n        dq[2] = a[2];\n        dq[3] = a[3];\n        dq[4] = a[4];\n        dq[5] = a[5];\n        dq[6] = a[6];\n        dq[7] = a[7];\n        return dq;\n    }\n    /**\n     * Creates a new dual quat initialized with the given values\n     *\n     * @param {Number} x1 X component\n     * @param {Number} y1 Y component\n     * @param {Number} z1 Z component\n     * @param {Number} w1 W component\n     * @param {Number} x2 X component\n     * @param {Number} y2 Y component\n     * @param {Number} z2 Z component\n     * @param {Number} w2 W component\n     * @returns {quat2} new dual quaternion\n     * @function\n     */\n    function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n        var dq = new glMatrix.ARRAY_TYPE(8);\n        dq[0] = x1;\n        dq[1] = y1;\n        dq[2] = z1;\n        dq[3] = w1;\n        dq[4] = x2;\n        dq[5] = y2;\n        dq[6] = z2;\n        dq[7] = w2;\n        return dq;\n    }\n    /**\n     * Creates a new dual quat from the given values (quat and translation)\n     *\n     * @param {Number} x1 X component\n     * @param {Number} y1 Y component\n     * @param {Number} z1 Z component\n     * @param {Number} w1 W component\n     * @param {Number} x2 X component (translation)\n     * @param {Number} y2 Y component (translation)\n     * @param {Number} z2 Z component (translation)\n     * @returns {quat2} new dual quaternion\n     * @function\n     */\n    function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n        var dq = new glMatrix.ARRAY_TYPE(8);\n        dq[0] = x1;\n        dq[1] = y1;\n        dq[2] = z1;\n        dq[3] = w1;\n        var ax = x2 * 0.5, ay = y2 * 0.5, az = z2 * 0.5;\n        dq[4] = ax * w1 + ay * z1 - az * y1;\n        dq[5] = ay * w1 + az * x1 - ax * z1;\n        dq[6] = az * w1 + ax * y1 - ay * x1;\n        dq[7] = -ax * x1 - ay * y1 - az * z1;\n        return dq;\n    }\n    /**\n     * Creates a dual quat from a quaternion and a translation\n     *\n     * @param {quat2} dual quaternion receiving operation result\n     * @param {quat} q a normalized quaternion\n     * @param {vec3} t tranlation vector\n     * @returns {quat2} dual quaternion receiving operation result\n     * @function\n     */\n    function fromRotationTranslation(out, q, t) {\n        var ax = t[0] * 0.5, ay = t[1] * 0.5, az = t[2] * 0.5, bx = q[0], by = q[1], bz = q[2], bw = q[3];\n        out[0] = bx;\n        out[1] = by;\n        out[2] = bz;\n        out[3] = bw;\n        out[4] = ax * bw + ay * bz - az * by;\n        out[5] = ay * bw + az * bx - ax * bz;\n        out[6] = az * bw + ax * by - ay * bx;\n        out[7] = -ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Creates a dual quat from a translation\n     *\n     * @param {quat2} dual quaternion receiving operation result\n     * @param {vec3} t translation vector\n     * @returns {quat2} dual quaternion receiving operation result\n     * @function\n     */\n    function fromTranslation(out, t) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = t[0] * 0.5;\n        out[5] = t[1] * 0.5;\n        out[6] = t[2] * 0.5;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Creates a dual quat from a quaternion\n     *\n     * @param {quat2} dual quaternion receiving operation result\n     * @param {quat} q the quaternion\n     * @returns {quat2} dual quaternion receiving operation result\n     * @function\n     */\n    function fromRotation(out, q) {\n        out[0] = q[0];\n        out[1] = q[1];\n        out[2] = q[2];\n        out[3] = q[3];\n        out[4] = 0;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Creates a new dual quat from a matrix (4x4)\n     *\n     * @param {quat2} out the dual quaternion\n     * @param {mat4} a the matrix\n     * @returns {quat2} dual quat receiving operation result\n     * @function\n     */\n    function fromMat4(out, a) {\n        //TODO Optimize this\n        var outer = quat.create();\n        mat4.getRotation(outer, a);\n        var t = new glMatrix.ARRAY_TYPE(3);\n        mat4.getTranslation(t, a);\n        fromRotationTranslation(out, outer, t);\n        return out;\n    }\n    /**\n     * Copy the values from one dual quat to another\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the source dual quaternion\n     * @returns {quat2} out\n     * @function\n     */\n    function copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        return out;\n    }\n    /**\n     * Set a dual quat to the identity dual quaternion\n     *\n     * @param {quat2} out the receiving quaternion\n     * @returns {quat2} out\n     */\n    function identity(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = 0;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Set the components of a dual quat to the given values\n     *\n     * @param {quat2} out the receiving quaternion\n     * @param {Number} x1 X component\n     * @param {Number} y1 Y component\n     * @param {Number} z1 Z component\n     * @param {Number} w1 W component\n     * @param {Number} x2 X component\n     * @param {Number} y2 Y component\n     * @param {Number} z2 Z component\n     * @param {Number} w2 W component\n     * @returns {quat2} out\n     * @function\n     */\n    function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n        out[0] = x1;\n        out[1] = y1;\n        out[2] = z1;\n        out[3] = w1;\n        out[4] = x2;\n        out[5] = y2;\n        out[6] = z2;\n        out[7] = w2;\n        return out;\n    }\n    /**\n     * Gets the real part of a dual quat\n     * @param  {quat} out real part\n     * @param  {quat2} a Dual Quaternion\n     * @return {quat} real part\n     */\n    var getReal = quat.copy;\n    /**\n     * Gets the dual part of a dual quat\n     * @param  {quat} out dual part\n     * @param  {quat2} a Dual Quaternion\n     * @return {quat} dual part\n     */\n    exports.getReal = getReal;\n    function getDual(out, a) {\n        out[0] = a[4];\n        out[1] = a[5];\n        out[2] = a[6];\n        out[3] = a[7];\n        return out;\n    }\n    /**\n     * Set the real component of a dual quat to the given quaternion\n     *\n     * @param {quat2} out the receiving quaternion\n     * @param {quat} q a quaternion representing the real part\n     * @returns {quat2} out\n     * @function\n     */\n    var setReal = quat.copy;\n    /**\n     * Set the dual component of a dual quat to the given quaternion\n     *\n     * @param {quat2} out the receiving quaternion\n     * @param {quat} q a quaternion representing the dual part\n     * @returns {quat2} out\n     * @function\n     */\n    exports.setReal = setReal;\n    function setDual(out, q) {\n        out[4] = q[0];\n        out[5] = q[1];\n        out[6] = q[2];\n        out[7] = q[3];\n        return out;\n    }\n    /**\n     * Gets the translation of a normalized dual quat\n     * @param  {vec3} out translation\n     * @param  {quat2} a Dual Quaternion to be decomposed\n     * @return {vec3} translation\n     */\n    function getTranslation(out, a) {\n        var ax = a[4], ay = a[5], az = a[6], aw = a[7], bx = -a[0], by = -a[1], bz = -a[2], bw = a[3];\n        out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n        out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n        out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n        return out;\n    }\n    /**\n     * Translates a dual quat by the given vector\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the dual quaternion to translate\n     * @param {vec3} v vector to translate by\n     * @returns {quat2} out\n     */\n    function translate(out, a, v) {\n        var ax1 = a[0], ay1 = a[1], az1 = a[2], aw1 = a[3], bx1 = v[0] * 0.5, by1 = v[1] * 0.5, bz1 = v[2] * 0.5, ax2 = a[4], ay2 = a[5], az2 = a[6], aw2 = a[7];\n        out[0] = ax1;\n        out[1] = ay1;\n        out[2] = az1;\n        out[3] = aw1;\n        out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n        out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n        out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n        out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n        return out;\n    }\n    /**\n     * Rotates a dual quat around the X axis\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the dual quaternion to rotate\n     * @param {number} rad how far should the rotation be\n     * @returns {quat2} out\n     */\n    function rotateX(out, a, rad) {\n        var bx = -a[0], by = -a[1], bz = -a[2], bw = a[3], ax = a[4], ay = a[5], az = a[6], aw = a[7], ax1 = ax * bw + aw * bx + ay * bz - az * by, ay1 = ay * bw + aw * by + az * bx - ax * bz, az1 = az * bw + aw * bz + ax * by - ay * bx, aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        quat.rotateX(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a dual quat around the Y axis\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the dual quaternion to rotate\n     * @param {number} rad how far should the rotation be\n     * @returns {quat2} out\n     */\n    function rotateY(out, a, rad) {\n        var bx = -a[0], by = -a[1], bz = -a[2], bw = a[3], ax = a[4], ay = a[5], az = a[6], aw = a[7], ax1 = ax * bw + aw * bx + ay * bz - az * by, ay1 = ay * bw + aw * by + az * bx - ax * bz, az1 = az * bw + aw * bz + ax * by - ay * bx, aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        quat.rotateY(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a dual quat around the Z axis\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the dual quaternion to rotate\n     * @param {number} rad how far should the rotation be\n     * @returns {quat2} out\n     */\n    function rotateZ(out, a, rad) {\n        var bx = -a[0], by = -a[1], bz = -a[2], bw = a[3], ax = a[4], ay = a[5], az = a[6], aw = a[7], ax1 = ax * bw + aw * bx + ay * bz - az * by, ay1 = ay * bw + aw * by + az * bx - ax * bz, az1 = az * bw + aw * bz + ax * by - ay * bx, aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        quat.rotateZ(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a dual quat by a given quaternion (a * q)\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the dual quaternion to rotate\n     * @param {quat} q quaternion to rotate by\n     * @returns {quat2} out\n     */\n    function rotateByQuatAppend(out, a, q) {\n        var qx = q[0], qy = q[1], qz = q[2], qw = q[3], ax = a[0], ay = a[1], az = a[2], aw = a[3];\n        out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n        out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n        out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n        out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n        ax = a[4];\n        ay = a[5];\n        az = a[6];\n        aw = a[7];\n        out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n        out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n        out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n        out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n        return out;\n    }\n    /**\n     * Rotates a dual quat by a given quaternion (q * a)\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat} q quaternion to rotate by\n     * @param {quat2} a the dual quaternion to rotate\n     * @returns {quat2} out\n     */\n    function rotateByQuatPrepend(out, q, a) {\n        var qx = q[0], qy = q[1], qz = q[2], qw = q[3], bx = a[0], by = a[1], bz = a[2], bw = a[3];\n        out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n        out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n        out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n        out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n        bx = a[4];\n        by = a[5];\n        bz = a[6];\n        bw = a[7];\n        out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n        out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n        out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n        out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n        return out;\n    }\n    /**\n     * Rotates a dual quat around a given axis. Does the normalisation automatically\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the dual quaternion to rotate\n     * @param {vec3} axis the axis to rotate around\n     * @param {Number} rad how far the rotation should be\n     * @returns {quat2} out\n     */\n    function rotateAroundAxis(out, a, axis, rad) {\n        //Special case for rad = 0\n        if (Math.abs(rad) < glMatrix.EPSILON) {\n            return copy(out, a);\n        }\n        var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n        rad = rad * 0.5;\n        var s = Math.sin(rad);\n        var bx = s * axis[0] / axisLength;\n        var by = s * axis[1] / axisLength;\n        var bz = s * axis[2] / axisLength;\n        var bw = Math.cos(rad);\n        var ax1 = a[0], ay1 = a[1], az1 = a[2], aw1 = a[3];\n        out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        var ax = a[4], ay = a[5], az = a[6], aw = a[7];\n        out[4] = ax * bw + aw * bx + ay * bz - az * by;\n        out[5] = ay * bw + aw * by + az * bx - ax * bz;\n        out[6] = az * bw + aw * bz + ax * by - ay * bx;\n        out[7] = aw * bw - ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Adds two dual quat's\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the first operand\n     * @param {quat2} b the second operand\n     * @returns {quat2} out\n     * @function\n     */\n    function add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        return out;\n    }\n    /**\n     * Multiplies two dual quat's\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a the first operand\n     * @param {quat2} b the second operand\n     * @returns {quat2} out\n     */\n    function multiply(out, a, b) {\n        var ax0 = a[0], ay0 = a[1], az0 = a[2], aw0 = a[3], bx1 = b[4], by1 = b[5], bz1 = b[6], bw1 = b[7], ax1 = a[4], ay1 = a[5], az1 = a[6], aw1 = a[7], bx0 = b[0], by0 = b[1], bz0 = b[2], bw0 = b[3];\n        out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n        out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n        out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n        out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n        out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n        out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n        out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n        out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n        return out;\n    }\n    /**\n     * Alias for {@link quat2.multiply}\n     * @function\n     */\n    var mul = multiply;\n    /**\n     * Scales a dual quat by a scalar number\n     *\n     * @param {quat2} out the receiving dual quat\n     * @param {quat2} a the dual quat to scale\n     * @param {Number} b amount to scale the dual quat by\n     * @returns {quat2} out\n     * @function\n     */\n    exports.mul = mul;\n    function scale(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two dual quat's (The dot product of the real parts)\n     *\n     * @param {quat2} a the first operand\n     * @param {quat2} b the second operand\n     * @returns {Number} dot product of a and b\n     * @function\n     */\n    var dot = quat.dot;\n    /**\n     * Performs a linear interpolation between two dual quats's\n     * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n     *\n     * @param {quat2} out the receiving dual quat\n     * @param {quat2} a the first operand\n     * @param {quat2} b the second operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {quat2} out\n     */\n    exports.dot = dot;\n    function lerp(out, a, b, t) {\n        var mt = 1 - t;\n        if (dot(a, b) < 0)\n            t = -t;\n        out[0] = a[0] * mt + b[0] * t;\n        out[1] = a[1] * mt + b[1] * t;\n        out[2] = a[2] * mt + b[2] * t;\n        out[3] = a[3] * mt + b[3] * t;\n        out[4] = a[4] * mt + b[4] * t;\n        out[5] = a[5] * mt + b[5] * t;\n        out[6] = a[6] * mt + b[6] * t;\n        out[7] = a[7] * mt + b[7] * t;\n        return out;\n    }\n    /**\n     * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a dual quat to calculate inverse of\n     * @returns {quat2} out\n     */\n    function invert(out, a) {\n        var sqlen = squaredLength(a);\n        out[0] = -a[0] / sqlen;\n        out[1] = -a[1] / sqlen;\n        out[2] = -a[2] / sqlen;\n        out[3] = a[3] / sqlen;\n        out[4] = -a[4] / sqlen;\n        out[5] = -a[5] / sqlen;\n        out[6] = -a[6] / sqlen;\n        out[7] = a[7] / sqlen;\n        return out;\n    }\n    /**\n     * Calculates the conjugate of a dual quat\n     * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n     *\n     * @param {quat2} out the receiving quaternion\n     * @param {quat2} a quat to calculate conjugate of\n     * @returns {quat2} out\n     */\n    function conjugate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a[3];\n        out[4] = -a[4];\n        out[5] = -a[5];\n        out[6] = -a[6];\n        out[7] = a[7];\n        return out;\n    }\n    /**\n     * Calculates the length of a dual quat\n     *\n     * @param {quat2} a dual quat to calculate length of\n     * @returns {Number} length of a\n     * @function\n     */\n    var length = quat.length;\n    /**\n     * Alias for {@link quat2.length}\n     * @function\n     */\n    exports.length = length;\n    var len = length;\n    /**\n     * Calculates the squared length of a dual quat\n     *\n     * @param {quat2} a dual quat to calculate squared length of\n     * @returns {Number} squared length of a\n     * @function\n     */\n    exports.len = len;\n    var squaredLength = quat.squaredLength;\n    /**\n     * Alias for {@link quat2.squaredLength}\n     * @function\n     */\n    exports.squaredLength = squaredLength;\n    var sqrLen = squaredLength;\n    /**\n     * Normalize a dual quat\n     *\n     * @param {quat2} out the receiving dual quaternion\n     * @param {quat2} a dual quaternion to normalize\n     * @returns {quat2} out\n     * @function\n     */\n    exports.sqrLen = sqrLen;\n    function normalize(out, a) {\n        var magnitude = squaredLength(a);\n        if (magnitude > 0) {\n            magnitude = Math.sqrt(magnitude);\n            var a0 = a[0] / magnitude;\n            var a1 = a[1] / magnitude;\n            var a2 = a[2] / magnitude;\n            var a3 = a[3] / magnitude;\n            var b0 = a[4];\n            var b1 = a[5];\n            var b2 = a[6];\n            var b3 = a[7];\n            var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n            out[0] = a0;\n            out[1] = a1;\n            out[2] = a2;\n            out[3] = a3;\n            out[4] = (b0 - a0 * a_dot_b) / magnitude;\n            out[5] = (b1 - a1 * a_dot_b) / magnitude;\n            out[6] = (b2 - a2 * a_dot_b) / magnitude;\n            out[7] = (b3 - a3 * a_dot_b) / magnitude;\n        }\n        return out;\n    }\n    /**\n     * Returns a string representation of a dual quatenion\n     *\n     * @param {quat2} a dual quaternion to represent as a string\n     * @returns {String} string representation of the dual quat\n     */\n    function str(a) {\n        return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n    }\n    /**\n     * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n     *\n     * @param {quat2} a the first dual quaternion.\n     * @param {quat2} b the second dual quaternion.\n     * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n     */\n    function exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n    }\n    /**\n     * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n     *\n     * @param {quat2} a the first dual quat.\n     * @param {quat2} b the second dual quat.\n     * @returns {Boolean} true if the dual quats are equal, false otherwise.\n     */\n    function equals(a, b) {\n        var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7];\n        var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7];\n        return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n    }\n}\n","/* gl-matrix/cjs/vec2.js */ function _(require, module, exports) {\n    exports.create = create;\n    exports.clone = clone;\n    exports.fromValues = fromValues;\n    exports.copy = copy;\n    exports.set = set;\n    exports.add = add;\n    exports.subtract = subtract;\n    exports.multiply = multiply;\n    exports.divide = divide;\n    exports.ceil = ceil;\n    exports.floor = floor;\n    exports.min = min;\n    exports.max = max;\n    exports.round = round;\n    exports.scale = scale;\n    exports.scaleAndAdd = scaleAndAdd;\n    exports.distance = distance;\n    exports.squaredDistance = squaredDistance;\n    exports.length = length;\n    exports.squaredLength = squaredLength;\n    exports.negate = negate;\n    exports.inverse = inverse;\n    exports.normalize = normalize;\n    exports.dot = dot;\n    exports.cross = cross;\n    exports.lerp = lerp;\n    exports.random = random;\n    exports.transformMat2 = transformMat2;\n    exports.transformMat2d = transformMat2d;\n    exports.transformMat3 = transformMat3;\n    exports.transformMat4 = transformMat4;\n    exports.rotate = rotate;\n    exports.angle = angle;\n    exports.zero = zero;\n    exports.str = str;\n    exports.exactEquals = exactEquals;\n    exports.equals = equals;\n    exports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n    var glMatrix = _interopRequireWildcard(require(\"c6b4e451bc\") /* ./common.js */);\n    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) {\n        return obj;\n    }\n    else {\n        var newObj = {};\n        if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                    if (desc.get || desc.set) {\n                        Object.defineProperty(newObj, key, desc);\n                    }\n                    else {\n                        newObj[key] = obj[key];\n                    }\n                }\n            }\n        }\n        newObj[\"default\"] = obj;\n        return newObj;\n    } }\n    /**\n     * 2 Dimensional Vector\n     * @module vec2\n     */\n    /**\n     * Creates a new, empty vec2\n     *\n     * @returns {vec2} a new 2D vector\n     */\n    function create() {\n        var out = new glMatrix.ARRAY_TYPE(2);\n        if (glMatrix.ARRAY_TYPE != Float32Array) {\n            out[0] = 0;\n            out[1] = 0;\n        }\n        return out;\n    }\n    /**\n     * Creates a new vec2 initialized with values from an existing vector\n     *\n     * @param {vec2} a vector to clone\n     * @returns {vec2} a new 2D vector\n     */\n    function clone(a) {\n        var out = new glMatrix.ARRAY_TYPE(2);\n        out[0] = a[0];\n        out[1] = a[1];\n        return out;\n    }\n    /**\n     * Creates a new vec2 initialized with the given values\n     *\n     * @param {Number} x X component\n     * @param {Number} y Y component\n     * @returns {vec2} a new 2D vector\n     */\n    function fromValues(x, y) {\n        var out = new glMatrix.ARRAY_TYPE(2);\n        out[0] = x;\n        out[1] = y;\n        return out;\n    }\n    /**\n     * Copy the values from one vec2 to another\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the source vector\n     * @returns {vec2} out\n     */\n    function copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        return out;\n    }\n    /**\n     * Set the components of a vec2 to the given values\n     *\n     * @param {vec2} out the receiving vector\n     * @param {Number} x X component\n     * @param {Number} y Y component\n     * @returns {vec2} out\n     */\n    function set(out, x, y) {\n        out[0] = x;\n        out[1] = y;\n        return out;\n    }\n    /**\n     * Adds two vec2's\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {vec2} out\n     */\n    function add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {vec2} out\n     */\n    function subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        return out;\n    }\n    /**\n     * Multiplies two vec2's\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {vec2} out\n     */\n    function multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        return out;\n    }\n    /**\n     * Divides two vec2's\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {vec2} out\n     */\n    function divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        return out;\n    }\n    /**\n     * Math.ceil the components of a vec2\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a vector to ceil\n     * @returns {vec2} out\n     */\n    function ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a vec2\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a vector to floor\n     * @returns {vec2} out\n     */\n    function floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two vec2's\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {vec2} out\n     */\n    function min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two vec2's\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {vec2} out\n     */\n    function max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        return out;\n    }\n    /**\n     * Math.round the components of a vec2\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a vector to round\n     * @returns {vec2} out\n     */\n    function round(out, a) {\n        out[0] = Math.round(a[0]);\n        out[1] = Math.round(a[1]);\n        return out;\n    }\n    /**\n     * Scales a vec2 by a scalar number\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the vector to scale\n     * @param {Number} b amount to scale the vector by\n     * @returns {vec2} out\n     */\n    function scale(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        return out;\n    }\n    /**\n     * Adds two vec2's after scaling the second operand by a scalar value\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @param {Number} scale the amount to scale b by before adding\n     * @returns {vec2} out\n     */\n    function scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two vec2's\n     *\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {Number} distance between a and b\n     */\n    function distance(a, b) {\n        var x = b[0] - a[0], y = b[1] - a[1];\n        return Math.hypot(x, y);\n    }\n    /**\n     * Calculates the squared euclidian distance between two vec2's\n     *\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {Number} squared distance between a and b\n     */\n    function squaredDistance(a, b) {\n        var x = b[0] - a[0], y = b[1] - a[1];\n        return x * x + y * y;\n    }\n    /**\n     * Calculates the length of a vec2\n     *\n     * @param {vec2} a vector to calculate length of\n     * @returns {Number} length of a\n     */\n    function length(a) {\n        var x = a[0], y = a[1];\n        return Math.hypot(x, y);\n    }\n    /**\n     * Calculates the squared length of a vec2\n     *\n     * @param {vec2} a vector to calculate squared length of\n     * @returns {Number} squared length of a\n     */\n    function squaredLength(a) {\n        var x = a[0], y = a[1];\n        return x * x + y * y;\n    }\n    /**\n     * Negates the components of a vec2\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a vector to negate\n     * @returns {vec2} out\n     */\n    function negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a vec2\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a vector to invert\n     * @returns {vec2} out\n     */\n    function inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        return out;\n    }\n    /**\n     * Normalize a vec2\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a vector to normalize\n     * @returns {vec2} out\n     */\n    function normalize(out, a) {\n        var x = a[0], y = a[1];\n        var len = x * x + y * y;\n        if (len > 0) {\n            //TODO: evaluate use of glm_invsqrt here?\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two vec2's\n     *\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {Number} dot product of a and b\n     */\n    function dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n    /**\n     * Computes the cross product of two vec2's\n     * Note that the cross product must by definition produce a 3D vector\n     *\n     * @param {vec3} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @returns {vec3} out\n     */\n    function cross(out, a, b) {\n        var z = a[0] * b[1] - a[1] * b[0];\n        out[0] = out[1] = 0;\n        out[2] = z;\n        return out;\n    }\n    /**\n     * Performs a linear interpolation between two vec2's\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the first operand\n     * @param {vec2} b the second operand\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n     * @returns {vec2} out\n     */\n    function lerp(out, a, b, t) {\n        var ax = a[0], ay = a[1];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        return out;\n    }\n    /**\n     * Generates a random vector with the given scale\n     *\n     * @param {vec2} out the receiving vector\n     * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n     * @returns {vec2} out\n     */\n    function random(out, scale) {\n        scale = scale || 1.0;\n        var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n        out[0] = Math.cos(r) * scale;\n        out[1] = Math.sin(r) * scale;\n        return out;\n    }\n    /**\n     * Transforms the vec2 with a mat2\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the vector to transform\n     * @param {mat2} m matrix to transform with\n     * @returns {vec2} out\n     */\n    function transformMat2(out, a, m) {\n        var x = a[0], y = a[1];\n        out[0] = m[0] * x + m[2] * y;\n        out[1] = m[1] * x + m[3] * y;\n        return out;\n    }\n    /**\n     * Transforms the vec2 with a mat2d\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the vector to transform\n     * @param {mat2d} m matrix to transform with\n     * @returns {vec2} out\n     */\n    function transformMat2d(out, a, m) {\n        var x = a[0], y = a[1];\n        out[0] = m[0] * x + m[2] * y + m[4];\n        out[1] = m[1] * x + m[3] * y + m[5];\n        return out;\n    }\n    /**\n     * Transforms the vec2 with a mat3\n     * 3rd vector component is implicitly '1'\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the vector to transform\n     * @param {mat3} m matrix to transform with\n     * @returns {vec2} out\n     */\n    function transformMat3(out, a, m) {\n        var x = a[0], y = a[1];\n        out[0] = m[0] * x + m[3] * y + m[6];\n        out[1] = m[1] * x + m[4] * y + m[7];\n        return out;\n    }\n    /**\n     * Transforms the vec2 with a mat4\n     * 3rd vector component is implicitly '0'\n     * 4th vector component is implicitly '1'\n     *\n     * @param {vec2} out the receiving vector\n     * @param {vec2} a the vector to transform\n     * @param {mat4} m matrix to transform with\n     * @returns {vec2} out\n     */\n    function transformMat4(out, a, m) {\n        var x = a[0];\n        var y = a[1];\n        out[0] = m[0] * x + m[4] * y + m[12];\n        out[1] = m[1] * x + m[5] * y + m[13];\n        return out;\n    }\n    /**\n     * Rotate a 2D vector\n     * @param {vec2} out The receiving vec2\n     * @param {vec2} a The vec2 point to rotate\n     * @param {vec2} b The origin of the rotation\n     * @param {Number} c The angle of rotation\n     * @returns {vec2} out\n     */\n    function rotate(out, a, b, c) {\n        //Translate point to the origin\n        var p0 = a[0] - b[0], p1 = a[1] - b[1], sinC = Math.sin(c), cosC = Math.cos(c); //perform rotation and translate to correct position\n        out[0] = p0 * cosC - p1 * sinC + b[0];\n        out[1] = p0 * sinC + p1 * cosC + b[1];\n        return out;\n    }\n    /**\n     * Get the angle between two 2D vectors\n     * @param {vec2} a The first operand\n     * @param {vec2} b The second operand\n     * @returns {Number} The angle in radians\n     */\n    function angle(a, b) {\n        var x1 = a[0], y1 = a[1], x2 = b[0], y2 = b[1];\n        var len1 = x1 * x1 + y1 * y1;\n        if (len1 > 0) {\n            //TODO: evaluate use of glm_invsqrt here?\n            len1 = 1 / Math.sqrt(len1);\n        }\n        var len2 = x2 * x2 + y2 * y2;\n        if (len2 > 0) {\n            //TODO: evaluate use of glm_invsqrt here?\n            len2 = 1 / Math.sqrt(len2);\n        }\n        var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n        if (cosine > 1.0) {\n            return 0;\n        }\n        else if (cosine < -1.0) {\n            return Math.PI;\n        }\n        else {\n            return Math.acos(cosine);\n        }\n    }\n    /**\n     * Set the components of a vec2 to zero\n     *\n     * @param {vec2} out the receiving vector\n     * @returns {vec2} out\n     */\n    function zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        return out;\n    }\n    /**\n     * Returns a string representation of a vector\n     *\n     * @param {vec2} a vector to represent as a string\n     * @returns {String} string representation of the vector\n     */\n    function str(a) {\n        return 'vec2(' + a[0] + ', ' + a[1] + ')';\n    }\n    /**\n     * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n     *\n     * @param {vec2} a The first vector.\n     * @param {vec2} b The second vector.\n     * @returns {Boolean} True if the vectors are equal, false otherwise.\n     */\n    function exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     *\n     * @param {vec2} a The first vector.\n     * @param {vec2} b The second vector.\n     * @returns {Boolean} True if the vectors are equal, false otherwise.\n     */\n    function equals(a, b) {\n        var a0 = a[0], a1 = a[1];\n        var b0 = b[0], b1 = b[1];\n        return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n    }\n    /**\n     * Alias for {@link vec2.length}\n     * @function\n     */\n    var len = length;\n    /**\n     * Alias for {@link vec2.subtract}\n     * @function\n     */\n    exports.len = len;\n    var sub = subtract;\n    /**\n     * Alias for {@link vec2.multiply}\n     * @function\n     */\n    exports.sub = sub;\n    var mul = multiply;\n    /**\n     * Alias for {@link vec2.divide}\n     * @function\n     */\n    exports.mul = mul;\n    var div = divide;\n    /**\n     * Alias for {@link vec2.distance}\n     * @function\n     */\n    exports.div = div;\n    var dist = distance;\n    /**\n     * Alias for {@link vec2.squaredDistance}\n     * @function\n     */\n    exports.dist = dist;\n    var sqrDist = squaredDistance;\n    /**\n     * Alias for {@link vec2.squaredLength}\n     * @function\n     */\n    exports.sqrDist = sqrDist;\n    var sqrLen = squaredLength;\n    /**\n     * Perform some operation over an array of vec2s.\n     *\n     * @param {Array} a the array of vectors to iterate over\n     * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n     * @param {Number} offset Number of elements to skip at the beginning of the array\n     * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n     * @param {Function} fn Function to call for each vector in the array\n     * @param {Object} [arg] additional argument to pass to fn\n     * @returns {Array} a\n     * @function\n     */\n    exports.sqrLen = sqrLen;\n    var forEach = function () {\n        var vec = create();\n        return function (a, stride, offset, count, fn, arg) {\n            var i, l;\n            if (!stride) {\n                stride = 2;\n            }\n            if (!offset) {\n                offset = 0;\n            }\n            if (count) {\n                l = Math.min(count * stride + offset, a.length);\n            }\n            else {\n                l = a.length;\n            }\n            for (i = offset; i < l; i += stride) {\n                vec[0] = a[i];\n                vec[1] = a[i + 1];\n                fn(vec, vec, arg);\n                a[i] = vec[0];\n                a[i + 1] = vec[1];\n            }\n            return a;\n        };\n    }();\n    exports.forEach = forEach;\n}\n"]}